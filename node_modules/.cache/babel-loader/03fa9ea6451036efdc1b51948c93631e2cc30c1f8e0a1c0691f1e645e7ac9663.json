{"ast":null,"code":"// src/services/EmailService.js\nimport emailjs from 'emailjs-com';\n\n// Use environment variables instead of hardcoded values\n// You should set these up in your .env file\nconst EMAILJS_USER_ID = process.env.REACT_APP_EMAILJS_USER_ID || 'g0Zv3mEDUVljCuJyL';\nconst EMAILJS_SERVICE_ID = process.env.REACT_APP_EMAILJS_SERVICE_ID || 'service_uk2jyu5';\nconst EMAILJS_TEMPLATE_ID = process.env.REACT_APP_EMAILJS_TEMPLATE_ID || 'template_kjrzsq6';\n\n// Initialize EmailJS with public key only\nif (EMAILJS_USER_ID !== 'g0Zv3mEDUVljCuJyL') {\n  emailjs.init(EMAILJS_USER_ID);\n}\n\n// Function to send budget alert email\nexport const sendBudgetAlertEmail = async (user, category, budget, spent) => {\n  // Verify that we have a user with an email address\n  if (!user || !user.email) {\n    console.error('Cannot send email: User email is missing', user);\n    return {\n      success: false,\n      message: 'User email is missing'\n    };\n  }\n\n  // Check if EmailJS is properly configured\n  if (EMAILJS_USER_ID === 'g0Zv3mEDUVljCuJyL' || EMAILJS_SERVICE_ID === 'service_uk2jyu5' || EMAILJS_TEMPLATE_ID === 'template_kjrzsq6') {\n    console.warn('EmailJS not configured. Please set up environment variables.');\n    // In development, we'll consider this a \"success\" for testing purposes\n    return {\n      success: true,\n      message: 'Email service not configured (development mode)'\n    };\n  }\n  console.log('Preparing to send budget alert email to:', user.email);\n  const to = user.email;\n  const over_amount = (spent - budget).toFixed(2);\n\n  // Create template parameters that EmailJS will use\n  const templateParams = {\n    to_email: to,\n    to_name: user.name || to.split('@')[0],\n    category: category,\n    budget: budget.toFixed(2),\n    spent: spent.toFixed(2),\n    over_amount: over_amount\n  };\n  try {\n    // Send email using EmailJS\n    const response = await emailjs.send(EMAILJS_SERVICE_ID, EMAILJS_TEMPLATE_ID, templateParams);\n    console.log('Email sent successfully:', response);\n    return {\n      success: true,\n      message: 'Email sent successfully'\n    };\n  } catch (error) {\n    console.error('Error sending email:', error);\n    return {\n      success: false,\n      message: error.text || 'Failed to send email',\n      error: error.message\n    };\n  }\n};","map":{"version":3,"names":["emailjs","EMAILJS_USER_ID","process","env","REACT_APP_EMAILJS_USER_ID","EMAILJS_SERVICE_ID","REACT_APP_EMAILJS_SERVICE_ID","EMAILJS_TEMPLATE_ID","REACT_APP_EMAILJS_TEMPLATE_ID","init","sendBudgetAlertEmail","user","category","budget","spent","email","console","error","success","message","warn","log","to","over_amount","toFixed","templateParams","to_email","to_name","name","split","response","send","text"],"sources":["C:/Users/tejit/OneDrive/Desktop/expence-tracker - Copy/expence-tracker/src/services/EmailService.js"],"sourcesContent":["// src/services/EmailService.js\r\nimport emailjs from 'emailjs-com';\r\n\r\n// Use environment variables instead of hardcoded values\r\n// You should set these up in your .env file\r\nconst EMAILJS_USER_ID = process.env.REACT_APP_EMAILJS_USER_ID || 'g0Zv3mEDUVljCuJyL'; \r\nconst EMAILJS_SERVICE_ID = process.env.REACT_APP_EMAILJS_SERVICE_ID || 'service_uk2jyu5';\r\nconst EMAILJS_TEMPLATE_ID = process.env.REACT_APP_EMAILJS_TEMPLATE_ID || 'template_kjrzsq6';\r\n\r\n// Initialize EmailJS with public key only\r\nif (EMAILJS_USER_ID !== 'g0Zv3mEDUVljCuJyL') {\r\n  emailjs.init(EMAILJS_USER_ID);\r\n}\r\n\r\n// Function to send budget alert email\r\nexport const sendBudgetAlertEmail = async (user, category, budget, spent) => {\r\n  // Verify that we have a user with an email address\r\n  if (!user || !user.email) {\r\n    console.error('Cannot send email: User email is missing', user);\r\n    return {\r\n      success: false,\r\n      message: 'User email is missing'\r\n    };\r\n  }\r\n  \r\n  // Check if EmailJS is properly configured\r\n  if (EMAILJS_USER_ID === 'g0Zv3mEDUVljCuJyL' || \r\n      EMAILJS_SERVICE_ID === 'service_uk2jyu5' || \r\n      EMAILJS_TEMPLATE_ID === 'template_kjrzsq6') {\r\n    console.warn('EmailJS not configured. Please set up environment variables.');\r\n    // In development, we'll consider this a \"success\" for testing purposes\r\n    return {\r\n      success: true,\r\n      message: 'Email service not configured (development mode)'\r\n    };\r\n  }\r\n  \r\n  console.log('Preparing to send budget alert email to:', user.email);\r\n  \r\n  const to = user.email;\r\n  const over_amount = (spent - budget).toFixed(2);\r\n  \r\n  // Create template parameters that EmailJS will use\r\n  const templateParams = {\r\n    to_email: to,\r\n    to_name: user.name || to.split('@')[0],\r\n    category: category,\r\n    budget: budget.toFixed(2),\r\n    spent: spent.toFixed(2),\r\n    over_amount: over_amount\r\n  };\r\n  \r\n  try {\r\n    // Send email using EmailJS\r\n    const response = await emailjs.send(\r\n      EMAILJS_SERVICE_ID,\r\n      EMAILJS_TEMPLATE_ID,\r\n      templateParams\r\n    );\r\n    \r\n    console.log('Email sent successfully:', response);\r\n    \r\n    return {\r\n      success: true,\r\n      message: 'Email sent successfully'\r\n    };\r\n  } catch (error) {\r\n    console.error('Error sending email:', error);\r\n    return {\r\n      success: false,\r\n      message: error.text || 'Failed to send email',\r\n      error: error.message\r\n    };\r\n  }\r\n};"],"mappings":"AAAA;AACA,OAAOA,OAAO,MAAM,aAAa;;AAEjC;AACA;AACA,MAAMC,eAAe,GAAGC,OAAO,CAACC,GAAG,CAACC,yBAAyB,IAAI,mBAAmB;AACpF,MAAMC,kBAAkB,GAAGH,OAAO,CAACC,GAAG,CAACG,4BAA4B,IAAI,iBAAiB;AACxF,MAAMC,mBAAmB,GAAGL,OAAO,CAACC,GAAG,CAACK,6BAA6B,IAAI,kBAAkB;;AAE3F;AACA,IAAIP,eAAe,KAAK,mBAAmB,EAAE;EAC3CD,OAAO,CAACS,IAAI,CAACR,eAAe,CAAC;AAC/B;;AAEA;AACA,OAAO,MAAMS,oBAAoB,GAAG,MAAAA,CAAOC,IAAI,EAAEC,QAAQ,EAAEC,MAAM,EAAEC,KAAK,KAAK;EAC3E;EACA,IAAI,CAACH,IAAI,IAAI,CAACA,IAAI,CAACI,KAAK,EAAE;IACxBC,OAAO,CAACC,KAAK,CAAC,0CAA0C,EAAEN,IAAI,CAAC;IAC/D,OAAO;MACLO,OAAO,EAAE,KAAK;MACdC,OAAO,EAAE;IACX,CAAC;EACH;;EAEA;EACA,IAAIlB,eAAe,KAAK,mBAAmB,IACvCI,kBAAkB,KAAK,iBAAiB,IACxCE,mBAAmB,KAAK,kBAAkB,EAAE;IAC9CS,OAAO,CAACI,IAAI,CAAC,8DAA8D,CAAC;IAC5E;IACA,OAAO;MACLF,OAAO,EAAE,IAAI;MACbC,OAAO,EAAE;IACX,CAAC;EACH;EAEAH,OAAO,CAACK,GAAG,CAAC,0CAA0C,EAAEV,IAAI,CAACI,KAAK,CAAC;EAEnE,MAAMO,EAAE,GAAGX,IAAI,CAACI,KAAK;EACrB,MAAMQ,WAAW,GAAG,CAACT,KAAK,GAAGD,MAAM,EAAEW,OAAO,CAAC,CAAC,CAAC;;EAE/C;EACA,MAAMC,cAAc,GAAG;IACrBC,QAAQ,EAAEJ,EAAE;IACZK,OAAO,EAAEhB,IAAI,CAACiB,IAAI,IAAIN,EAAE,CAACO,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACtCjB,QAAQ,EAAEA,QAAQ;IAClBC,MAAM,EAAEA,MAAM,CAACW,OAAO,CAAC,CAAC,CAAC;IACzBV,KAAK,EAAEA,KAAK,CAACU,OAAO,CAAC,CAAC,CAAC;IACvBD,WAAW,EAAEA;EACf,CAAC;EAED,IAAI;IACF;IACA,MAAMO,QAAQ,GAAG,MAAM9B,OAAO,CAAC+B,IAAI,CACjC1B,kBAAkB,EAClBE,mBAAmB,EACnBkB,cACF,CAAC;IAEDT,OAAO,CAACK,GAAG,CAAC,0BAA0B,EAAES,QAAQ,CAAC;IAEjD,OAAO;MACLZ,OAAO,EAAE,IAAI;MACbC,OAAO,EAAE;IACX,CAAC;EACH,CAAC,CAAC,OAAOF,KAAK,EAAE;IACdD,OAAO,CAACC,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5C,OAAO;MACLC,OAAO,EAAE,KAAK;MACdC,OAAO,EAAEF,KAAK,CAACe,IAAI,IAAI,sBAAsB;MAC7Cf,KAAK,EAAEA,KAAK,CAACE;IACf,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}