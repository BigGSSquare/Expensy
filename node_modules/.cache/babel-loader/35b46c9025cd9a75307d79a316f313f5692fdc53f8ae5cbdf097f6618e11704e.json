{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tejit\\\\OneDrive\\\\Desktop\\\\expence tracker final\\\\expence-tracker\\\\src\\\\components\\\\split\\\\SplitExpenseDetails.js\",\n  _s = $RefreshSig$();\n// src/components/split/SplitExpenseDetails.js\nimport React, { useState, useEffect, useContext } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { SplitExpenseContext } from '../../context/SplitExpenseContext';\nimport { AuthContext } from '../../context/AuthContext';\nimport { getSplitSummary } from '../../models/SplitExpenseModel';\nimport './SplitExpense.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SplitExpenseDetails = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  const {\n    getSplitExpense,\n    updatePaymentStatus,\n    deleteSplitExpense,\n    sendPaymentReminder,\n    emailStatus\n  } = useContext(SplitExpenseContext);\n  const [splitExpense, setSplitExpense] = useState(null);\n  const [summary, setSummary] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  // Load split expense details\n  useEffect(() => {\n    if (!id) {\n      setError('Invalid split expense ID');\n      setLoading(false);\n      return;\n    }\n    try {\n      const expense = getSplitExpense(id);\n      console.log(`Loading split expense with ID ${id}:`, expense);\n      if (expense) {\n        setSplitExpense(expense);\n        setSummary(getSplitSummary(expense));\n      } else {\n        setError('Split expense not found');\n      }\n    } catch (err) {\n      console.error('Error loading split expense:', err);\n      setError('Error loading split expense details');\n    } finally {\n      setLoading(false);\n    }\n  }, [id, getSplitExpense]);\n\n  // Update local state when expense details change\n  useEffect(() => {\n    if (id) {\n      try {\n        const expense = getSplitExpense(id);\n        if (expense) {\n          setSplitExpense(expense);\n          setSummary(getSplitSummary(expense));\n        }\n      } catch (err) {\n        console.error('Error updating split expense view:', err);\n      }\n    }\n  }, [id, getSplitExpense, emailStatus]);\n\n  // Handle marking a participant as paid\n  const handleMarkAsPaid = async participantId => {\n    if (!id || !participantId) {\n      setError('Invalid parameters for payment update');\n      return;\n    }\n    try {\n      console.log('==== START PAYMENT UPDATE ====');\n      console.log(`Marking participant ${participantId} as paid`);\n      console.log('Split expense ID type:', typeof id);\n      console.log('Split expense ID:', id);\n\n      // Log the full split expense object for debugging\n      const debugExpense = getSplitExpense(id);\n      console.log('Split expense from context:', debugExpense ? 'Found' : 'Not found');\n      if (debugExpense) {\n        var _debugExpense$partici, _debugExpense$partici2;\n        console.log('Split expense ID in context:', debugExpense.id);\n        console.log('userId in document:', debugExpense.userId);\n        console.log('Number of participants:', ((_debugExpense$partici = debugExpense.participants) === null || _debugExpense$partici === void 0 ? void 0 : _debugExpense$partici.length) || 0);\n\n        // Check if participant exists\n        const debugParticipant = (_debugExpense$partici2 = debugExpense.participants) === null || _debugExpense$partici2 === void 0 ? void 0 : _debugExpense$partici2.find(p => p.id === participantId);\n        console.log('Participant in document:', debugParticipant ? 'Found' : 'Not found');\n        if (debugParticipant) {\n          console.log('Participant data:', debugParticipant);\n        }\n      }\n\n      // Proceed with the update\n      console.log('Calling updatePaymentStatus...');\n      const result = await updatePaymentStatus(id, participantId, 'paid', 'manual');\n      console.log('Update payment status result:', result);\n      console.log('==== END PAYMENT UPDATE ====');\n      if (result) {\n        // Refresh data\n        const expense = getSplitExpense(id);\n        setSplitExpense(expense);\n        setSummary(getSplitSummary(expense));\n      } else {\n        setError('Failed to update payment status');\n      }\n    } catch (err) {\n      console.error('Error marking participant as paid:', err);\n      console.error('Error stack:', err.stack);\n      setError('An error occurred while updating payment status');\n    }\n  };\n\n  // Handle deleting the split expense\n  const handleDelete = async () => {\n    if (!id) {\n      setError('Invalid split expense ID');\n      return;\n    }\n\n    // Confirm before deleting\n    if (window.confirm('Are you sure you want to delete this split expense?')) {\n      try {\n        console.log(`Deleting split expense with ID ${id}`);\n        const result = await deleteSplitExpense(id);\n        if (result) {\n          navigate('/split');\n        } else {\n          setError('Failed to delete split expense');\n        }\n      } catch (err) {\n        console.error('Error deleting split expense:', err);\n        setError('An error occurred while deleting the split expense');\n      }\n    }\n  };\n\n  // Handle sending a payment reminder\n  const handleSendReminder = async participantId => {\n    if (!id || !participantId) {\n      setError('Invalid parameters for sending reminder');\n      return;\n    }\n    try {\n      console.log(`Sending payment reminder to participant ${participantId}`);\n      await sendPaymentReminder(id, participantId);\n    } catch (err) {\n      console.error('Error sending payment reminder:', err);\n      setError('An error occurred while sending the payment reminder');\n    }\n  };\n\n  // Format currency\n  const formatCurrency = amount => {\n    const parsedAmount = parseFloat(amount);\n    return isNaN(parsedAmount) ? '$0.00' : `$${parsedAmount.toFixed(2)}`;\n  };\n\n  // Format date\n  const formatDate = dateString => {\n    if (!dateString) return 'N/A';\n    try {\n      const date = new Date(dateString);\n      return date.toLocaleDateString(undefined, {\n        year: 'numeric',\n        month: 'short',\n        day: 'numeric'\n      });\n    } catch (e) {\n      console.error('Error formatting date:', e);\n      return dateString || 'N/A';\n    }\n  };\n\n  // Loading state\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading split expense details...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Error state\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"split-expense-details-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-button\",\n        onClick: () => navigate('/split'),\n        children: \"Back to Split Expenses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Not found state\n  if (!splitExpense) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"split-expense-details-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: \"Split expense not found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-button\",\n        onClick: () => navigate('/split'),\n        children: \"Back to Split Expenses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"split-expense-details-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"split-details-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: splitExpense.description || 'Split Expense'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"expense-meta\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"expense-category\",\n          children: splitExpense.category || 'Uncategorized'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"expense-date\",\n          children: formatDate(splitExpense.date)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"split-expense-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"split-expense-summary\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"summary-label\",\n            children: \"Total Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"summary-value\",\n            children: formatCurrency(splitExpense.totalAmount)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"summary-label\",\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `summary-value status-${splitExpense.status}`,\n            children: splitExpense.status === 'pending' ? 'Pending' : splitExpense.status === 'partial' ? 'Partially Paid' : 'Settled'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this), summary && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"summary-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"summary-label\",\n              children: \"Paid Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"summary-value\",\n              children: formatCurrency(summary.paidAmount)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"summary-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"summary-label\",\n              children: \"Pending Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"summary-value\",\n              children: formatCurrency(summary.pendingAmount)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"summary-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"summary-label\",\n              children: \"Participants\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"summary-value\",\n              children: summary.participantCount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this), splitExpense.notes && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"split-expense-notes\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Notes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: splitExpense.notes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"split-participants-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Participants\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"participants-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"participants-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Share\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }, this), splitExpense.participants && splitExpense.participants.map(participant => {\n          var _emailStatus$particip, _emailStatus$particip2;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"participant-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"participant-name\",\n              children: participant.name || 'Unnamed'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"participant-email\",\n              children: participant.email || '-'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"participant-share\",\n              children: formatCurrency(participant.shareAmount)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `participant-status status-${participant.status}`,\n              children: [participant.status === 'paid' ? 'Paid' : 'Unpaid', participant.status === 'paid' && participant.paymentMethod && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"payment-method\",\n                children: [\" via \", participant.paymentMethod]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"participant-actions\",\n              children: participant.status !== 'paid' && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"mark-paid-btn\",\n                  onClick: () => handleMarkAsPaid(participant.id),\n                  children: \"Mark as Paid\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 302,\n                  columnNumber: 21\n                }, this), participant.email && /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"send-reminder-btn\",\n                  onClick: () => handleSendReminder(participant.id),\n                  disabled: (_emailStatus$particip = emailStatus[participant.id]) === null || _emailStatus$particip === void 0 ? void 0 : _emailStatus$particip.sending,\n                  children: (_emailStatus$particip2 = emailStatus[participant.id]) !== null && _emailStatus$particip2 !== void 0 && _emailStatus$particip2.sending ? 'Sending...' : 'Send Reminder'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 310,\n                  columnNumber: 23\n                }, this), emailStatus[participant.id] && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `email-status ${emailStatus[participant.id].sent ? 'success' : 'error'}`,\n                  title: emailStatus[participant.id].error,\n                  children: emailStatus[participant.id].sent ? '✓ Email sent!' : `✗ ${emailStatus[participant.id].error ? 'Failed' : 'Error'}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 323,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 15\n            }, this)]\n          }, participant.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 13\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"split-expense-actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-button\",\n        onClick: () => navigate('/split'),\n        children: \"Back to Split Expenses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"delete-button\",\n        onClick: handleDelete,\n        children: \"Delete Split Expense\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 225,\n    columnNumber: 5\n  }, this);\n};\n_s(SplitExpenseDetails, \"99B0t31Jg4FdA8z3nW4YFpa97Lc=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = SplitExpenseDetails;\nexport default SplitExpenseDetails;\nvar _c;\n$RefreshReg$(_c, \"SplitExpenseDetails\");","map":{"version":3,"names":["React","useState","useEffect","useContext","useParams","useNavigate","SplitExpenseContext","AuthContext","getSplitSummary","jsxDEV","_jsxDEV","Fragment","_Fragment","SplitExpenseDetails","_s","id","navigate","currentUser","getSplitExpense","updatePaymentStatus","deleteSplitExpense","sendPaymentReminder","emailStatus","splitExpense","setSplitExpense","summary","setSummary","loading","setLoading","error","setError","expense","console","log","err","handleMarkAsPaid","participantId","debugExpense","_debugExpense$partici","_debugExpense$partici2","userId","participants","length","debugParticipant","find","p","result","stack","handleDelete","window","confirm","handleSendReminder","formatCurrency","amount","parsedAmount","parseFloat","isNaN","toFixed","formatDate","dateString","date","Date","toLocaleDateString","undefined","year","month","day","e","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","description","category","totalAmount","status","paidAmount","pendingAmount","participantCount","notes","map","participant","_emailStatus$particip","_emailStatus$particip2","name","email","shareAmount","paymentMethod","disabled","sending","sent","title","_c","$RefreshReg$"],"sources":["C:/Users/tejit/OneDrive/Desktop/expence tracker final/expence-tracker/src/components/split/SplitExpenseDetails.js"],"sourcesContent":["// src/components/split/SplitExpenseDetails.js\r\nimport React, { useState, useEffect, useContext } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { SplitExpenseContext } from '../../context/SplitExpenseContext';\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport { getSplitSummary } from '../../models/SplitExpenseModel';\r\nimport './SplitExpense.css';\r\n\r\nconst SplitExpenseDetails = () => {\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const { currentUser } = useContext(AuthContext);\r\n  const { \r\n    getSplitExpense, \r\n    updatePaymentStatus, \r\n    deleteSplitExpense,\r\n    sendPaymentReminder,\r\n    emailStatus\r\n  } = useContext(SplitExpenseContext);\r\n  \r\n  const [splitExpense, setSplitExpense] = useState(null);\r\n  const [summary, setSummary] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  \r\n  // Load split expense details\r\n  useEffect(() => {\r\n    if (!id) {\r\n      setError('Invalid split expense ID');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      const expense = getSplitExpense(id);\r\n      console.log(`Loading split expense with ID ${id}:`, expense);\r\n      \r\n      if (expense) {\r\n        setSplitExpense(expense);\r\n        setSummary(getSplitSummary(expense));\r\n      } else {\r\n        setError('Split expense not found');\r\n      }\r\n    } catch (err) {\r\n      console.error('Error loading split expense:', err);\r\n      setError('Error loading split expense details');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [id, getSplitExpense]);\r\n  \r\n  // Update local state when expense details change\r\n  useEffect(() => {\r\n    if (id) {\r\n      try {\r\n        const expense = getSplitExpense(id);\r\n        if (expense) {\r\n          setSplitExpense(expense);\r\n          setSummary(getSplitSummary(expense));\r\n        }\r\n      } catch (err) {\r\n        console.error('Error updating split expense view:', err);\r\n      }\r\n    }\r\n  }, [id, getSplitExpense, emailStatus]);\r\n  \r\n  // Handle marking a participant as paid\r\n  const handleMarkAsPaid = async (participantId) => {\r\n    if (!id || !participantId) {\r\n      setError('Invalid parameters for payment update');\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      console.log('==== START PAYMENT UPDATE ====');\r\n      console.log(`Marking participant ${participantId} as paid`);\r\n      console.log('Split expense ID type:', typeof id);\r\n      console.log('Split expense ID:', id);\r\n      \r\n      // Log the full split expense object for debugging\r\n      const debugExpense = getSplitExpense(id);\r\n      console.log('Split expense from context:', debugExpense ? 'Found' : 'Not found');\r\n      if (debugExpense) {\r\n        console.log('Split expense ID in context:', debugExpense.id);\r\n        console.log('userId in document:', debugExpense.userId);\r\n        console.log('Number of participants:', debugExpense.participants?.length || 0);\r\n        \r\n        // Check if participant exists\r\n        const debugParticipant = debugExpense.participants?.find(p => p.id === participantId);\r\n        console.log('Participant in document:', debugParticipant ? 'Found' : 'Not found');\r\n        if (debugParticipant) {\r\n          console.log('Participant data:', debugParticipant);\r\n        }\r\n      }\r\n      \r\n      // Proceed with the update\r\n      console.log('Calling updatePaymentStatus...');\r\n      const result = await updatePaymentStatus(\r\n        id,\r\n        participantId,\r\n        'paid',\r\n        'manual'\r\n      );\r\n      \r\n      console.log('Update payment status result:', result);\r\n      console.log('==== END PAYMENT UPDATE ====');\r\n      \r\n      if (result) {\r\n        // Refresh data\r\n        const expense = getSplitExpense(id);\r\n        setSplitExpense(expense);\r\n        setSummary(getSplitSummary(expense));\r\n      } else {\r\n        setError('Failed to update payment status');\r\n      }\r\n    } catch (err) {\r\n      console.error('Error marking participant as paid:', err);\r\n      console.error('Error stack:', err.stack);\r\n      setError('An error occurred while updating payment status');\r\n    }\r\n  };\r\n  \r\n  // Handle deleting the split expense\r\n  const handleDelete = async () => {\r\n    if (!id) {\r\n      setError('Invalid split expense ID');\r\n      return;\r\n    }\r\n    \r\n    // Confirm before deleting\r\n    if (window.confirm('Are you sure you want to delete this split expense?')) {\r\n      try {\r\n        console.log(`Deleting split expense with ID ${id}`);\r\n        \r\n        const result = await deleteSplitExpense(id);\r\n        \r\n        if (result) {\r\n          navigate('/split');\r\n        } else {\r\n          setError('Failed to delete split expense');\r\n        }\r\n      } catch (err) {\r\n        console.error('Error deleting split expense:', err);\r\n        setError('An error occurred while deleting the split expense');\r\n      }\r\n    }\r\n  };\r\n  \r\n  // Handle sending a payment reminder\r\n  const handleSendReminder = async (participantId) => {\r\n    if (!id || !participantId) {\r\n      setError('Invalid parameters for sending reminder');\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      console.log(`Sending payment reminder to participant ${participantId}`);\r\n      \r\n      await sendPaymentReminder(id, participantId);\r\n    } catch (err) {\r\n      console.error('Error sending payment reminder:', err);\r\n      setError('An error occurred while sending the payment reminder');\r\n    }\r\n  };\r\n  \r\n  // Format currency\r\n  const formatCurrency = (amount) => {\r\n    const parsedAmount = parseFloat(amount);\r\n    return isNaN(parsedAmount) ? '$0.00' : `$${parsedAmount.toFixed(2)}`;\r\n  };\r\n  \r\n  // Format date\r\n  const formatDate = (dateString) => {\r\n    if (!dateString) return 'N/A';\r\n    \r\n    try {\r\n      const date = new Date(dateString);\r\n      return date.toLocaleDateString(undefined, {\r\n        year: 'numeric',\r\n        month: 'short',\r\n        day: 'numeric'\r\n      });\r\n    } catch (e) {\r\n      console.error('Error formatting date:', e);\r\n      return dateString || 'N/A';\r\n    }\r\n  };\r\n  \r\n  // Loading state\r\n  if (loading) {\r\n    return <div className=\"loading\">Loading split expense details...</div>;\r\n  }\r\n  \r\n  // Error state\r\n  if (error) {\r\n    return (\r\n      <div className=\"split-expense-details-container\">\r\n        <div className=\"error-message\">{error}</div>\r\n        <button\r\n          className=\"back-button\"\r\n          onClick={() => navigate('/split')}\r\n        >\r\n          Back to Split Expenses\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  // Not found state\r\n  if (!splitExpense) {\r\n    return (\r\n      <div className=\"split-expense-details-container\">\r\n        <div className=\"error-message\">Split expense not found</div>\r\n        <button\r\n          className=\"back-button\"\r\n          onClick={() => navigate('/split')}\r\n        >\r\n          Back to Split Expenses\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  return (\r\n    <div className=\"split-expense-details-container\">\r\n      <div className=\"split-details-header\">\r\n        <h1>{splitExpense.description || 'Split Expense'}</h1>\r\n        <div className=\"expense-meta\">\r\n          <span className=\"expense-category\">{splitExpense.category || 'Uncategorized'}</span>\r\n          <span className=\"expense-date\">{formatDate(splitExpense.date)}</span>\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"split-expense-card\">\r\n        <div className=\"split-expense-summary\">\r\n          <div className=\"summary-item\">\r\n            <div className=\"summary-label\">Total Amount</div>\r\n            <div className=\"summary-value\">{formatCurrency(splitExpense.totalAmount)}</div>\r\n          </div>\r\n          \r\n          <div className=\"summary-item\">\r\n            <div className=\"summary-label\">Status</div>\r\n            <div className={`summary-value status-${splitExpense.status}`}>\r\n              {splitExpense.status === 'pending' ? 'Pending' : \r\n               splitExpense.status === 'partial' ? 'Partially Paid' : 'Settled'}\r\n            </div>\r\n          </div>\r\n          \r\n          {summary && (\r\n            <>\r\n              <div className=\"summary-item\">\r\n                <div className=\"summary-label\">Paid Amount</div>\r\n                <div className=\"summary-value\">{formatCurrency(summary.paidAmount)}</div>\r\n              </div>\r\n              \r\n              <div className=\"summary-item\">\r\n                <div className=\"summary-label\">Pending Amount</div>\r\n                <div className=\"summary-value\">{formatCurrency(summary.pendingAmount)}</div>\r\n              </div>\r\n              \r\n              <div className=\"summary-item\">\r\n                <div className=\"summary-label\">Participants</div>\r\n                <div className=\"summary-value\">{summary.participantCount}</div>\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n        \r\n        {splitExpense.notes && (\r\n          <div className=\"split-expense-notes\">\r\n            <h3>Notes</h3>\r\n            <p>{splitExpense.notes}</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n      \r\n      <div className=\"split-participants-section\">\r\n        <h2>Participants</h2>\r\n        <div className=\"participants-table\">\r\n          <div className=\"participants-header\">\r\n            <span>Name</span>\r\n            <span>Email</span>\r\n            <span>Share</span>\r\n            <span>Status</span>\r\n            <span>Actions</span>\r\n          </div>\r\n          \r\n          {splitExpense.participants && splitExpense.participants.map((participant) => (\r\n            <div className=\"participant-row\" key={participant.id}>\r\n              <span className=\"participant-name\">{participant.name || 'Unnamed'}</span>\r\n              <span className=\"participant-email\">{participant.email || '-'}</span>\r\n              <span className=\"participant-share\">{formatCurrency(participant.shareAmount)}</span>\r\n              <span className={`participant-status status-${participant.status}`}>\r\n                {participant.status === 'paid' ? 'Paid' : 'Unpaid'}\r\n                {participant.status === 'paid' && participant.paymentMethod && (\r\n                  <span className=\"payment-method\"> via {participant.paymentMethod}</span>\r\n                )}\r\n              </span>\r\n              <span className=\"participant-actions\">\r\n                {participant.status !== 'paid' && (\r\n                  <>\r\n                    <button\r\n                      className=\"mark-paid-btn\"\r\n                      onClick={() => handleMarkAsPaid(participant.id)}\r\n                    >\r\n                      Mark as Paid\r\n                    </button>\r\n                    \r\n                    {participant.email && (\r\n                      <button\r\n                        className=\"send-reminder-btn\"\r\n                        onClick={() => handleSendReminder(participant.id)}\r\n                        disabled={emailStatus[participant.id]?.sending}\r\n                      >\r\n                        {emailStatus[participant.id]?.sending\r\n                          ? 'Sending...'\r\n                          : 'Send Reminder'}\r\n                      </button>\r\n                    )}\r\n                    \r\n                    {/* Email status indicator */}\r\n                    {emailStatus[participant.id] && (\r\n                      <div className={`email-status ${emailStatus[participant.id].sent ? 'success' : 'error'}`}\r\n                           title={emailStatus[participant.id].error}>\r\n                        {emailStatus[participant.id].sent \r\n                          ? '✓ Email sent!' \r\n                          : `✗ ${emailStatus[participant.id].error ? 'Failed' : 'Error'}`}\r\n                      </div>\r\n                    )}\r\n                  </>\r\n                )}\r\n              </span>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"split-expense-actions\">\r\n        <button\r\n          className=\"back-button\"\r\n          onClick={() => navigate('/split')}\r\n        >\r\n          Back to Split Expenses\r\n        </button>\r\n        \r\n        <button\r\n          className=\"delete-button\"\r\n          onClick={handleDelete}\r\n        >\r\n          Delete Split Expense\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SplitExpenseDetails;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}