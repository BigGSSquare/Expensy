{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tejit\\\\OneDrive\\\\Desktop\\\\expence-tracker\\\\src\\\\context\\\\ExpenseContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ExpenseContext = /*#__PURE__*/createContext();\nexport const ExpenseProvider = ({\n  children\n}) => {\n  _s();\n  const [expenses, setExpenses] = useState([]);\n  const [budgets, setBudgets] = useState({});\n  const [alerts, setAlerts] = useState([]);\n\n  // Load data from localStorage on initial render\n  useEffect(() => {\n    const savedExpenses = JSON.parse(localStorage.getItem('expenses')) || [];\n    const savedBudgets = JSON.parse(localStorage.getItem('budgets')) || {};\n    setExpenses(savedExpenses);\n    setBudgets(savedBudgets);\n  }, []);\n\n  // Save data to localStorage whenever it changes\n  useEffect(() => {\n    localStorage.setItem('expenses', JSON.stringify(expenses));\n  }, [expenses]);\n  useEffect(() => {\n    localStorage.setItem('budgets', JSON.stringify(budgets));\n  }, [budgets]);\n\n  // Add a new expense\n  const addExpense = expense => {\n    const newExpense = {\n      ...expense,\n      id: Date.now(),\n      date: expense.date || new Date().toISOString().slice(0, 10)\n    };\n    setExpenses([...expenses, newExpense]);\n    checkBudgetAlerts(newExpense);\n  };\n\n  // Delete an expense\n  const deleteExpense = id => {\n    setExpenses(expenses.filter(expense => expense.id !== id));\n  };\n\n  // Update budget settings\n  const updateBudget = (category, amount) => {\n    setBudgets({\n      ...budgets,\n      [category]: amount\n    });\n  };\n\n  // Check if adding this expense exceeds the budget\n  const checkBudgetAlerts = newExpense => {\n    const {\n      category\n    } = newExpense;\n    if (budgets[category]) {\n      // Get current month expenses for this category\n      const currentDate = new Date();\n      const currentMonth = currentDate.getMonth();\n      const currentYear = currentDate.getFullYear();\n      const monthlyExpenses = expenses.filter(expense => {\n        const expenseDate = new Date(expense.date);\n        return expenseDate.getMonth() === currentMonth && expenseDate.getFullYear() === currentYear && expense.category === category;\n      });\n      const totalSpent = monthlyExpenses.reduce((sum, expense) => sum + parseFloat(expense.amount), 0) + parseFloat(newExpense.amount);\n      if (totalSpent > budgets[category]) {\n        const newAlert = {\n          id: Date.now(),\n          message: `Budget alert: You've exceeded your ${category} budget of $${budgets[category]}`,\n          category: category,\n          read: false,\n          date: new Date().toISOString()\n        };\n        setAlerts(prevAlerts => [...prevAlerts, newAlert]);\n      }\n    }\n  };\n\n  // Mark an alert as read\n  const markAlertAsRead = id => {\n    setAlerts(alerts.map(alert => alert.id === id ? {\n      ...alert,\n      read: true\n    } : alert));\n  };\n  return /*#__PURE__*/_jsxDEV(ExpenseContext.Provider, {\n    value: {\n      expenses,\n      addExpense,\n      deleteExpense,\n      budgets,\n      updateBudget,\n      alerts,\n      markAlertAsRead\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n_s(ExpenseProvider, \"neMiehtJUdd8lyWAeY+2DaFpKt0=\");\n_c = ExpenseProvider;\nvar _c;\n$RefreshReg$(_c, \"ExpenseProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","ExpenseContext","ExpenseProvider","children","_s","expenses","setExpenses","budgets","setBudgets","alerts","setAlerts","savedExpenses","JSON","parse","localStorage","getItem","savedBudgets","setItem","stringify","addExpense","expense","newExpense","id","Date","now","date","toISOString","slice","checkBudgetAlerts","deleteExpense","filter","updateBudget","category","amount","currentDate","currentMonth","getMonth","currentYear","getFullYear","monthlyExpenses","expenseDate","totalSpent","reduce","sum","parseFloat","newAlert","message","read","prevAlerts","markAlertAsRead","map","alert","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/tejit/OneDrive/Desktop/expence-tracker/src/context/ExpenseContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\n\r\nexport const ExpenseContext = createContext();\r\n\r\nexport const ExpenseProvider = ({ children }) => {\r\n  const [expenses, setExpenses] = useState([]);\r\n  const [budgets, setBudgets] = useState({});\r\n  const [alerts, setAlerts] = useState([]);\r\n  \r\n  // Load data from localStorage on initial render\r\n  useEffect(() => {\r\n    const savedExpenses = JSON.parse(localStorage.getItem('expenses')) || [];\r\n    const savedBudgets = JSON.parse(localStorage.getItem('budgets')) || {};\r\n    \r\n    setExpenses(savedExpenses);\r\n    setBudgets(savedBudgets);\r\n  }, []);\r\n  \r\n  // Save data to localStorage whenever it changes\r\n  useEffect(() => {\r\n    localStorage.setItem('expenses', JSON.stringify(expenses));\r\n  }, [expenses]);\r\n  \r\n  useEffect(() => {\r\n    localStorage.setItem('budgets', JSON.stringify(budgets));\r\n  }, [budgets]);\r\n  \r\n  // Add a new expense\r\n  const addExpense = (expense) => {\r\n    const newExpense = {\r\n      ...expense,\r\n      id: Date.now(),\r\n      date: expense.date || new Date().toISOString().slice(0, 10)\r\n    };\r\n    \r\n    setExpenses([...expenses, newExpense]);\r\n    checkBudgetAlerts(newExpense);\r\n  };\r\n  \r\n  // Delete an expense\r\n  const deleteExpense = (id) => {\r\n    setExpenses(expenses.filter(expense => expense.id !== id));\r\n  };\r\n  \r\n  // Update budget settings\r\n  const updateBudget = (category, amount) => {\r\n    setBudgets({\r\n      ...budgets,\r\n      [category]: amount\r\n    });\r\n  };\r\n  \r\n  // Check if adding this expense exceeds the budget\r\n  const checkBudgetAlerts = (newExpense) => {\r\n    const { category } = newExpense;\r\n    \r\n    if (budgets[category]) {\r\n      // Get current month expenses for this category\r\n      const currentDate = new Date();\r\n      const currentMonth = currentDate.getMonth();\r\n      const currentYear = currentDate.getFullYear();\r\n      \r\n      const monthlyExpenses = expenses.filter(expense => {\r\n        const expenseDate = new Date(expense.date);\r\n        return expenseDate.getMonth() === currentMonth && \r\n               expenseDate.getFullYear() === currentYear &&\r\n               expense.category === category;\r\n      });\r\n      \r\n      const totalSpent = monthlyExpenses.reduce((sum, expense) => sum + parseFloat(expense.amount), 0) + parseFloat(newExpense.amount);\r\n      \r\n      if (totalSpent > budgets[category]) {\r\n        const newAlert = {\r\n          id: Date.now(),\r\n          message: `Budget alert: You've exceeded your ${category} budget of $${budgets[category]}`,\r\n          category: category,\r\n          read: false,\r\n          date: new Date().toISOString()\r\n        };\r\n        \r\n        setAlerts(prevAlerts => [...prevAlerts, newAlert]);\r\n      }\r\n    }\r\n  };\r\n  \r\n  // Mark an alert as read\r\n  const markAlertAsRead = (id) => {\r\n    setAlerts(alerts.map(alert => \r\n      alert.id === id ? { ...alert, read: true } : alert\r\n    ));\r\n  };\r\n  \r\n  return (\r\n    <ExpenseContext.Provider \r\n      value={{ \r\n        expenses, \r\n        addExpense, \r\n        deleteExpense, \r\n        budgets, \r\n        updateBudget,\r\n        alerts,\r\n        markAlertAsRead\r\n      }}>\r\n      {children}\r\n    </ExpenseContext.Provider>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}