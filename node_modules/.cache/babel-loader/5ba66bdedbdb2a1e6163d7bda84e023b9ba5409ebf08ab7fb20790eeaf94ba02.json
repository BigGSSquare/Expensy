{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tejit\\\\OneDrive\\\\Desktop\\\\expence-tracker - Copy\\\\expence-tracker\\\\src\\\\components\\\\BudgetAlerts.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport { ExpenseContext } from '../context/ExpenseContext';\nimport { AuthContext } from '../context/AuthContext';\nimport './BudgetAlerts.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BudgetAlerts = () => {\n  _s();\n  const {\n    alerts,\n    markAlertAsRead\n  } = useContext(ExpenseContext);\n  const {\n    currentUser\n  } = useContext(AuthContext);\n\n  // Ensure alerts is always an array\n  const safeAlerts = Array.isArray(alerts) ? alerts : [];\n\n  // Filter alerts to show only unread ones\n  // and ensure they belong to the current user\n  const unreadAlerts = safeAlerts.filter(alert => !alert.read && alert.userId === (currentUser === null || currentUser === void 0 ? void 0 : currentUser.id));\n\n  // Handle dismissing alerts safely\n  const handleDismiss = id => {\n    if (id && typeof markAlertAsRead === 'function') {\n      markAlertAsRead(id);\n    }\n  };\n\n  // Don't render anything if there are no unread alerts\n  if (unreadAlerts.length === 0) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"budget-alerts\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Budget Alerts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"alerts-list\",\n      children: unreadAlerts.map(alert => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"alert-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"alert-message\",\n            children: alert.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"alert-date\",\n            children: new Date(alert.date).toLocaleDateString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"dismiss-btn\",\n          onClick: () => handleDismiss(alert.id),\n          \"aria-label\": \"Dismiss alert\",\n          children: \"Dismiss\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)]\n      }, alert.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(BudgetAlerts, \"5Sis7DKQzPoUfmGZZKGAkruElKM=\");\n_c = BudgetAlerts;\nexport default BudgetAlerts;\nvar _c;\n$RefreshReg$(_c, \"BudgetAlerts\");","map":{"version":3,"names":["React","useContext","ExpenseContext","AuthContext","jsxDEV","_jsxDEV","BudgetAlerts","_s","alerts","markAlertAsRead","currentUser","safeAlerts","Array","isArray","unreadAlerts","filter","alert","read","userId","id","handleDismiss","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","message","Date","date","toLocaleDateString","onClick","_c","$RefreshReg$"],"sources":["C:/Users/tejit/OneDrive/Desktop/expence-tracker - Copy/expence-tracker/src/components/BudgetAlerts.js"],"sourcesContent":["import React, { useContext } from 'react';\r\nimport { ExpenseContext } from '../context/ExpenseContext';\r\nimport { AuthContext } from '../context/AuthContext';\r\nimport './BudgetAlerts.css';\r\n\r\nconst BudgetAlerts = () => {\r\n  const { alerts, markAlertAsRead } = useContext(ExpenseContext);\r\n  const { currentUser } = useContext(AuthContext);\r\n  \r\n  // Ensure alerts is always an array\r\n  const safeAlerts = Array.isArray(alerts) ? alerts : [];\r\n  \r\n  // Filter alerts to show only unread ones\r\n  // and ensure they belong to the current user\r\n  const unreadAlerts = safeAlerts.filter(alert => \r\n    !alert.read && alert.userId === currentUser?.id\r\n  );\r\n  \r\n  // Handle dismissing alerts safely\r\n  const handleDismiss = (id) => {\r\n    if (id && typeof markAlertAsRead === 'function') {\r\n      markAlertAsRead(id);\r\n    }\r\n  };\r\n  \r\n  // Don't render anything if there are no unread alerts\r\n  if (unreadAlerts.length === 0) {\r\n    return null;\r\n  }\r\n  \r\n  return (\r\n    <div className=\"budget-alerts\">\r\n      <h3>Budget Alerts</h3>\r\n      <ul className=\"alerts-list\">\r\n        {unreadAlerts.map(alert => (\r\n          <li key={alert.id} className=\"alert-item\">\r\n            <div className=\"alert-content\">\r\n              <span className=\"alert-message\">{alert.message}</span>\r\n              <span className=\"alert-date\">\r\n                {new Date(alert.date).toLocaleDateString()}\r\n              </span>\r\n            </div>\r\n            <button \r\n              className=\"dismiss-btn\"\r\n              onClick={() => handleDismiss(alert.id)}\r\n              aria-label=\"Dismiss alert\"\r\n            >\r\n              Dismiss\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BudgetAlerts;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,cAAc,QAAQ,2BAA2B;AAC1D,SAASC,WAAW,QAAQ,wBAAwB;AACpD,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM;IAAEC,MAAM;IAAEC;EAAgB,CAAC,GAAGR,UAAU,CAACC,cAAc,CAAC;EAC9D,MAAM;IAAEQ;EAAY,CAAC,GAAGT,UAAU,CAACE,WAAW,CAAC;;EAE/C;EACA,MAAMQ,UAAU,GAAGC,KAAK,CAACC,OAAO,CAACL,MAAM,CAAC,GAAGA,MAAM,GAAG,EAAE;;EAEtD;EACA;EACA,MAAMM,YAAY,GAAGH,UAAU,CAACI,MAAM,CAACC,KAAK,IAC1C,CAACA,KAAK,CAACC,IAAI,IAAID,KAAK,CAACE,MAAM,MAAKR,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAES,EAAE,CACjD,CAAC;;EAED;EACA,MAAMC,aAAa,GAAID,EAAE,IAAK;IAC5B,IAAIA,EAAE,IAAI,OAAOV,eAAe,KAAK,UAAU,EAAE;MAC/CA,eAAe,CAACU,EAAE,CAAC;IACrB;EACF,CAAC;;EAED;EACA,IAAIL,YAAY,CAACO,MAAM,KAAK,CAAC,EAAE;IAC7B,OAAO,IAAI;EACb;EAEA,oBACEhB,OAAA;IAAKiB,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5BlB,OAAA;MAAAkB,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBtB,OAAA;MAAIiB,SAAS,EAAC,aAAa;MAAAC,QAAA,EACxBT,YAAY,CAACc,GAAG,CAACZ,KAAK,iBACrBX,OAAA;QAAmBiB,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACvClB,OAAA;UAAKiB,SAAS,EAAC,eAAe;UAAAC,QAAA,gBAC5BlB,OAAA;YAAMiB,SAAS,EAAC,eAAe;YAAAC,QAAA,EAAEP,KAAK,CAACa;UAAO;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACtDtB,OAAA;YAAMiB,SAAS,EAAC,YAAY;YAAAC,QAAA,EACzB,IAAIO,IAAI,CAACd,KAAK,CAACe,IAAI,CAAC,CAACC,kBAAkB,CAAC;UAAC;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC,eACNtB,OAAA;UACEiB,SAAS,EAAC,aAAa;UACvBW,OAAO,EAAEA,CAAA,KAAMb,aAAa,CAACJ,KAAK,CAACG,EAAE,CAAE;UACvC,cAAW,eAAe;UAAAI,QAAA,EAC3B;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAbFX,KAAK,CAACG,EAAE;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAcb,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACpB,EAAA,CAjDID,YAAY;AAAA4B,EAAA,GAAZ5B,YAAY;AAmDlB,eAAeA,YAAY;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}