{"ast":null,"code":"// src/services/EmailService.js\nimport emailjs from 'emailjs-com';\n\n// Initialize EmailJS with your user ID\n// You need to sign up for EmailJS and get these values\nconst EMAILJS_USER_ID = 'g0Zv3mEDUVljCuJyL'; // Replace with your actual EmailJS user ID\nconst EMAILJS_SERVICE_ID = 'service_uk2jyu5'; // Replace with your EmailJS service ID\nconst EMAILJS_TEMPLATE_ID = 'template_kjrzsq6'; // Replace with your template ID\n\n// Initialize EmailJS\nemailjs.init(EMAILJS_USER_ID);\nexport const sendEmail = async (to, subject, content) => {\n  try {\n    // Prepare template parameters\n    const templateParams = {\n      to_email: to,\n      to_name: to.split('@')[0],\n      // Use part before @ as name\n      subject: subject,\n      message: content\n    };\n\n    // Send email using EmailJS\n    const response = await emailjs.send(EMAILJS_SERVICE_ID, EMAILJS_TEMPLATE_ID, templateParams);\n    console.log('Email sent successfully:', response);\n    return {\n      success: true,\n      message: 'Email sent successfully'\n    };\n  } catch (error) {\n    console.error('Error sending email:', error);\n    return {\n      success: false,\n      message: 'Failed to send email',\n      error: error.message\n    };\n  }\n};\n\n// Function to send budget alert email\nexport const sendBudgetAlertEmail = async (user, category, budget, spent) => {\n  if (!user || !user.email) {\n    console.error('Cannot send email: User email is missing');\n    return {\n      success: false,\n      message: 'User email is missing'\n    };\n  }\n  const to = user.email;\n  const subject = `Budget Alert: You've exceeded your ${category} budget`;\n\n  // Create HTML content for the email\n  const content = `\n    <h2>Budget Alert</h2>\n    <p>Hello ${user.name || 'there'},</p>\n    <p>This is to notify you that you've exceeded your budget for <strong>${category}</strong>.</p>\n    <p>\n      <strong>Budget:</strong> $${budget.toFixed(2)}<br>\n      <strong>Spent:</strong> $${spent.toFixed(2)}<br>\n      <strong>Over Budget:</strong> $${(spent - budget).toFixed(2)}\n    </p>\n    <p>Log in to your FinTrack account to review your expenses and adjust your budget if needed.</p>\n    <p>Thank you,<br>The FinTrack Team</p>\n  `;\n  return await sendEmail(to, subject, content);\n};","map":{"version":3,"names":["emailjs","EMAILJS_USER_ID","EMAILJS_SERVICE_ID","EMAILJS_TEMPLATE_ID","init","sendEmail","to","subject","content","templateParams","to_email","to_name","split","message","response","send","console","log","success","error","sendBudgetAlertEmail","user","category","budget","spent","email","name","toFixed"],"sources":["C:/Users/tejit/OneDrive/Desktop/expence-tracker/src/services/EmailService.js"],"sourcesContent":["// src/services/EmailService.js\r\nimport emailjs from 'emailjs-com';\r\n\r\n// Initialize EmailJS with your user ID\r\n// You need to sign up for EmailJS and get these values\r\nconst EMAILJS_USER_ID = 'g0Zv3mEDUVljCuJyL'; // Replace with your actual EmailJS user ID\r\nconst EMAILJS_SERVICE_ID = 'service_uk2jyu5'; // Replace with your EmailJS service ID\r\nconst EMAILJS_TEMPLATE_ID = 'template_kjrzsq6'; // Replace with your template ID\r\n\r\n// Initialize EmailJS\r\nemailjs.init(EMAILJS_USER_ID);\r\n\r\nexport const sendEmail = async (to, subject, content) => {\r\n  try {\r\n    // Prepare template parameters\r\n    const templateParams = {\r\n      to_email: to,\r\n      to_name: to.split('@')[0], // Use part before @ as name\r\n      subject: subject,\r\n      message: content\r\n    };\r\n    \r\n    // Send email using EmailJS\r\n    const response = await emailjs.send(\r\n      EMAILJS_SERVICE_ID,\r\n      EMAILJS_TEMPLATE_ID,\r\n      templateParams\r\n    );\r\n    \r\n    console.log('Email sent successfully:', response);\r\n    \r\n    return {\r\n      success: true,\r\n      message: 'Email sent successfully'\r\n    };\r\n  } catch (error) {\r\n    console.error('Error sending email:', error);\r\n    return {\r\n      success: false,\r\n      message: 'Failed to send email',\r\n      error: error.message\r\n    };\r\n  }\r\n};\r\n\r\n// Function to send budget alert email\r\nexport const sendBudgetAlertEmail = async (user, category, budget, spent) => {\r\n  if (!user || !user.email) {\r\n    console.error('Cannot send email: User email is missing');\r\n    return {\r\n      success: false,\r\n      message: 'User email is missing'\r\n    };\r\n  }\r\n  \r\n  const to = user.email;\r\n  const subject = `Budget Alert: You've exceeded your ${category} budget`;\r\n  \r\n  // Create HTML content for the email\r\n  const content = `\r\n    <h2>Budget Alert</h2>\r\n    <p>Hello ${user.name || 'there'},</p>\r\n    <p>This is to notify you that you've exceeded your budget for <strong>${category}</strong>.</p>\r\n    <p>\r\n      <strong>Budget:</strong> $${budget.toFixed(2)}<br>\r\n      <strong>Spent:</strong> $${spent.toFixed(2)}<br>\r\n      <strong>Over Budget:</strong> $${(spent - budget).toFixed(2)}\r\n    </p>\r\n    <p>Log in to your FinTrack account to review your expenses and adjust your budget if needed.</p>\r\n    <p>Thank you,<br>The FinTrack Team</p>\r\n  `;\r\n  \r\n  return await sendEmail(to, subject, content);\r\n};"],"mappings":"AAAA;AACA,OAAOA,OAAO,MAAM,aAAa;;AAEjC;AACA;AACA,MAAMC,eAAe,GAAG,mBAAmB,CAAC,CAAC;AAC7C,MAAMC,kBAAkB,GAAG,iBAAiB,CAAC,CAAC;AAC9C,MAAMC,mBAAmB,GAAG,kBAAkB,CAAC,CAAC;;AAEhD;AACAH,OAAO,CAACI,IAAI,CAACH,eAAe,CAAC;AAE7B,OAAO,MAAMI,SAAS,GAAG,MAAAA,CAAOC,EAAE,EAAEC,OAAO,EAAEC,OAAO,KAAK;EACvD,IAAI;IACF;IACA,MAAMC,cAAc,GAAG;MACrBC,QAAQ,EAAEJ,EAAE;MACZK,OAAO,EAAEL,EAAE,CAACM,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MAAE;MAC3BL,OAAO,EAAEA,OAAO;MAChBM,OAAO,EAAEL;IACX,CAAC;;IAED;IACA,MAAMM,QAAQ,GAAG,MAAMd,OAAO,CAACe,IAAI,CACjCb,kBAAkB,EAClBC,mBAAmB,EACnBM,cACF,CAAC;IAEDO,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEH,QAAQ,CAAC;IAEjD,OAAO;MACLI,OAAO,EAAE,IAAI;MACbL,OAAO,EAAE;IACX,CAAC;EACH,CAAC,CAAC,OAAOM,KAAK,EAAE;IACdH,OAAO,CAACG,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5C,OAAO;MACLD,OAAO,EAAE,KAAK;MACdL,OAAO,EAAE,sBAAsB;MAC/BM,KAAK,EAAEA,KAAK,CAACN;IACf,CAAC;EACH;AACF,CAAC;;AAED;AACA,OAAO,MAAMO,oBAAoB,GAAG,MAAAA,CAAOC,IAAI,EAAEC,QAAQ,EAAEC,MAAM,EAAEC,KAAK,KAAK;EAC3E,IAAI,CAACH,IAAI,IAAI,CAACA,IAAI,CAACI,KAAK,EAAE;IACxBT,OAAO,CAACG,KAAK,CAAC,0CAA0C,CAAC;IACzD,OAAO;MACLD,OAAO,EAAE,KAAK;MACdL,OAAO,EAAE;IACX,CAAC;EACH;EAEA,MAAMP,EAAE,GAAGe,IAAI,CAACI,KAAK;EACrB,MAAMlB,OAAO,GAAG,sCAAsCe,QAAQ,SAAS;;EAEvE;EACA,MAAMd,OAAO,GAAG;AAClB;AACA,eAAea,IAAI,CAACK,IAAI,IAAI,OAAO;AACnC,4EAA4EJ,QAAQ;AACpF;AACA,kCAAkCC,MAAM,CAACI,OAAO,CAAC,CAAC,CAAC;AACnD,iCAAiCH,KAAK,CAACG,OAAO,CAAC,CAAC,CAAC;AACjD,uCAAuC,CAACH,KAAK,GAAGD,MAAM,EAAEI,OAAO,CAAC,CAAC,CAAC;AAClE;AACA;AACA;AACA,GAAG;EAED,OAAO,MAAMtB,SAAS,CAACC,EAAE,EAAEC,OAAO,EAAEC,OAAO,CAAC;AAC9C,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}