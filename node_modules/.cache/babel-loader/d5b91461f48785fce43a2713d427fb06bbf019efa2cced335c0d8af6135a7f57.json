{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tejit\\\\OneDrive\\\\Desktop\\\\expence tracker final\\\\expence-tracker\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\n// src/context/AuthContext.js\nimport React, { createContext, useState, useEffect } from 'react';\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut, updateProfile as updateFirebaseProfile, onAuthStateChanged, EmailAuthProvider, reauthenticateWithCredential, updatePassword } from 'firebase/auth';\nimport { auth, db } from '../config/firebase';\nimport { doc, setDoc, getDoc, updateDoc } from 'firebase/firestore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Listen for auth state changes\n  useEffect(() => {\n    console.log('Setting up auth state listener');\n    const unsubscribe = onAuthStateChanged(auth, async user => {\n      if (user) {\n        try {\n          console.log('User authenticated:', user.uid);\n          // Get additional user data from Firestore\n          const userDoc = await getDoc(doc(db, 'users', user.uid));\n          if (userDoc.exists()) {\n            // Combine auth user with Firestore data\n            setCurrentUser({\n              uid: user.uid,\n              email: user.email,\n              name: user.displayName || '',\n              ...userDoc.data()\n            });\n            console.log('User data loaded from Firestore');\n          } else {\n            // If no additional data exists, just use auth data\n            setCurrentUser({\n              uid: user.uid,\n              email: user.email,\n              name: user.displayName || ''\n            });\n            console.log('No additional user data in Firestore');\n          }\n        } catch (error) {\n          console.error(\"Error getting user document:\", error);\n          setCurrentUser({\n            uid: user.uid,\n            email: user.email,\n            name: user.displayName || ''\n          });\n        }\n      } else {\n        console.log('No authenticated user');\n        setCurrentUser(null);\n      }\n      setLoading(false);\n    }, error => {\n      console.error(\"Auth state change error:\", error);\n      setLoading(false);\n    });\n    return () => unsubscribe();\n  }, []);\n\n  // Register function\n  const register = async (name, email, password) => {\n    try {\n      console.log('Registering new user:', email);\n      // Create user in Firebase Auth\n      const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n      const user = userCredential.user;\n      console.log('User created in Firebase Auth:', user.uid);\n\n      // Set display name\n      await updateFirebaseProfile(user, {\n        displayName: name\n      });\n      console.log('Display name updated');\n\n      // Create user document in Firestore\n      await setDoc(doc(db, 'users', user.uid), {\n        name,\n        email,\n        created: new Date().toISOString(),\n        preferences: {\n          emailNotifications: true\n        }\n      });\n      console.log('User data saved to Firestore');\n      return true;\n    } catch (error) {\n      console.error('Registration error:', error.code, error.message);\n      throw error; // Rethrow to handle in component\n    }\n  };\n\n  // Login function\n  const login = async (email, password) => {\n    try {\n      console.log('Logging in user:', email);\n      const userCredential = await signInWithEmailAndPassword(auth, email, password);\n      console.log('Login successful:', userCredential.user.uid);\n      return true;\n    } catch (error) {\n      console.error('Login error:', error.code, error.message);\n      throw error; // Rethrow to handle in component\n    }\n  };\n\n  // Logout function\n  const logout = async () => {\n    try {\n      console.log('Logging out user');\n      await signOut(auth);\n      console.log('Logout successful');\n      return true;\n    } catch (error) {\n      console.error('Logout error:', error.code, error.message);\n      return false;\n    }\n  };\n\n  // Update profile\n  const updateProfile = async updatedData => {\n    if (!currentUser) return false;\n    try {\n      console.log('Updating user profile:', currentUser.uid);\n      // Update Firestore document\n      const userRef = doc(db, 'users', currentUser.uid);\n      await updateDoc(userRef, updatedData);\n\n      // Update display name if included\n      if (updatedData.name && auth.currentUser) {\n        await updateFirebaseProfile(auth.currentUser, {\n          displayName: updatedData.name\n        });\n      }\n\n      // Update local state\n      setCurrentUser(prev => ({\n        ...prev,\n        ...updatedData\n      }));\n      console.log('Profile updated successfully');\n      return true;\n    } catch (error) {\n      console.error('Profile update error:', error.code, error.message);\n      return false;\n    }\n  };\n\n  // Change password function\n  const changePassword = async (oldPassword, newPassword) => {\n    if (!auth.currentUser || !auth.currentUser.email) {\n      console.error('No authenticated user found for password change');\n      return false;\n    }\n    try {\n      // Verify old password by reauthenticating\n      const email = auth.currentUser.email;\n      const credential = EmailAuthProvider.credential(email, oldPassword);\n      await reauthenticateWithCredential(auth.currentUser, credential);\n\n      // Update password\n      await updatePassword(auth.currentUser, newPassword);\n      console.log('Password changed successfully');\n      return true;\n    } catch (error) {\n      console.error('Password change error:', error.code, error.message);\n      return false;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      currentUser,\n      loading,\n      login,\n      register,\n      logout,\n      updateProfile,\n      changePassword\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"+Bt7EujFHjK6mRV3YX1iAtSqXvQ=\");\n_c = AuthProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","updateProfile","updateFirebaseProfile","onAuthStateChanged","EmailAuthProvider","reauthenticateWithCredential","updatePassword","auth","db","doc","setDoc","getDoc","updateDoc","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","currentUser","setCurrentUser","loading","setLoading","console","log","unsubscribe","user","uid","userDoc","exists","email","name","displayName","data","error","register","password","userCredential","created","Date","toISOString","preferences","emailNotifications","code","message","login","logout","updatedData","userRef","prev","changePassword","oldPassword","newPassword","credential","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/tejit/OneDrive/Desktop/expence tracker final/expence-tracker/src/context/AuthContext.js"],"sourcesContent":["// src/context/AuthContext.js\r\nimport React, { createContext, useState, useEffect } from 'react';\r\nimport { \r\n  createUserWithEmailAndPassword, \r\n  signInWithEmailAndPassword,\r\n  signOut,\r\n  updateProfile as updateFirebaseProfile,\r\n  onAuthStateChanged,\r\n  EmailAuthProvider,\r\n  reauthenticateWithCredential,\r\n  updatePassword \r\n} from 'firebase/auth';\r\nimport { auth, db } from '../config/firebase';\r\nimport { doc, setDoc, getDoc, updateDoc } from 'firebase/firestore';\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Listen for auth state changes\r\n  useEffect(() => {\r\n    console.log('Setting up auth state listener');\r\n    const unsubscribe = onAuthStateChanged(auth, async (user) => {\r\n      if (user) {\r\n        try {\r\n          console.log('User authenticated:', user.uid);\r\n          // Get additional user data from Firestore\r\n          const userDoc = await getDoc(doc(db, 'users', user.uid));\r\n          \r\n          if (userDoc.exists()) {\r\n            // Combine auth user with Firestore data\r\n            setCurrentUser({\r\n              uid: user.uid,\r\n              email: user.email,\r\n              name: user.displayName || '',\r\n              ...userDoc.data()\r\n            });\r\n            console.log('User data loaded from Firestore');\r\n          } else {\r\n            // If no additional data exists, just use auth data\r\n            setCurrentUser({\r\n              uid: user.uid,\r\n              email: user.email,\r\n              name: user.displayName || ''\r\n            });\r\n            console.log('No additional user data in Firestore');\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Error getting user document:\", error);\r\n          setCurrentUser({\r\n            uid: user.uid,\r\n            email: user.email,\r\n            name: user.displayName || ''\r\n          });\r\n        }\r\n      } else {\r\n        console.log('No authenticated user');\r\n        setCurrentUser(null);\r\n      }\r\n      setLoading(false);\r\n    }, (error) => {\r\n      console.error(\"Auth state change error:\", error);\r\n      setLoading(false);\r\n    });\r\n\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  // Register function\r\n  const register = async (name, email, password) => {\r\n    try {\r\n      console.log('Registering new user:', email);\r\n      // Create user in Firebase Auth\r\n      const userCredential = await createUserWithEmailAndPassword(auth, email, password);\r\n      const user = userCredential.user;\r\n      \r\n      console.log('User created in Firebase Auth:', user.uid);\r\n      \r\n      // Set display name\r\n      await updateFirebaseProfile(user, { displayName: name });\r\n      console.log('Display name updated');\r\n      \r\n      // Create user document in Firestore\r\n      await setDoc(doc(db, 'users', user.uid), {\r\n        name,\r\n        email,\r\n        created: new Date().toISOString(),\r\n        preferences: {\r\n          emailNotifications: true\r\n        }\r\n      });\r\n      console.log('User data saved to Firestore');\r\n      \r\n      return true;\r\n    } catch (error) {\r\n      console.error('Registration error:', error.code, error.message);\r\n      throw error; // Rethrow to handle in component\r\n    }\r\n  };\r\n\r\n  // Login function\r\n  const login = async (email, password) => {\r\n    try {\r\n      console.log('Logging in user:', email);\r\n      const userCredential = await signInWithEmailAndPassword(auth, email, password);\r\n      console.log('Login successful:', userCredential.user.uid);\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Login error:', error.code, error.message);\r\n      throw error; // Rethrow to handle in component\r\n    }\r\n  };\r\n\r\n  // Logout function\r\n  const logout = async () => {\r\n    try {\r\n      console.log('Logging out user');\r\n      await signOut(auth);\r\n      console.log('Logout successful');\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Logout error:', error.code, error.message);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  // Update profile\r\n  const updateProfile = async (updatedData) => {\r\n    if (!currentUser) return false;\r\n    \r\n    try {\r\n      console.log('Updating user profile:', currentUser.uid);\r\n      // Update Firestore document\r\n      const userRef = doc(db, 'users', currentUser.uid);\r\n      await updateDoc(userRef, updatedData);\r\n      \r\n      // Update display name if included\r\n      if (updatedData.name && auth.currentUser) {\r\n        await updateFirebaseProfile(auth.currentUser, {\r\n          displayName: updatedData.name\r\n        });\r\n      }\r\n      \r\n      // Update local state\r\n      setCurrentUser(prev => ({\r\n        ...prev,\r\n        ...updatedData\r\n      }));\r\n      \r\n      console.log('Profile updated successfully');\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Profile update error:', error.code, error.message);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  // Change password function\r\n  const changePassword = async (oldPassword, newPassword) => {\r\n    if (!auth.currentUser || !auth.currentUser.email) {\r\n      console.error('No authenticated user found for password change');\r\n      return false;\r\n    }\r\n    \r\n    try {\r\n      // Verify old password by reauthenticating\r\n      const email = auth.currentUser.email;\r\n      const credential = EmailAuthProvider.credential(email, oldPassword);\r\n      await reauthenticateWithCredential(auth.currentUser, credential);\r\n      \r\n      // Update password\r\n      await updatePassword(auth.currentUser, newPassword);\r\n      console.log('Password changed successfully');\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Password change error:', error.code, error.message);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        currentUser,\r\n        loading,\r\n        login,\r\n        register,\r\n        logout,\r\n        updateProfile,\r\n        changePassword\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContext;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}