{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tejit\\\\OneDrive\\\\Desktop\\\\expence tracker final\\\\expence-tracker\\\\src\\\\components\\\\ReceiptScanner.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { ExpenseContext } from '../context/ExpenseContext';\nimport { createWorker } from 'tesseract.js'; // Import Tesseract\nimport './ReceiptScanner.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ReceiptScanner = () => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [previewUrl, setPreviewUrl] = useState(null);\n  const [error, setError] = useState('');\n  const [ocrProgress, setOcrProgress] = useState(0); // Track OCR progress\n\n  // Local state for form values\n  const [receiptData, setReceiptData] = useState({\n    amount: '',\n    date: new Date().toISOString().slice(0, 10),\n    description: '',\n    category: 'Food',\n    notes: ''\n  });\n  const {\n    scanReceipt,\n    addExpenseFromReceipt,\n    receiptScanStatus,\n    expenseCategories\n  } = useContext(ExpenseContext);\n  const navigate = useNavigate();\n\n  // Update local state when receiptScanStatus.data changes\n  useEffect(() => {\n    if (receiptScanStatus.data) {\n      setReceiptData({\n        amount: receiptScanStatus.data.amount || '',\n        date: receiptScanStatus.data.date || new Date().toISOString().slice(0, 10),\n        description: receiptScanStatus.data.description || '',\n        category: receiptScanStatus.data.category || 'Food',\n        notes: receiptScanStatus.data.notes || ''\n      });\n    }\n  }, [receiptScanStatus.data]);\n  const handleFileChange = e => {\n    setError(''); // Clear any previous errors\n\n    const file = e.target.files[0];\n    if (file) {\n      // Validate file size (limit to 5MB)\n      if (file.size > 5 * 1024 * 1024) {\n        setError('File is too large. Please select an image under 5MB.');\n        return;\n      }\n\n      // Validate file type\n      if (!file.type.match('image.*')) {\n        setError('Please select an image file (JPEG, PNG).');\n        return;\n      }\n      setSelectedFile(file);\n      try {\n        // Create a preview URL\n        const fileUrl = URL.createObjectURL(file);\n        setPreviewUrl(fileUrl);\n        console.log(\"File selected:\", file.name, file.type, file.size);\n      } catch (error) {\n        console.error(\"Error creating preview:\", error);\n        setError(\"Failed to preview the file\");\n      }\n    }\n  };\n\n  // Parse text to extract receipt data\n  const parseReceiptText = text => {\n    console.log(\"OCR Result:\", text);\n\n    // Initialize extracted data\n    const extractedData = {\n      amount: '',\n      merchantName: '',\n      date: new Date().toISOString().slice(0, 10)\n    };\n\n    // Extract total amount\n    // Look for common patterns like \"Total\", \"Amount\", \"Sum\", etc. followed by numbers\n    const totalRegex = /(?:total|amount|sum|grand total|bill total|to pay|balance|net amount)(?:[^\\d$€£₹]*)([\\d,.]+)/i;\n    const amountMatch = text.match(totalRegex);\n    if (amountMatch && amountMatch[1]) {\n      // Clean up the amount (remove commas, spaces, etc.)\n      const cleanAmount = amountMatch[1].replace(/[^\\d.]/g, '');\n      extractedData.amount = cleanAmount;\n    }\n\n    // Extract date\n    // Look for common date formats\n    const dateRegex = /(\\d{1,2})[\\/\\-\\.](\\d{1,2})[\\/\\-\\.](\\d{2,4})/g;\n    const dateMatches = [...text.matchAll(dateRegex)];\n    if (dateMatches.length > 0) {\n      // Take the first match as the date\n      const dateMatch = dateMatches[0];\n      let day = dateMatch[1];\n      let month = dateMatch[2];\n      let year = dateMatch[3];\n\n      // Add century if year is only 2 digits\n      if (year.length === 2) {\n        year = '20' + year;\n      }\n\n      // Format as YYYY-MM-DD for the input\n      extractedData.date = `${year}-${month.padStart(2, '0')}-${day.padStart(2, '0')}`;\n    }\n\n    // Extract merchant name\n    // Usually one of the first lines or near words like \"Restaurant\", \"Store\", etc.\n    const lines = text.split('\\n').filter(line => line.trim() !== '');\n    if (lines.length > 0) {\n      // Try to find a line that might be a business name\n      // Often one of the first 5 lines that's not a date or address\n      const potentialNames = lines.slice(0, 5).filter(line => {\n        // Filter out lines that are likely not names\n        return !line.match(/^\\d/) &&\n        // Doesn't start with a digit\n        !line.match(/^tel|phone|fax|date|time/i) &&\n        // Not contact info\n        line.length > 3 &&\n        // Not too short\n        line.length < 50; // Not too long\n      });\n      if (potentialNames.length > 0) {\n        extractedData.merchantName = potentialNames[0].trim();\n      }\n    }\n    return extractedData;\n  };\n  const handleScan = async () => {\n    if (!selectedFile) {\n      setError('Please select an image first');\n      return;\n    }\n    setIsLoading(true);\n    setError('');\n    setOcrProgress(0);\n    try {\n      // First update the context with basic image info\n      console.log('Starting receipt scan process with file:', selectedFile.name);\n      await scanReceipt(selectedFile);\n\n      // Now use Tesseract.js to perform OCR on the image\n      const worker = await createWorker({\n        logger: progress => {\n          console.log('OCR Progress:', progress);\n          // Update progress percentage (0-100)\n          if (progress.status === 'recognizing text') {\n            setOcrProgress(Math.round(progress.progress * 100));\n          }\n        }\n      });\n\n      // Choose the appropriate language for your receipts\n      // 'eng' for English, you can add more languages if needed\n      await worker.loadLanguage('eng');\n      await worker.initialize('eng');\n\n      // Perform OCR on the image\n      const {\n        data: {\n          text\n        }\n      } = await worker.recognize(selectedFile);\n\n      // Extract receipt data from the OCR text\n      const extractedData = parseReceiptText(text);\n      console.log('Extracted data:', extractedData);\n\n      // Update local receipt data with extracted values\n      setReceiptData(prev => ({\n        ...prev,\n        amount: extractedData.amount || prev.amount,\n        date: extractedData.date || prev.date,\n        description: extractedData.merchantName || prev.description,\n        notes: `Extracted text:\\n${text.substring(0, 300)}${text.length > 300 ? '...' : ''}`\n      }));\n\n      // Terminate the worker to free up resources\n      await worker.terminate();\n    } catch (error) {\n      console.error('Error in OCR process:', error);\n      setError(error.message || 'An error occurred while scanning');\n    } finally {\n      setIsLoading(false);\n      setOcrProgress(0);\n    }\n  };\n  const handleAddExpense = async () => {\n    if (!receiptScanStatus.data) {\n      setError('No receipt data available');\n      return;\n    }\n    setIsLoading(true);\n    try {\n      // Combine receiptScanStatus.data with local form data\n      const dataToSubmit = {\n        ...receiptScanStatus.data,\n        amount: receiptData.amount,\n        date: receiptData.date,\n        description: receiptData.description,\n        category: receiptData.category,\n        notes: receiptData.notes,\n        fromReceipt: true,\n        receiptImageUrl: previewUrl\n      };\n      console.log('Adding expense from receipt data:', dataToSubmit);\n      const result = await addExpenseFromReceipt(dataToSubmit);\n      if (result) {\n        // Successfully added expense, navigate to dashboard\n        navigate('/');\n      } else {\n        setError('Failed to add expense. Please try again.');\n      }\n    } catch (error) {\n      console.error('Error adding expense from receipt:', error);\n      setError(error.message || 'Failed to add expense');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleCancel = () => {\n    setSelectedFile(null);\n    setPreviewUrl(null);\n    setError('');\n    // Return to previous page\n    navigate(-1);\n  };\n\n  // Get safe categories array\n  const safeCategories = Array.isArray(expenseCategories) ? expenseCategories : ['Food', 'Shopping', 'Transportation', 'Other'];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"receipt-scanner\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Scan Receipt\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scanner-container\",\n      children: !receiptScanStatus.data ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"upload-area\",\n          children: [previewUrl ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: previewUrl,\n            alt: \"Receipt preview\",\n            className: \"receipt-preview\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"upload-placeholder\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"upload-icon\",\n              children: \"\\uD83D\\uDCF7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Upload receipt image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \"image/*\",\n            onChange: handleFileChange,\n            className: \"file-input\",\n            id: \"receipt-upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"receipt-upload\",\n            className: \"upload-button\",\n            children: \"Choose Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 13\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"scan-error\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 15\n        }, this), receiptScanStatus.error && !error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"scan-error\",\n          children: receiptScanStatus.error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 15\n        }, this), isLoading && ocrProgress > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ocr-progress\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-bar\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-fill\",\n              style: {\n                width: `${ocrProgress}%`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-text\",\n            children: [\"Extracting text: \", ocrProgress, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"scan-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"scan-button\",\n            onClick: handleScan,\n            disabled: !selectedFile || isLoading,\n            children: isLoading ? 'Scanning...' : 'Scan Receipt'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"cancel-button\",\n            onClick: handleCancel,\n            disabled: isLoading,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scan-results\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Receipt Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 13\n        }, this), previewUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '20px',\n            textAlign: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: previewUrl,\n            alt: \"Receipt preview\",\n            style: {\n              maxWidth: '100%',\n              maxHeight: '300px',\n              border: '1px solid #ddd'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"receipt-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Amount:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              step: \"0.01\",\n              value: receiptData.amount,\n              onChange: e => setReceiptData({\n                ...receiptData,\n                amount: e.target.value\n              }),\n              placeholder: \"Enter receipt total\",\n              style: {\n                width: '70%',\n                padding: '8px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Date:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              value: receiptData.date,\n              onChange: e => setReceiptData({\n                ...receiptData,\n                date: e.target.value\n              }),\n              style: {\n                width: '70%',\n                padding: '8px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Merchant:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: receiptData.description,\n              onChange: e => setReceiptData({\n                ...receiptData,\n                description: e.target.value\n              }),\n              placeholder: \"Enter merchant name\",\n              style: {\n                width: '70%',\n                padding: '8px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Category:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: receiptData.category,\n              onChange: e => setReceiptData({\n                ...receiptData,\n                category: e.target.value\n              }),\n              style: {\n                width: '70%',\n                padding: '8px'\n              },\n              children: safeCategories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: category,\n                children: category\n              }, category, false, {\n                fileName: _jsxFileName,\n                lineNumber: 379,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Notes:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: receiptData.notes,\n              onChange: e => setReceiptData({\n                ...receiptData,\n                notes: e.target.value\n              }),\n              placeholder: \"Enter any additional notes\",\n              style: {\n                width: '70%',\n                padding: '8px',\n                minHeight: '60px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 13\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"scan-error\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"result-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"add-expense-btn\",\n            onClick: handleAddExpense,\n            disabled: isLoading || !receiptData.amount || !receiptData.description,\n            children: isLoading ? 'Adding...' : 'Add Expense'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"cancel-button\",\n            onClick: handleCancel,\n            disabled: isLoading,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 246,\n    columnNumber: 5\n  }, this);\n};\n_s(ReceiptScanner, \"+m8mSVaArGodHUZprEFiSSr+rNU=\", false, function () {\n  return [useNavigate];\n});\n_c = ReceiptScanner;\nexport default ReceiptScanner;\nvar _c;\n$RefreshReg$(_c, \"ReceiptScanner\");","map":{"version":3,"names":["React","useState","useContext","useEffect","useNavigate","ExpenseContext","createWorker","jsxDEV","_jsxDEV","Fragment","_Fragment","ReceiptScanner","_s","selectedFile","setSelectedFile","isLoading","setIsLoading","previewUrl","setPreviewUrl","error","setError","ocrProgress","setOcrProgress","receiptData","setReceiptData","amount","date","Date","toISOString","slice","description","category","notes","scanReceipt","addExpenseFromReceipt","receiptScanStatus","expenseCategories","navigate","data","handleFileChange","e","file","target","files","size","type","match","fileUrl","URL","createObjectURL","console","log","name","parseReceiptText","text","extractedData","merchantName","totalRegex","amountMatch","cleanAmount","replace","dateRegex","dateMatches","matchAll","length","dateMatch","day","month","year","padStart","lines","split","filter","line","trim","potentialNames","handleScan","worker","logger","progress","status","Math","round","loadLanguage","initialize","recognize","prev","substring","terminate","message","handleAddExpense","dataToSubmit","fromReceipt","receiptImageUrl","result","handleCancel","safeCategories","Array","isArray","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","accept","onChange","id","htmlFor","style","width","onClick","disabled","marginBottom","textAlign","maxWidth","maxHeight","border","step","value","placeholder","padding","map","minHeight","_c","$RefreshReg$"],"sources":["C:/Users/tejit/OneDrive/Desktop/expence tracker final/expence-tracker/src/components/ReceiptScanner.js"],"sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { ExpenseContext } from '../context/ExpenseContext';\r\nimport { createWorker } from 'tesseract.js'; // Import Tesseract\r\nimport './ReceiptScanner.css';\r\n\r\nconst ReceiptScanner = () => {\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [previewUrl, setPreviewUrl] = useState(null);\r\n  const [error, setError] = useState('');\r\n  const [ocrProgress, setOcrProgress] = useState(0); // Track OCR progress\r\n  \r\n  // Local state for form values\r\n  const [receiptData, setReceiptData] = useState({\r\n    amount: '',\r\n    date: new Date().toISOString().slice(0, 10),\r\n    description: '',\r\n    category: 'Food',\r\n    notes: ''\r\n  });\r\n  \r\n  const { scanReceipt, addExpenseFromReceipt, receiptScanStatus, expenseCategories } = useContext(ExpenseContext);\r\n  const navigate = useNavigate();\r\n  \r\n  // Update local state when receiptScanStatus.data changes\r\n  useEffect(() => {\r\n    if (receiptScanStatus.data) {\r\n      setReceiptData({\r\n        amount: receiptScanStatus.data.amount || '',\r\n        date: receiptScanStatus.data.date || new Date().toISOString().slice(0, 10),\r\n        description: receiptScanStatus.data.description || '',\r\n        category: receiptScanStatus.data.category || 'Food',\r\n        notes: receiptScanStatus.data.notes || ''\r\n      });\r\n    }\r\n  }, [receiptScanStatus.data]);\r\n  \r\n  const handleFileChange = (e) => {\r\n    setError(''); // Clear any previous errors\r\n    \r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      // Validate file size (limit to 5MB)\r\n      if (file.size > 5 * 1024 * 1024) {\r\n        setError('File is too large. Please select an image under 5MB.');\r\n        return;\r\n      }\r\n      \r\n      // Validate file type\r\n      if (!file.type.match('image.*')) {\r\n        setError('Please select an image file (JPEG, PNG).');\r\n        return;\r\n      }\r\n      \r\n      setSelectedFile(file);\r\n      \r\n      try {\r\n        // Create a preview URL\r\n        const fileUrl = URL.createObjectURL(file);\r\n        setPreviewUrl(fileUrl);\r\n        console.log(\"File selected:\", file.name, file.type, file.size);\r\n      } catch (error) {\r\n        console.error(\"Error creating preview:\", error);\r\n        setError(\"Failed to preview the file\");\r\n      }\r\n    }\r\n  };\r\n  \r\n  // Parse text to extract receipt data\r\n  const parseReceiptText = (text) => {\r\n    console.log(\"OCR Result:\", text);\r\n    \r\n    // Initialize extracted data\r\n    const extractedData = {\r\n      amount: '',\r\n      merchantName: '',\r\n      date: new Date().toISOString().slice(0, 10)\r\n    };\r\n    \r\n    // Extract total amount\r\n    // Look for common patterns like \"Total\", \"Amount\", \"Sum\", etc. followed by numbers\r\n    const totalRegex = /(?:total|amount|sum|grand total|bill total|to pay|balance|net amount)(?:[^\\d$€£₹]*)([\\d,.]+)/i;\r\n    const amountMatch = text.match(totalRegex);\r\n    \r\n    if (amountMatch && amountMatch[1]) {\r\n      // Clean up the amount (remove commas, spaces, etc.)\r\n      const cleanAmount = amountMatch[1].replace(/[^\\d.]/g, '');\r\n      extractedData.amount = cleanAmount;\r\n    }\r\n    \r\n    // Extract date\r\n    // Look for common date formats\r\n    const dateRegex = /(\\d{1,2})[\\/\\-\\.](\\d{1,2})[\\/\\-\\.](\\d{2,4})/g;\r\n    const dateMatches = [...text.matchAll(dateRegex)];\r\n    \r\n    if (dateMatches.length > 0) {\r\n      // Take the first match as the date\r\n      const dateMatch = dateMatches[0];\r\n      let day = dateMatch[1];\r\n      let month = dateMatch[2];\r\n      let year = dateMatch[3];\r\n      \r\n      // Add century if year is only 2 digits\r\n      if (year.length === 2) {\r\n        year = '20' + year;\r\n      }\r\n      \r\n      // Format as YYYY-MM-DD for the input\r\n      extractedData.date = `${year}-${month.padStart(2, '0')}-${day.padStart(2, '0')}`;\r\n    }\r\n    \r\n    // Extract merchant name\r\n    // Usually one of the first lines or near words like \"Restaurant\", \"Store\", etc.\r\n    const lines = text.split('\\n').filter(line => line.trim() !== '');\r\n    \r\n    if (lines.length > 0) {\r\n      // Try to find a line that might be a business name\r\n      // Often one of the first 5 lines that's not a date or address\r\n      const potentialNames = lines.slice(0, 5).filter(line => {\r\n        // Filter out lines that are likely not names\r\n        return !line.match(/^\\d/) && // Doesn't start with a digit\r\n               !line.match(/^tel|phone|fax|date|time/i) && // Not contact info\r\n               line.length > 3 && // Not too short\r\n               line.length < 50; // Not too long\r\n      });\r\n      \r\n      if (potentialNames.length > 0) {\r\n        extractedData.merchantName = potentialNames[0].trim();\r\n      }\r\n    }\r\n    \r\n    return extractedData;\r\n  };\r\n  \r\n  const handleScan = async () => {\r\n    if (!selectedFile) {\r\n      setError('Please select an image first');\r\n      return;\r\n    }\r\n    \r\n    setIsLoading(true);\r\n    setError('');\r\n    setOcrProgress(0);\r\n    \r\n    try {\r\n      // First update the context with basic image info\r\n      console.log('Starting receipt scan process with file:', selectedFile.name);\r\n      await scanReceipt(selectedFile);\r\n      \r\n      // Now use Tesseract.js to perform OCR on the image\r\n      const worker = await createWorker({\r\n        logger: progress => {\r\n          console.log('OCR Progress:', progress);\r\n          // Update progress percentage (0-100)\r\n          if (progress.status === 'recognizing text') {\r\n            setOcrProgress(Math.round(progress.progress * 100));\r\n          }\r\n        }\r\n      });\r\n      \r\n      // Choose the appropriate language for your receipts\r\n      // 'eng' for English, you can add more languages if needed\r\n      await worker.loadLanguage('eng');\r\n      await worker.initialize('eng');\r\n      \r\n      // Perform OCR on the image\r\n      const { data: { text } } = await worker.recognize(selectedFile);\r\n      \r\n      // Extract receipt data from the OCR text\r\n      const extractedData = parseReceiptText(text);\r\n      \r\n      console.log('Extracted data:', extractedData);\r\n      \r\n      // Update local receipt data with extracted values\r\n      setReceiptData(prev => ({\r\n        ...prev,\r\n        amount: extractedData.amount || prev.amount,\r\n        date: extractedData.date || prev.date,\r\n        description: extractedData.merchantName || prev.description,\r\n        notes: `Extracted text:\\n${text.substring(0, 300)}${text.length > 300 ? '...' : ''}`\r\n      }));\r\n      \r\n      // Terminate the worker to free up resources\r\n      await worker.terminate();\r\n      \r\n    } catch (error) {\r\n      console.error('Error in OCR process:', error);\r\n      setError(error.message || 'An error occurred while scanning');\r\n    } finally {\r\n      setIsLoading(false);\r\n      setOcrProgress(0);\r\n    }\r\n  };\r\n  \r\n  const handleAddExpense = async () => {\r\n    if (!receiptScanStatus.data) {\r\n      setError('No receipt data available');\r\n      return;\r\n    }\r\n    \r\n    setIsLoading(true);\r\n    \r\n    try {\r\n      // Combine receiptScanStatus.data with local form data\r\n      const dataToSubmit = {\r\n        ...receiptScanStatus.data,\r\n        amount: receiptData.amount,\r\n        date: receiptData.date,\r\n        description: receiptData.description,\r\n        category: receiptData.category,\r\n        notes: receiptData.notes,\r\n        fromReceipt: true,\r\n        receiptImageUrl: previewUrl\r\n      };\r\n      \r\n      console.log('Adding expense from receipt data:', dataToSubmit);\r\n      const result = await addExpenseFromReceipt(dataToSubmit);\r\n      \r\n      if (result) {\r\n        // Successfully added expense, navigate to dashboard\r\n        navigate('/');\r\n      } else {\r\n        setError('Failed to add expense. Please try again.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error adding expense from receipt:', error);\r\n      setError(error.message || 'Failed to add expense');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n  \r\n  const handleCancel = () => {\r\n    setSelectedFile(null);\r\n    setPreviewUrl(null);\r\n    setError('');\r\n    // Return to previous page\r\n    navigate(-1);\r\n  };\r\n  \r\n  // Get safe categories array\r\n  const safeCategories = Array.isArray(expenseCategories) ? expenseCategories : ['Food', 'Shopping', 'Transportation', 'Other'];\r\n  \r\n  return (\r\n    <div className=\"receipt-scanner\">\r\n      <h1>Scan Receipt</h1>\r\n      \r\n      <div className=\"scanner-container\">\r\n        {!receiptScanStatus.data ? (\r\n          <>\r\n            <div className=\"upload-area\">\r\n              {previewUrl ? (\r\n                <img \r\n                  src={previewUrl} \r\n                  alt=\"Receipt preview\" \r\n                  className=\"receipt-preview\" \r\n                />\r\n              ) : (\r\n                <div className=\"upload-placeholder\">\r\n                  <i className=\"upload-icon\">📷</i>\r\n                  <p>Upload receipt image</p>\r\n                </div>\r\n              )}\r\n              \r\n              <input\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={handleFileChange}\r\n                className=\"file-input\"\r\n                id=\"receipt-upload\"\r\n              />\r\n              <label htmlFor=\"receipt-upload\" className=\"upload-button\">\r\n                Choose Image\r\n              </label>\r\n            </div>\r\n            \r\n            {/* Display both error types */}\r\n            {error && (\r\n              <div className=\"scan-error\">\r\n                {error}\r\n              </div>\r\n            )}\r\n            \r\n            {receiptScanStatus.error && !error && (\r\n              <div className=\"scan-error\">\r\n                {receiptScanStatus.error}\r\n              </div>\r\n            )}\r\n            \r\n            {/* Show OCR progress when scanning */}\r\n            {isLoading && ocrProgress > 0 && (\r\n              <div className=\"ocr-progress\">\r\n                <div className=\"progress-bar\">\r\n                  <div \r\n                    className=\"progress-fill\" \r\n                    style={{ width: `${ocrProgress}%` }}\r\n                  ></div>\r\n                </div>\r\n                <div className=\"progress-text\">\r\n                  Extracting text: {ocrProgress}%\r\n                </div>\r\n              </div>\r\n            )}\r\n            \r\n            <div className=\"scan-actions\">\r\n              <button \r\n                className=\"scan-button\"\r\n                onClick={handleScan}\r\n                disabled={!selectedFile || isLoading}\r\n              >\r\n                {isLoading ? 'Scanning...' : 'Scan Receipt'}\r\n              </button>\r\n              <button \r\n                className=\"cancel-button\" \r\n                onClick={handleCancel}\r\n                disabled={isLoading}\r\n              >\r\n                Cancel\r\n              </button>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <div className=\"scan-results\">\r\n            <h2>Receipt Details</h2>\r\n            \r\n            {previewUrl && (\r\n              <div style={{marginBottom: '20px', textAlign: 'center'}}>\r\n                <img \r\n                  src={previewUrl} \r\n                  alt=\"Receipt preview\" \r\n                  style={{maxWidth: '100%', maxHeight: '300px', border: '1px solid #ddd'}} \r\n                />\r\n              </div>\r\n            )}\r\n            \r\n            <div className=\"receipt-info\">\r\n              <div className=\"info-row\">\r\n                <label>Amount:</label>\r\n                <input \r\n                  type=\"number\" \r\n                  step=\"0.01\"\r\n                  value={receiptData.amount} \r\n                  onChange={(e) => setReceiptData({...receiptData, amount: e.target.value})}\r\n                  placeholder=\"Enter receipt total\"\r\n                  style={{width: '70%', padding: '8px'}}\r\n                />\r\n              </div>\r\n              \r\n              <div className=\"info-row\">\r\n                <label>Date:</label>\r\n                <input \r\n                  type=\"date\"\r\n                  value={receiptData.date} \r\n                  onChange={(e) => setReceiptData({...receiptData, date: e.target.value})}\r\n                  style={{width: '70%', padding: '8px'}}\r\n                />\r\n              </div>\r\n              \r\n              <div className=\"info-row\">\r\n                <label>Merchant:</label>\r\n                <input \r\n                  type=\"text\"\r\n                  value={receiptData.description} \r\n                  onChange={(e) => setReceiptData({...receiptData, description: e.target.value})}\r\n                  placeholder=\"Enter merchant name\"\r\n                  style={{width: '70%', padding: '8px'}}\r\n                />\r\n              </div>\r\n              \r\n              <div className=\"info-row\">\r\n                <label>Category:</label>\r\n                <select\r\n                  value={receiptData.category}\r\n                  onChange={(e) => setReceiptData({...receiptData, category: e.target.value})}\r\n                  style={{width: '70%', padding: '8px'}}\r\n                >\r\n                  {safeCategories.map(category => (\r\n                    <option key={category} value={category}>{category}</option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n              \r\n              <div className=\"info-row\">\r\n                <label>Notes:</label>\r\n                <textarea\r\n                  value={receiptData.notes}\r\n                  onChange={(e) => setReceiptData({...receiptData, notes: e.target.value})}\r\n                  placeholder=\"Enter any additional notes\"\r\n                  style={{width: '70%', padding: '8px', minHeight: '60px'}}\r\n                />\r\n              </div>\r\n            </div>\r\n            \r\n            {error && (\r\n              <div className=\"scan-error\">\r\n                {error}\r\n              </div>\r\n            )}\r\n            \r\n            <div className=\"result-actions\">\r\n              <button \r\n                className=\"add-expense-btn\" \r\n                onClick={handleAddExpense}\r\n                disabled={isLoading || !receiptData.amount || !receiptData.description}\r\n              >\r\n                {isLoading ? 'Adding...' : 'Add Expense'}\r\n              </button>\r\n              <button \r\n                className=\"cancel-button\" \r\n                onClick={handleCancel}\r\n                disabled={isLoading}\r\n              >\r\n                Cancel\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReceiptScanner;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}