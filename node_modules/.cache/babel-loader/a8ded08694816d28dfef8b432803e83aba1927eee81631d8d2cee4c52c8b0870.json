{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tejit\\\\OneDrive\\\\Desktop\\\\expence tracker final\\\\expence-tracker\\\\src\\\\components\\\\notifications\\\\NotificationCenter.js\",\n  _s = $RefreshSig$();\n// src/components/notifications/NotificationCenter.js\nimport React, { useContext, useState } from 'react';\nimport { ExpenseContext } from '../../context/ExpenseContext';\nimport './Notifications.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotificationCenter = () => {\n  _s();\n  const {\n    alerts,\n    markAlertAsRead\n  } = useContext(ExpenseContext);\n  const [isOpen, setIsOpen] = useState(false);\n\n  // Make sure alerts is always an array, even if it's undefined or null\n  const safeAlerts = Array.isArray(alerts) ? alerts : [];\n  const unreadAlerts = safeAlerts.filter(alert => !alert.read);\n  const toggleNotifications = () => {\n    setIsOpen(!isOpen);\n  };\n\n  // Handle clicking outside to close dropdown\n  const handleOutsideClick = e => {\n    if (isOpen && !e.target.closest('.notification-center')) {\n      setIsOpen(false);\n    }\n  };\n\n  // Add event listener when component mounts\n  React.useEffect(() => {\n    if (isOpen) {\n      document.addEventListener('mousedown', handleOutsideClick);\n    } else {\n      document.removeEventListener('mousedown', handleOutsideClick);\n    }\n    return () => {\n      document.removeEventListener('mousedown', handleOutsideClick);\n    };\n  }, [isOpen]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notification-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: `notification-toggle ${unreadAlerts.length > 0 ? 'has-alerts' : ''}`,\n      onClick: toggleNotifications,\n      \"aria-label\": \"Notifications\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"notification-icon\",\n        children: \"\\uD83D\\uDD14\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), unreadAlerts.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"notification-badge\",\n        children: unreadAlerts.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notification-dropdown\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notification-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Notifications\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), unreadAlerts.length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"dismiss-all-btn\",\n          onClick: () => {\n            unreadAlerts.forEach(alert => markAlertAsRead(alert.id));\n            setIsOpen(false);\n          },\n          children: \"Dismiss All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notification-list\",\n        children: unreadAlerts.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: unreadAlerts.map(alert => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"notification-item unread\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"notification-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"notification-message\",\n                children: alert.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"notification-date\",\n                children: new Date(alert.date).toLocaleDateString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"dismiss-btn\",\n              onClick: () => markAlertAsRead(alert.id),\n              children: \"Dismiss\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 21\n            }, this)]\n          }, alert.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-notifications\",\n          children: \"No new notifications\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(NotificationCenter, \"pwkRu0f9chk7h0BFqEQZAmr0OVs=\");\n_c = NotificationCenter;\nexport default NotificationCenter;\nvar _c;\n$RefreshReg$(_c, \"NotificationCenter\");","map":{"version":3,"names":["React","useContext","useState","ExpenseContext","jsxDEV","_jsxDEV","NotificationCenter","_s","alerts","markAlertAsRead","isOpen","setIsOpen","safeAlerts","Array","isArray","unreadAlerts","filter","alert","read","toggleNotifications","handleOutsideClick","e","target","closest","useEffect","document","addEventListener","removeEventListener","className","children","length","onClick","fileName","_jsxFileName","lineNumber","columnNumber","forEach","id","map","message","Date","date","toLocaleDateString","_c","$RefreshReg$"],"sources":["C:/Users/tejit/OneDrive/Desktop/expence tracker final/expence-tracker/src/components/notifications/NotificationCenter.js"],"sourcesContent":["// src/components/notifications/NotificationCenter.js\r\nimport React, { useContext, useState } from 'react';\r\nimport { ExpenseContext } from '../../context/ExpenseContext';\r\nimport './Notifications.css';\r\n\r\nconst NotificationCenter = () => {\r\n  const { alerts, markAlertAsRead } = useContext(ExpenseContext);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  \r\n  // Make sure alerts is always an array, even if it's undefined or null\r\n  const safeAlerts = Array.isArray(alerts) ? alerts : [];\r\n  const unreadAlerts = safeAlerts.filter(alert => !alert.read);\r\n  \r\n  const toggleNotifications = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  // Handle clicking outside to close dropdown\r\n  const handleOutsideClick = (e) => {\r\n    if (isOpen && !e.target.closest('.notification-center')) {\r\n      setIsOpen(false);\r\n    }\r\n  };\r\n\r\n  // Add event listener when component mounts\r\n  React.useEffect(() => {\r\n    if (isOpen) {\r\n      document.addEventListener('mousedown', handleOutsideClick);\r\n    } else {\r\n      document.removeEventListener('mousedown', handleOutsideClick);\r\n    }\r\n    \r\n    return () => {\r\n      document.removeEventListener('mousedown', handleOutsideClick);\r\n    };\r\n  }, [isOpen]);\r\n\r\n  return (\r\n    <div className=\"notification-center\">\r\n      <button \r\n        className={`notification-toggle ${unreadAlerts.length > 0 ? 'has-alerts' : ''}`}\r\n        onClick={toggleNotifications}\r\n        aria-label=\"Notifications\"\r\n      >\r\n        <i className=\"notification-icon\">ðŸ””</i>\r\n        {unreadAlerts.length > 0 && (\r\n          <span className=\"notification-badge\">{unreadAlerts.length}</span>\r\n        )}\r\n      </button>\r\n      \r\n      {isOpen && (\r\n        <div className=\"notification-dropdown\">\r\n          <div className=\"notification-header\">\r\n            <h3>Notifications</h3>\r\n            {unreadAlerts.length > 0 && (\r\n              <button \r\n                className=\"dismiss-all-btn\"\r\n                onClick={() => {\r\n                  unreadAlerts.forEach(alert => markAlertAsRead(alert.id));\r\n                  setIsOpen(false);\r\n                }}\r\n              >\r\n                Dismiss All\r\n              </button>\r\n            )}\r\n          </div>\r\n          \r\n          <div className=\"notification-list\">\r\n            {unreadAlerts.length > 0 ? (\r\n              <ul>\r\n                {unreadAlerts.map(alert => (\r\n                  <li key={alert.id} className=\"notification-item unread\">\r\n                    <div className=\"notification-content\">\r\n                      <p className=\"notification-message\">{alert.message}</p>\r\n                      <span className=\"notification-date\">\r\n                        {new Date(alert.date).toLocaleDateString()}\r\n                      </span>\r\n                    </div>\r\n                    <button \r\n                      className=\"dismiss-btn\"\r\n                      onClick={() => markAlertAsRead(alert.id)}\r\n                    >\r\n                      Dismiss\r\n                    </button>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            ) : (\r\n              <div className=\"no-notifications\">\r\n                No new notifications\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotificationCenter;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}