{"ast":null,"code":"var _s = $RefreshSig$();\n// src/components/notifications/NotificationCenter.js\nimport React, { useContext, useState } from 'react';\nimport { ExpenseContext } from '../../context/ExpenseContext';\nconst NotificationCenter = () => {\n  _s();\n  const {\n    alerts,\n    markAlertAsRead\n  } = useContext(ExpenseContext);\n  const [isOpen, setIsOpen] = useState(false);\n  const unreadAlerts = alerts.filter(alert => !alert.read);\n  const toggleNotifications = () => {\n    setIsOpen(!isOpen);\n  };\n};\n_s(NotificationCenter, \"SkUYc/cHlRR03Ps7SzOP+OqeobQ=\");\n_c = NotificationCenter;\nexport default NotificationCenter;\nvar _c;\n$RefreshReg$(_c, \"NotificationCenter\");","map":{"version":3,"names":["React","useContext","useState","ExpenseContext","NotificationCenter","_s","alerts","markAlertAsRead","isOpen","setIsOpen","unreadAlerts","filter","alert","read","toggleNotifications","_c","$RefreshReg$"],"sources":["C:/Users/tejit/OneDrive/Desktop/expence-tracker/src/components/notifications/NotificationCenter.js"],"sourcesContent":["// src/components/notifications/NotificationCenter.js\r\nimport React, { useContext, useState } from 'react';\r\nimport { ExpenseContext } from '../../context/ExpenseContext';\r\n\r\nconst NotificationCenter = () => {\r\n  const { alerts, markAlertAsRead } = useContext(ExpenseContext);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  \r\n  const unreadAlerts = alerts.filter(alert => !alert.read);\r\n  \r\n  const toggleNotifications = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n};\r\n\r\nexport default NotificationCenter;"],"mappings":";AAAA;AACA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AACnD,SAASC,cAAc,QAAQ,8BAA8B;AAE7D,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM;IAAEC,MAAM;IAAEC;EAAgB,CAAC,GAAGN,UAAU,CAACE,cAAc,CAAC;EAC9D,MAAM,CAACK,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAE3C,MAAMQ,YAAY,GAAGJ,MAAM,CAACK,MAAM,CAACC,KAAK,IAAI,CAACA,KAAK,CAACC,IAAI,CAAC;EAExD,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;IAChCL,SAAS,CAAC,CAACD,MAAM,CAAC;EACpB,CAAC;AACH,CAAC;AAACH,EAAA,CATID,kBAAkB;AAAAW,EAAA,GAAlBX,kBAAkB;AAWxB,eAAeA,kBAAkB;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}