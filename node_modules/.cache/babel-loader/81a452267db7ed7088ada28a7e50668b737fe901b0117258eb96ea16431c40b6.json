{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tejit\\\\OneDrive\\\\Desktop\\\\expence tracker final\\\\expence-tracker\\\\src\\\\components\\\\split\\\\SplitExpenseList.js\",\n  _s = $RefreshSig$();\n// src/components/split/SplitExpenseList.js\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { SplitExpenseContext } from '../../context/SplitExpenseContext';\nimport { getSplitSummary } from '../../models/SplitExpenseModel';\nimport './SplitExpense.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SplitExpenseList = () => {\n  _s();\n  const {\n    getAllSplitExpenses,\n    loading: contextLoading\n  } = useContext(SplitExpenseContext);\n  const [splitExpenses, setSplitExpenses] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [filter, setFilter] = useState('all'); // all, pending, settled\n  const [searchQuery, setSearchQuery] = useState('');\n\n  // Load split expenses with error handling\n  useEffect(() => {\n    try {\n      const expenses = getAllSplitExpenses();\n      console.log(`Loaded ${expenses.length} split expenses`);\n\n      // Add summary data to each expense for filtering and display\n      const expensesWithSummary = expenses.map(expense => {\n        try {\n          return {\n            ...expense,\n            summary: getSplitSummary(expense)\n          };\n        } catch (err) {\n          var _expense$participants;\n          console.error('Error calculating summary for expense:', err, expense);\n          return {\n            ...expense,\n            summary: {\n              paidAmount: 0,\n              pendingAmount: expense.totalAmount || 0,\n              participantCount: ((_expense$participants = expense.participants) === null || _expense$participants === void 0 ? void 0 : _expense$participants.length) || 0,\n              paidCount: 0\n            }\n          };\n        }\n      });\n      setSplitExpenses(expensesWithSummary);\n    } catch (err) {\n      console.error('Error loading split expenses:', err);\n      setSplitExpenses([]);\n    } finally {\n      setLoading(false);\n    }\n  }, [getAllSplitExpenses]);\n\n  // Filter split expenses with improved error handling\n  const filteredExpenses = splitExpenses.filter(expense => {\n    // Filter by status\n    if (filter === 'pending') {\n      return expense.status === 'pending' || expense.status === 'partial';\n    } else if (filter === 'settled') {\n      return expense.status === 'settled';\n    }\n    return true;\n  }).filter(expense => {\n    // Filter by search query (with null checks)\n    if (!searchQuery) return true;\n    const query = searchQuery.toLowerCase();\n    return expense.description && expense.description.toLowerCase().includes(query) || expense.category && expense.category.toLowerCase().includes(query) || expense.participants && Array.isArray(expense.participants) && expense.participants.some(p => p.name && p.name.toLowerCase().includes(query) || p.email && p.email.toLowerCase().includes(query));\n  }).sort((a, b) => {\n    // Sort by date (newest first) with proper error handling\n    try {\n      const dateA = a.date ? new Date(a.date) : new Date(0);\n      const dateB = b.date ? new Date(b.date) : new Date(0);\n      return dateB - dateA;\n    } catch (err) {\n      console.error('Error sorting expenses by date:', err);\n      return 0; // Keep original order if date comparison fails\n    }\n  });\n\n  // Format currency with validation\n  const formatCurrency = amount => {\n    const parsedAmount = parseFloat(amount);\n    return isNaN(parsedAmount) ? '$0.00' : `$${parsedAmount.toFixed(2)}`;\n  };\n\n  // Format date with validation\n  const formatDate = dateString => {\n    if (!dateString) return 'N/A';\n    try {\n      const date = new Date(dateString);\n      return date.toLocaleDateString(undefined, {\n        year: 'numeric',\n        month: 'short',\n        day: 'numeric'\n      });\n    } catch (e) {\n      return dateString || 'N/A';\n    }\n  };\n\n  // Calculate progress percentage safely\n  const calculateProgress = expense => {\n    if (!expense.summary) return 0;\n    const {\n      paidAmount,\n      totalAmount\n    } = expense.summary;\n    if (!totalAmount || totalAmount === 0) return 0;\n    return Math.min(100, paidAmount / expense.totalAmount * 100);\n  };\n\n  // Loading state\n  if (loading || contextLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading split expenses...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"split-expense-list-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"split-expense-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Split Expenses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/split/new\",\n        className: \"create-split-btn\",\n        children: \"Create New Split\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"split-expense-filters\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: filter === 'all' ? 'active' : '',\n          onClick: () => setFilter('all'),\n          children: \"All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: filter === 'pending' ? 'active' : '',\n          onClick: () => setFilter('pending'),\n          children: \"Pending\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: filter === 'settled' ? 'active' : '',\n          onClick: () => setFilter('settled'),\n          children: \"Settled\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-box\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search split expenses...\",\n          value: searchQuery,\n          onChange: e => setSearchQuery(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), filteredExpenses.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-splits-message\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: searchQuery || filter !== 'all' ? 'No split expenses found matching your criteria.' : 'No split expenses found.'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/split/new\",\n        className: \"create-split-btn\",\n        children: \"Create your first split expense\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"split-expenses-grid\",\n      children: filteredExpenses.map(expense => {\n        var _expense$participants2, _expense$participants3;\n        return /*#__PURE__*/_jsxDEV(Link, {\n          to: `/split/details/${expense.id}`,\n          className: \"split-expense-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"split-card-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"split-title\",\n              children: expense.description || 'Unnamed Split'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `split-status status-${expense.status || 'pending'}`,\n              children: expense.status === 'pending' ? 'Pending' : expense.status === 'partial' ? 'Partially Paid' : 'Settled'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"split-card-meta\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"split-category\",\n              children: expense.category || 'Uncategorized'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"split-date\",\n              children: formatDate(expense.date)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"split-card-amount\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"total-amount\",\n              children: formatCurrency(expense.totalAmount)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"split-card-participants\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"participants-count\",\n              children: [((_expense$participants2 = expense.participants) === null || _expense$participants2 === void 0 ? void 0 : _expense$participants2.length) || 0, \" \", ((_expense$participants3 = expense.participants) === null || _expense$participants3 === void 0 ? void 0 : _expense$participants3.length) === 1 ? 'person' : 'people']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 17\n            }, this), expense.summary && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"payment-progress\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"progress-bar\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"progress-fill\",\n                  style: {\n                    width: `${calculateProgress(expense)}%`\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"progress-text\",\n                children: [expense.summary.paidCount, \" of \", expense.summary.participantCount, \" paid\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"participant-avatars\",\n              children: [expense.participants && expense.participants.slice(0, 3).map((participant, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `participant-avatar ${participant.status === 'paid' ? 'paid' : ''}`,\n                title: participant.name || 'Participant',\n                children: (participant.name || '?').charAt(0).toUpperCase()\n              }, participant.id || index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 21\n              }, this)), expense.participants && expense.participants.length > 3 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"participant-avatar more\",\n                children: [\"+\", expense.participants.length - 3]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 15\n          }, this)]\n        }, expense.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n};\n_s(SplitExpenseList, \"1RVw41Upmo41SP0HiD0LkI6lukw=\");\n_c = SplitExpenseList;\nexport default SplitExpenseList;\nvar _c;\n$RefreshReg$(_c, \"SplitExpenseList\");","map":{"version":3,"names":["React","useState","useEffect","useContext","Link","SplitExpenseContext","getSplitSummary","jsxDEV","_jsxDEV","SplitExpenseList","_s","getAllSplitExpenses","loading","contextLoading","splitExpenses","setSplitExpenses","setLoading","filter","setFilter","searchQuery","setSearchQuery","expenses","console","log","length","expensesWithSummary","map","expense","summary","err","_expense$participants","error","paidAmount","pendingAmount","totalAmount","participantCount","participants","paidCount","filteredExpenses","status","query","toLowerCase","description","includes","category","Array","isArray","some","p","name","email","sort","a","b","dateA","date","Date","dateB","formatCurrency","amount","parsedAmount","parseFloat","isNaN","toFixed","formatDate","dateString","toLocaleDateString","undefined","year","month","day","e","calculateProgress","Math","min","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","onClick","type","placeholder","value","onChange","target","_expense$participants2","_expense$participants3","id","style","width","slice","participant","index","title","charAt","toUpperCase","_c","$RefreshReg$"],"sources":["C:/Users/tejit/OneDrive/Desktop/expence tracker final/expence-tracker/src/components/split/SplitExpenseList.js"],"sourcesContent":["// src/components/split/SplitExpenseList.js\r\nimport React, { useState, useEffect, useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { SplitExpenseContext } from '../../context/SplitExpenseContext';\r\nimport { getSplitSummary } from '../../models/SplitExpenseModel';\r\nimport './SplitExpense.css';\r\n\r\nconst SplitExpenseList = () => {\r\n  const { getAllSplitExpenses, loading: contextLoading } = useContext(SplitExpenseContext);\r\n  \r\n  const [splitExpenses, setSplitExpenses] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [filter, setFilter] = useState('all'); // all, pending, settled\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  \r\n  // Load split expenses with error handling\r\n  useEffect(() => {\r\n    try {\r\n      const expenses = getAllSplitExpenses();\r\n      console.log(`Loaded ${expenses.length} split expenses`);\r\n      \r\n      // Add summary data to each expense for filtering and display\r\n      const expensesWithSummary = expenses.map(expense => {\r\n        try {\r\n          return {\r\n            ...expense,\r\n            summary: getSplitSummary(expense)\r\n          };\r\n        } catch (err) {\r\n          console.error('Error calculating summary for expense:', err, expense);\r\n          return {\r\n            ...expense,\r\n            summary: {\r\n              paidAmount: 0,\r\n              pendingAmount: expense.totalAmount || 0,\r\n              participantCount: expense.participants?.length || 0,\r\n              paidCount: 0\r\n            }\r\n          };\r\n        }\r\n      });\r\n      \r\n      setSplitExpenses(expensesWithSummary);\r\n    } catch (err) {\r\n      console.error('Error loading split expenses:', err);\r\n      setSplitExpenses([]);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [getAllSplitExpenses]);\r\n  \r\n  // Filter split expenses with improved error handling\r\n  const filteredExpenses = splitExpenses\r\n    .filter(expense => {\r\n      // Filter by status\r\n      if (filter === 'pending') {\r\n        return expense.status === 'pending' || expense.status === 'partial';\r\n      } else if (filter === 'settled') {\r\n        return expense.status === 'settled';\r\n      }\r\n      return true;\r\n    })\r\n    .filter(expense => {\r\n      // Filter by search query (with null checks)\r\n      if (!searchQuery) return true;\r\n      \r\n      const query = searchQuery.toLowerCase();\r\n      return (\r\n        (expense.description && expense.description.toLowerCase().includes(query)) ||\r\n        (expense.category && expense.category.toLowerCase().includes(query)) ||\r\n        (expense.participants && Array.isArray(expense.participants) && expense.participants.some(p => \r\n          (p.name && p.name.toLowerCase().includes(query)) ||\r\n          (p.email && p.email.toLowerCase().includes(query))\r\n        ))\r\n      );\r\n    })\r\n    .sort((a, b) => {\r\n      // Sort by date (newest first) with proper error handling\r\n      try {\r\n        const dateA = a.date ? new Date(a.date) : new Date(0);\r\n        const dateB = b.date ? new Date(b.date) : new Date(0);\r\n        return dateB - dateA;\r\n      } catch (err) {\r\n        console.error('Error sorting expenses by date:', err);\r\n        return 0; // Keep original order if date comparison fails\r\n      }\r\n    });\r\n  \r\n  // Format currency with validation\r\n  const formatCurrency = (amount) => {\r\n    const parsedAmount = parseFloat(amount);\r\n    return isNaN(parsedAmount) ? '$0.00' : `$${parsedAmount.toFixed(2)}`;\r\n  };\r\n  \r\n  // Format date with validation\r\n  const formatDate = (dateString) => {\r\n    if (!dateString) return 'N/A';\r\n    \r\n    try {\r\n      const date = new Date(dateString);\r\n      return date.toLocaleDateString(undefined, {\r\n        year: 'numeric',\r\n        month: 'short',\r\n        day: 'numeric'\r\n      });\r\n    } catch (e) {\r\n      return dateString || 'N/A';\r\n    }\r\n  };\r\n  \r\n  // Calculate progress percentage safely\r\n  const calculateProgress = (expense) => {\r\n    if (!expense.summary) return 0;\r\n    \r\n    const { paidAmount, totalAmount } = expense.summary;\r\n    if (!totalAmount || totalAmount === 0) return 0;\r\n    \r\n    return Math.min(100, (paidAmount / expense.totalAmount) * 100);\r\n  };\r\n  \r\n  // Loading state\r\n  if (loading || contextLoading) {\r\n    return <div className=\"loading\">Loading split expenses...</div>;\r\n  }\r\n  \r\n  return (\r\n    <div className=\"split-expense-list-container\">\r\n      <div className=\"split-expense-header\">\r\n        <h1>Split Expenses</h1>\r\n        <Link to=\"/split/new\" className=\"create-split-btn\">\r\n          Create New Split\r\n        </Link>\r\n      </div>\r\n      \r\n      <div className=\"split-expense-filters\">\r\n        <div className=\"filter-buttons\">\r\n          <button\r\n            className={filter === 'all' ? 'active' : ''}\r\n            onClick={() => setFilter('all')}\r\n          >\r\n            All\r\n          </button>\r\n          <button\r\n            className={filter === 'pending' ? 'active' : ''}\r\n            onClick={() => setFilter('pending')}\r\n          >\r\n            Pending\r\n          </button>\r\n          <button\r\n            className={filter === 'settled' ? 'active' : ''}\r\n            onClick={() => setFilter('settled')}\r\n          >\r\n            Settled\r\n          </button>\r\n        </div>\r\n        \r\n        <div className=\"search-box\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search split expenses...\"\r\n            value={searchQuery}\r\n            onChange={(e) => setSearchQuery(e.target.value)}\r\n          />\r\n        </div>\r\n      </div>\r\n      \r\n      {filteredExpenses.length === 0 ? (\r\n        <div className=\"no-splits-message\">\r\n          <p>\r\n            {searchQuery || filter !== 'all' \r\n              ? 'No split expenses found matching your criteria.' \r\n              : 'No split expenses found.'}\r\n          </p>\r\n          <Link to=\"/split/new\" className=\"create-split-btn\">\r\n            Create your first split expense\r\n          </Link>\r\n        </div>\r\n      ) : (\r\n        <div className=\"split-expenses-grid\">\r\n          {filteredExpenses.map(expense => (\r\n            <Link \r\n              to={`/split/details/${expense.id}`} \r\n              className=\"split-expense-card\" \r\n              key={expense.id}\r\n            >\r\n              <div className=\"split-card-header\">\r\n                <h3 className=\"split-title\">{expense.description || 'Unnamed Split'}</h3>\r\n                <span className={`split-status status-${expense.status || 'pending'}`}>\r\n                  {expense.status === 'pending' ? 'Pending' : \r\n                   expense.status === 'partial' ? 'Partially Paid' : 'Settled'}\r\n                </span>\r\n              </div>\r\n              \r\n              <div className=\"split-card-meta\">\r\n                <div className=\"split-category\">{expense.category || 'Uncategorized'}</div>\r\n                <div className=\"split-date\">{formatDate(expense.date)}</div>\r\n              </div>\r\n              \r\n              <div className=\"split-card-amount\">\r\n                <div className=\"total-amount\">{formatCurrency(expense.totalAmount)}</div>\r\n              </div>\r\n              \r\n              <div className=\"split-card-participants\">\r\n                <div className=\"participants-count\">\r\n                  {expense.participants?.length || 0} {expense.participants?.length === 1 ? 'person' : 'people'}\r\n                </div>\r\n                \r\n                {expense.summary && (\r\n                  <div className=\"payment-progress\">\r\n                    <div className=\"progress-bar\">\r\n                      <div \r\n                        className=\"progress-fill\"\r\n                        style={{ \r\n                          width: `${calculateProgress(expense)}%` \r\n                        }}\r\n                      ></div>\r\n                    </div>\r\n                    <div className=\"progress-text\">\r\n                      {expense.summary.paidCount} of {expense.summary.participantCount} paid\r\n                    </div>\r\n                  </div>\r\n                )}\r\n                \r\n                <div className=\"participant-avatars\">\r\n                  {expense.participants && expense.participants.slice(0, 3).map((participant, index) => (\r\n                    <div\r\n                      key={participant.id || index}\r\n                      className={`participant-avatar ${participant.status === 'paid' ? 'paid' : ''}`}\r\n                      title={participant.name || 'Participant'}\r\n                    >\r\n                      {(participant.name || '?').charAt(0).toUpperCase()}\r\n                    </div>\r\n                  ))}\r\n                  {expense.participants && expense.participants.length > 3 && (\r\n                    <div className=\"participant-avatar more\">\r\n                      +{expense.participants.length - 3}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </Link>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SplitExpenseList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}