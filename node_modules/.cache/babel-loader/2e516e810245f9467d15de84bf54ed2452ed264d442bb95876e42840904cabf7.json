{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tejit\\\\OneDrive\\\\Desktop\\\\expence-tracker\\\\src\\\\context\\\\ExpenseContext.js\",\n  _s = $RefreshSig$();\n// src/context/ExpenseContext.js\nimport React, { createContext, useState, useEffect, useContext } from 'react';\nimport { AuthContext } from './AuthContext';\nimport { sendBudgetAlertEmail } from '../services/EmailService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ExpenseContext = /*#__PURE__*/createContext();\nexport const ExpenseProvider = ({\n  children\n}) => {\n  _s();\n  const [expenses, setExpenses] = useState([]);\n  const [incomes, setIncomes] = useState([]);\n  const [budgets, setBudgets] = useState({});\n  const [alerts, setAlerts] = useState([]);\n  const {\n    currentUser\n  } = useContext(AuthContext);\n\n  // Generate unique storage keys for current user\n  const getUserStorageKey = key => {\n    if (!currentUser) return key;\n    return `${key}_${currentUser.id}`;\n  };\n\n  // Load data from localStorage on initial render or when user changes\n  useEffect(() => {\n    if (currentUser) {\n      const savedExpenses = JSON.parse(localStorage.getItem(getUserStorageKey('expenses'))) || [];\n      const savedIncomes = JSON.parse(localStorage.getItem(getUserStorageKey('incomes'))) || [];\n      const savedBudgets = JSON.parse(localStorage.getItem(getUserStorageKey('budgets'))) || {};\n      const savedAlerts = JSON.parse(localStorage.getItem(getUserStorageKey('alerts'))) || [];\n      setExpenses(savedExpenses);\n      setIncomes(savedIncomes);\n      setBudgets(savedBudgets);\n      setAlerts(savedAlerts);\n    } else {\n      // Clear data when logged out\n      setExpenses([]);\n      setIncomes([]);\n      setBudgets({});\n      setAlerts([]);\n    }\n  }, [currentUser]);\n\n  // Save data to localStorage whenever it changes\n  useEffect(() => {\n    if (currentUser) {\n      localStorage.setItem(getUserStorageKey('expenses'), JSON.stringify(expenses));\n    }\n  }, [expenses, currentUser]);\n  useEffect(() => {\n    if (currentUser) {\n      localStorage.setItem(getUserStorageKey('incomes'), JSON.stringify(incomes));\n    }\n  }, [incomes, currentUser]);\n  useEffect(() => {\n    if (currentUser) {\n      localStorage.setItem(getUserStorageKey('budgets'), JSON.stringify(budgets));\n    }\n  }, [budgets, currentUser]);\n  useEffect(() => {\n    if (currentUser) {\n      localStorage.setItem(getUserStorageKey('alerts'), JSON.stringify(alerts));\n    }\n  }, [alerts, currentUser]);\n\n  // Add a new expense\n  const addExpense = expense => {\n    const newExpense = {\n      ...expense,\n      id: Date.now(),\n      date: expense.date || new Date().toISOString().slice(0, 10),\n      userId: currentUser === null || currentUser === void 0 ? void 0 : currentUser.id\n    };\n    setExpenses([...expenses, newExpense]);\n    checkBudgetAlerts(newExpense);\n  };\n\n  // Add a new income\n  const addIncome = income => {\n    const newIncome = {\n      ...income,\n      id: Date.now(),\n      date: income.date || new Date().toISOString().slice(0, 10),\n      userId: currentUser === null || currentUser === void 0 ? void 0 : currentUser.id\n    };\n    setIncomes([...incomes, newIncome]);\n  };\n\n  // Delete an expense\n  const deleteExpense = id => {\n    setExpenses(expenses.filter(expense => expense.id !== id));\n  };\n\n  // Delete an income\n  const deleteIncome = id => {\n    setIncomes(incomes.filter(income => income.id !== id));\n  };\n\n  // Update budget settings\n  const updateBudget = (category, amount) => {\n    setBudgets({\n      ...budgets,\n      [category]: amount\n    });\n  };\n\n  // Check if adding this expense exceeds the budget\n  const checkBudgetAlerts = newExpense => {\n    const {\n      category\n    } = newExpense;\n    if (budgets[category]) {\n      // Get current month expenses for this category\n      const currentDate = new Date();\n      const currentMonth = currentDate.getMonth();\n      const currentYear = currentDate.getFullYear();\n      const monthlyExpenses = expenses.filter(expense => {\n        const expenseDate = new Date(expense.date);\n        return expenseDate.getMonth() === currentMonth && expenseDate.getFullYear() === currentYear && expense.category === category && expense.userId === (currentUser === null || currentUser === void 0 ? void 0 : currentUser.id);\n      });\n      const totalSpent = monthlyExpenses.reduce((sum, expense) => sum + parseFloat(expense.amount), 0) + parseFloat(newExpense.amount);\n      const budgetAmount = parseFloat(budgets[category]);\n      if (totalSpent > budgetAmount) {\n        var _currentUser$preferen;\n        const newAlert = {\n          id: Date.now(),\n          message: `Budget alert: You've exceeded your ${category} budget of $${budgetAmount.toFixed(2)}`,\n          category: category,\n          read: false,\n          date: new Date().toISOString(),\n          userId: currentUser === null || currentUser === void 0 ? void 0 : currentUser.id\n        };\n        setAlerts(prevAlerts => [...prevAlerts, newAlert]);\n\n        // Send email alert if user has enabled email notifications\n        if ((currentUser === null || currentUser === void 0 ? void 0 : (_currentUser$preferen = currentUser.preferences) === null || _currentUser$preferen === void 0 ? void 0 : _currentUser$preferen.emailNotifications) !== false) {\n          sendBudgetAlertEmail(currentUser, category, budgetAmount, totalSpent).then(result => {\n            console.log('Email alert result:', result);\n          }).catch(error => {\n            console.error('Failed to send email alert:', error);\n          });\n        }\n      }\n    }\n  };\n\n  // Mark an alert as read\n  const markAlertAsRead = id => {\n    setAlerts(alerts.map(alert => alert.id === id ? {\n      ...alert,\n      read: true\n    } : alert));\n  };\n  return /*#__PURE__*/_jsxDEV(ExpenseContext.Provider, {\n    value: {\n      expenses,\n      addExpense,\n      deleteExpense,\n      incomes,\n      addIncome,\n      deleteIncome,\n      budgets,\n      updateBudget,\n      alerts,\n      markAlertAsRead\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 5\n  }, this);\n};\n_s(ExpenseProvider, \"/7yWrPyST99Onmt2KiBfocI0Jss=\");\n_c = ExpenseProvider;\nvar _c;\n$RefreshReg$(_c, \"ExpenseProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","AuthContext","sendBudgetAlertEmail","jsxDEV","_jsxDEV","ExpenseContext","ExpenseProvider","children","_s","expenses","setExpenses","incomes","setIncomes","budgets","setBudgets","alerts","setAlerts","currentUser","getUserStorageKey","key","id","savedExpenses","JSON","parse","localStorage","getItem","savedIncomes","savedBudgets","savedAlerts","setItem","stringify","addExpense","expense","newExpense","Date","now","date","toISOString","slice","userId","checkBudgetAlerts","addIncome","income","newIncome","deleteExpense","filter","deleteIncome","updateBudget","category","amount","currentDate","currentMonth","getMonth","currentYear","getFullYear","monthlyExpenses","expenseDate","totalSpent","reduce","sum","parseFloat","budgetAmount","_currentUser$preferen","newAlert","message","toFixed","read","prevAlerts","preferences","emailNotifications","then","result","console","log","catch","error","markAlertAsRead","map","alert","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/tejit/OneDrive/Desktop/expence-tracker/src/context/ExpenseContext.js"],"sourcesContent":["// src/context/ExpenseContext.js\r\nimport React, { createContext, useState, useEffect, useContext } from 'react';\r\nimport { AuthContext } from './AuthContext';\r\nimport { sendBudgetAlertEmail } from '../services/EmailService';\r\n\r\nexport const ExpenseContext = createContext();\r\n\r\nexport const ExpenseProvider = ({ children }) => {\r\n  const [expenses, setExpenses] = useState([]);\r\n  const [incomes, setIncomes] = useState([]);\r\n  const [budgets, setBudgets] = useState({});\r\n  const [alerts, setAlerts] = useState([]);\r\n  \r\n  const { currentUser } = useContext(AuthContext);\r\n  \r\n  // Generate unique storage keys for current user\r\n  const getUserStorageKey = (key) => {\r\n    if (!currentUser) return key;\r\n    return `${key}_${currentUser.id}`;\r\n  };\r\n  \r\n  // Load data from localStorage on initial render or when user changes\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      const savedExpenses = JSON.parse(localStorage.getItem(getUserStorageKey('expenses'))) || [];\r\n      const savedIncomes = JSON.parse(localStorage.getItem(getUserStorageKey('incomes'))) || [];\r\n      const savedBudgets = JSON.parse(localStorage.getItem(getUserStorageKey('budgets'))) || {};\r\n      const savedAlerts = JSON.parse(localStorage.getItem(getUserStorageKey('alerts'))) || [];\r\n      \r\n      setExpenses(savedExpenses);\r\n      setIncomes(savedIncomes);\r\n      setBudgets(savedBudgets);\r\n      setAlerts(savedAlerts);\r\n    } else {\r\n      // Clear data when logged out\r\n      setExpenses([]);\r\n      setIncomes([]);\r\n      setBudgets({});\r\n      setAlerts([]);\r\n    }\r\n  }, [currentUser]);\r\n  \r\n  // Save data to localStorage whenever it changes\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      localStorage.setItem(getUserStorageKey('expenses'), JSON.stringify(expenses));\r\n    }\r\n  }, [expenses, currentUser]);\r\n  \r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      localStorage.setItem(getUserStorageKey('incomes'), JSON.stringify(incomes));\r\n    }\r\n  }, [incomes, currentUser]);\r\n  \r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      localStorage.setItem(getUserStorageKey('budgets'), JSON.stringify(budgets));\r\n    }\r\n  }, [budgets, currentUser]);\r\n  \r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      localStorage.setItem(getUserStorageKey('alerts'), JSON.stringify(alerts));\r\n    }\r\n  }, [alerts, currentUser]);\r\n  \r\n  // Add a new expense\r\n  const addExpense = (expense) => {\r\n    const newExpense = {\r\n      ...expense,\r\n      id: Date.now(),\r\n      date: expense.date || new Date().toISOString().slice(0, 10),\r\n      userId: currentUser?.id\r\n    };\r\n    \r\n    setExpenses([...expenses, newExpense]);\r\n    checkBudgetAlerts(newExpense);\r\n  };\r\n  \r\n  // Add a new income\r\n  const addIncome = (income) => {\r\n    const newIncome = {\r\n      ...income,\r\n      id: Date.now(),\r\n      date: income.date || new Date().toISOString().slice(0, 10),\r\n      userId: currentUser?.id\r\n    };\r\n    \r\n    setIncomes([...incomes, newIncome]);\r\n  };\r\n  \r\n  // Delete an expense\r\n  const deleteExpense = (id) => {\r\n    setExpenses(expenses.filter(expense => expense.id !== id));\r\n  };\r\n  \r\n  // Delete an income\r\n  const deleteIncome = (id) => {\r\n    setIncomes(incomes.filter(income => income.id !== id));\r\n  };\r\n  \r\n  // Update budget settings\r\n  const updateBudget = (category, amount) => {\r\n    setBudgets({\r\n      ...budgets,\r\n      [category]: amount\r\n    });\r\n  };\r\n  \r\n  // Check if adding this expense exceeds the budget\r\n  const checkBudgetAlerts = (newExpense) => {\r\n    const { category } = newExpense;\r\n    \r\n    if (budgets[category]) {\r\n      // Get current month expenses for this category\r\n      const currentDate = new Date();\r\n      const currentMonth = currentDate.getMonth();\r\n      const currentYear = currentDate.getFullYear();\r\n      \r\n      const monthlyExpenses = expenses.filter(expense => {\r\n        const expenseDate = new Date(expense.date);\r\n        return expenseDate.getMonth() === currentMonth && \r\n               expenseDate.getFullYear() === currentYear &&\r\n               expense.category === category &&\r\n               expense.userId === currentUser?.id;\r\n      });\r\n      \r\n      const totalSpent = monthlyExpenses.reduce((sum, expense) => sum + parseFloat(expense.amount), 0) + parseFloat(newExpense.amount);\r\n      const budgetAmount = parseFloat(budgets[category]);\r\n      \r\n      if (totalSpent > budgetAmount) {\r\n        const newAlert = {\r\n          id: Date.now(),\r\n          message: `Budget alert: You've exceeded your ${category} budget of $${budgetAmount.toFixed(2)}`,\r\n          category: category,\r\n          read: false,\r\n          date: new Date().toISOString(),\r\n          userId: currentUser?.id\r\n        };\r\n        \r\n        setAlerts(prevAlerts => [...prevAlerts, newAlert]);\r\n        \r\n        // Send email alert if user has enabled email notifications\r\n        if (currentUser?.preferences?.emailNotifications !== false) {\r\n          sendBudgetAlertEmail(\r\n            currentUser,\r\n            category,\r\n            budgetAmount,\r\n            totalSpent\r\n          ).then(result => {\r\n            console.log('Email alert result:', result);\r\n          }).catch(error => {\r\n            console.error('Failed to send email alert:', error);\r\n          });\r\n        }\r\n      }\r\n    }\r\n  };\r\n  \r\n  // Mark an alert as read\r\n  const markAlertAsRead = (id) => {\r\n    setAlerts(alerts.map(alert => \r\n      alert.id === id ? { ...alert, read: true } : alert\r\n    ));\r\n  };\r\n  \r\n  return (\r\n    <ExpenseContext.Provider \r\n      value={{ \r\n        expenses, \r\n        addExpense, \r\n        deleteExpense, \r\n        incomes, \r\n        addIncome,\r\n        deleteIncome,\r\n        budgets, \r\n        updateBudget,\r\n        alerts,\r\n        markAlertAsRead\r\n      }}>\r\n      {children}\r\n    </ExpenseContext.Provider>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}