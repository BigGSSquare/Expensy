{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tejit\\\\OneDrive\\\\Desktop\\\\expence-tracker\\\\src\\\\components\\\\BudgetSettings.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState, useEffect } from 'react';\nimport { ExpenseContext } from '../context/ExpenseContext';\nimport { AuthContext } from '../context/AuthContext';\nimport './BudgetSettings.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BudgetSettings = () => {\n  _s();\n  var _currentUser$preferen;\n  const {\n    budgets,\n    updateBudget,\n    expenses,\n    categories\n  } = useContext(ExpenseContext);\n  const {\n    currentUser,\n    updateProfile\n  } = useContext(AuthContext);\n  const [newCategory, setNewCategory] = useState('');\n  const [newAmount, setNewAmount] = useState('');\n  const [categoryUsage, setCategoryUsage] = useState({});\n  const [emailAlerts, setEmailAlerts] = useState((currentUser === null || currentUser === void 0 ? void 0 : (_currentUser$preferen = currentUser.preferences) === null || _currentUser$preferen === void 0 ? void 0 : _currentUser$preferen.emailNotifications) !== false);\n\n  // Calculate current month's spending by category\n  useEffect(() => {\n    const currentDate = new Date();\n    const currentMonth = currentDate.getMonth();\n    const currentYear = currentDate.getFullYear();\n    const usage = {};\n    categories.forEach(category => {\n      if (budgets[category]) {\n        const monthlyExpenses = expenses.filter(expense => {\n          const expenseDate = new Date(expense.date);\n          return expenseDate.getMonth() === currentMonth && expenseDate.getFullYear() === currentYear && expense.category === category;\n        });\n        const totalSpent = monthlyExpenses.reduce((sum, expense) => sum + parseFloat(expense.amount), 0);\n        const budget = parseFloat(budgets[category]);\n        usage[category] = {\n          spent: totalSpent,\n          budget: budget,\n          percentage: totalSpent / budget * 100,\n          remaining: budget - totalSpent\n        };\n      }\n    });\n    setCategoryUsage(usage);\n  }, [expenses, budgets, categories]);\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!newCategory || !newAmount) {\n      alert('Please select a category and enter an amount');\n      return;\n    }\n    updateBudget(newCategory, parseFloat(newAmount));\n    setNewCategory('');\n    setNewAmount('');\n  };\n  const handleUpdate = (category, amount) => {\n    const newAmount = prompt(`Enter new budget for ${category}:`, amount);\n    if (newAmount !== null) {\n      updateBudget(category, parseFloat(newAmount));\n    }\n  };\n  const handleEmailAlertsChange = e => {\n    const isChecked = e.target.checked;\n    setEmailAlerts(isChecked);\n\n    // Update user preferences\n    if (currentUser) {\n      const preferences = {\n        ...(currentUser.preferences || {}),\n        emailNotifications: isChecked\n      };\n      updateProfile({\n        preferences\n      });\n    }\n  };\n  const getProgressColor = percentage => {\n    if (percentage >= 100) return '#ff4d4f'; // Red\n    if (percentage >= 80) return '#faad14'; // Yellow/Amber\n    return '#52c41a'; // Green\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"budget-settings\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Budget Settings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notification-settings\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Alert Settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Configure how you want to be notified when you exceed your budget limits.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert-options\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"email-alert-option\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: emailAlerts,\n            onChange: handleEmailAlertsChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alert-option-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"alert-option-title\",\n              children: \"Email Alerts\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"alert-option-desc\",\n              children: \"Send an email notification when you exceed a budget\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"current-budgets\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Current Budgets\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), Object.keys(budgets).length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"budgets-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Monthly Budget\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Spent\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Remaining\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Progress\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: Object.entries(budgets).map(([category, amount]) => {\n            const usage = categoryUsage[category] || {\n              spent: 0,\n              budget: parseFloat(amount),\n              percentage: 0,\n              remaining: parseFloat(amount)\n            };\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: category\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"$\", parseFloat(amount).toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"$\", usage.spent.toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: usage.remaining < 0 ? 'negative-balance' : '',\n                children: [\"$\", Math.abs(usage.remaining).toFixed(2), usage.remaining < 0 && ' over budget']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"progress-container\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"progress-bar\",\n                    style: {\n                      width: `${Math.min(usage.percentage, 100)}%`,\n                      backgroundColor: getProgressColor(usage.percentage)\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 148,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"progress-text\",\n                    children: [usage.percentage.toFixed(0), \"%\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 155,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"edit-btn\",\n                  onClick: () => handleUpdate(category, amount),\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 21\n              }, this)]\n            }, category, true, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No budgets set yet. Add your first budget below.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-budget\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add New Budget\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"category\",\n              children: \"Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"category\",\n              value: newCategory,\n              onChange: e => setNewCategory(e.target.value),\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select a category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 17\n              }, this), categories.filter(category => !budgets[category]).map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: category,\n                children: category\n              }, category, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"amount\",\n              children: \"Monthly Budget\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              id: \"amount\",\n              value: newAmount,\n              onChange: e => setNewAmount(e.target.value),\n              min: \"1\",\n              step: \"0.01\",\n              placeholder: \"0.00\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"add-btn\",\n            children: \"Add Budget\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n_s(BudgetSettings, \"pUPZ6tmGGbKP6Dy1z6u0LthWv8E=\");\n_c = BudgetSettings;\nexport default BudgetSettings;\nvar _c;\n$RefreshReg$(_c, \"BudgetSettings\");","map":{"version":3,"names":["React","useContext","useState","useEffect","ExpenseContext","AuthContext","jsxDEV","_jsxDEV","BudgetSettings","_s","_currentUser$preferen","budgets","updateBudget","expenses","categories","currentUser","updateProfile","newCategory","setNewCategory","newAmount","setNewAmount","categoryUsage","setCategoryUsage","emailAlerts","setEmailAlerts","preferences","emailNotifications","currentDate","Date","currentMonth","getMonth","currentYear","getFullYear","usage","forEach","category","monthlyExpenses","filter","expense","expenseDate","date","totalSpent","reduce","sum","parseFloat","amount","budget","spent","percentage","remaining","handleSubmit","e","preventDefault","alert","handleUpdate","prompt","handleEmailAlertsChange","isChecked","target","checked","getProgressColor","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","Object","keys","length","entries","map","toFixed","Math","abs","style","width","min","backgroundColor","onClick","onSubmit","htmlFor","id","value","required","step","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/tejit/OneDrive/Desktop/expence-tracker/src/components/BudgetSettings.js"],"sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\r\nimport { ExpenseContext } from '../context/ExpenseContext';\r\nimport { AuthContext } from '../context/AuthContext';\r\nimport './BudgetSettings.css';\r\n\r\nconst BudgetSettings = () => {\r\n  const { budgets, updateBudget, expenses, categories } = useContext(ExpenseContext);\r\n  const { currentUser, updateProfile } = useContext(AuthContext);\r\n  const [newCategory, setNewCategory] = useState('');\r\n  const [newAmount, setNewAmount] = useState('');\r\n  const [categoryUsage, setCategoryUsage] = useState({});\r\n  const [emailAlerts, setEmailAlerts] = useState(\r\n    currentUser?.preferences?.emailNotifications !== false\r\n  );\r\n  \r\n  // Calculate current month's spending by category\r\n  useEffect(() => {\r\n    const currentDate = new Date();\r\n    const currentMonth = currentDate.getMonth();\r\n    const currentYear = currentDate.getFullYear();\r\n    \r\n    const usage = {};\r\n    \r\n    categories.forEach(category => {\r\n      if (budgets[category]) {\r\n        const monthlyExpenses = expenses.filter(expense => {\r\n          const expenseDate = new Date(expense.date);\r\n          return expenseDate.getMonth() === currentMonth && \r\n                 expenseDate.getFullYear() === currentYear &&\r\n                 expense.category === category;\r\n        });\r\n        \r\n        const totalSpent = monthlyExpenses.reduce((sum, expense) => sum + parseFloat(expense.amount), 0);\r\n        const budget = parseFloat(budgets[category]);\r\n        \r\n        usage[category] = {\r\n          spent: totalSpent,\r\n          budget: budget,\r\n          percentage: (totalSpent / budget) * 100,\r\n          remaining: budget - totalSpent\r\n        };\r\n      }\r\n    });\r\n    \r\n    setCategoryUsage(usage);\r\n  }, [expenses, budgets, categories]);\r\n  \r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!newCategory || !newAmount) {\r\n      alert('Please select a category and enter an amount');\r\n      return;\r\n    }\r\n    \r\n    updateBudget(newCategory, parseFloat(newAmount));\r\n    setNewCategory('');\r\n    setNewAmount('');\r\n  };\r\n  \r\n  const handleUpdate = (category, amount) => {\r\n    const newAmount = prompt(`Enter new budget for ${category}:`, amount);\r\n    if (newAmount !== null) {\r\n      updateBudget(category, parseFloat(newAmount));\r\n    }\r\n  };\r\n  \r\n  const handleEmailAlertsChange = (e) => {\r\n    const isChecked = e.target.checked;\r\n    setEmailAlerts(isChecked);\r\n    \r\n    // Update user preferences\r\n    if (currentUser) {\r\n      const preferences = {\r\n        ...(currentUser.preferences || {}),\r\n        emailNotifications: isChecked\r\n      };\r\n      \r\n      updateProfile({ preferences });\r\n    }\r\n  };\r\n  \r\n  const getProgressColor = (percentage) => {\r\n    if (percentage >= 100) return '#ff4d4f'; // Red\r\n    if (percentage >= 80) return '#faad14'; // Yellow/Amber\r\n    return '#52c41a'; // Green\r\n  };\r\n  \r\n  return (\r\n    <div className=\"budget-settings\">\r\n      <h1>Budget Settings</h1>\r\n      \r\n      <div className=\"notification-settings\">\r\n        <h2>Alert Settings</h2>\r\n        <p>Configure how you want to be notified when you exceed your budget limits.</p>\r\n        \r\n        <div className=\"alert-options\">\r\n          <label className=\"email-alert-option\">\r\n            <input \r\n              type=\"checkbox\" \r\n              checked={emailAlerts} \r\n              onChange={handleEmailAlertsChange} \r\n            />\r\n            <div className=\"alert-option-info\">\r\n              <span className=\"alert-option-title\">Email Alerts</span>\r\n              <span className=\"alert-option-desc\">Send an email notification when you exceed a budget</span>\r\n            </div>\r\n          </label>\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"current-budgets\">\r\n        <h2>Current Budgets</h2>\r\n        {Object.keys(budgets).length > 0 ? (\r\n          <table className=\"budgets-table\">\r\n            <thead>\r\n              <tr>\r\n                <th>Category</th>\r\n                <th>Monthly Budget</th>\r\n                <th>Spent</th>\r\n                <th>Remaining</th>\r\n                <th>Progress</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {Object.entries(budgets).map(([category, amount]) => {\r\n                const usage = categoryUsage[category] || { \r\n                  spent: 0, \r\n                  budget: parseFloat(amount), \r\n                  percentage: 0,\r\n                  remaining: parseFloat(amount)\r\n                };\r\n                \r\n                return (\r\n                  <tr key={category}>\r\n                    <td>{category}</td>\r\n                    <td>${parseFloat(amount).toFixed(2)}</td>\r\n                    <td>${usage.spent.toFixed(2)}</td>\r\n                    <td \r\n                      className={usage.remaining < 0 ? 'negative-balance' : ''}\r\n                    >\r\n                      ${Math.abs(usage.remaining).toFixed(2)}\r\n                      {usage.remaining < 0 && ' over budget'}\r\n                    </td>\r\n                    <td>\r\n                      <div className=\"progress-container\">\r\n                        <div \r\n                          className=\"progress-bar\"\r\n                          style={{ \r\n                            width: `${Math.min(usage.percentage, 100)}%`, \r\n                            backgroundColor: getProgressColor(usage.percentage) \r\n                          }}\r\n                        ></div>\r\n                        <span className=\"progress-text\">{usage.percentage.toFixed(0)}%</span>\r\n                      </div>\r\n                    </td>\r\n                    <td>\r\n                      <button \r\n                        className=\"edit-btn\"\r\n                        onClick={() => handleUpdate(category, amount)}\r\n                      >\r\n                        Edit\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        ) : (\r\n          <p>No budgets set yet. Add your first budget below.</p>\r\n        )}\r\n      </div>\r\n      \r\n      <div className=\"add-budget\">\r\n        <h2>Add New Budget</h2>\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"form-row\">\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"category\">Category</label>\r\n              <select\r\n                id=\"category\"\r\n                value={newCategory}\r\n                onChange={(e) => setNewCategory(e.target.value)}\r\n                required\r\n              >\r\n                <option value=\"\">Select a category</option>\r\n                {categories\r\n                  .filter(category => !budgets[category])\r\n                  .map((category) => (\r\n                    <option key={category} value={category}>{category}</option>\r\n                  ))}\r\n              </select>\r\n            </div>\r\n            \r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"amount\">Monthly Budget</label>\r\n              <input\r\n                type=\"number\"\r\n                id=\"amount\"\r\n                value={newAmount}\r\n                onChange={(e) => setNewAmount(e.target.value)}\r\n                min=\"1\"\r\n                step=\"0.01\"\r\n                placeholder=\"0.00\"\r\n                required\r\n              />\r\n            </div>\r\n            \r\n            <button type=\"submit\" className=\"add-btn\">Add Budget</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BudgetSettings;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}