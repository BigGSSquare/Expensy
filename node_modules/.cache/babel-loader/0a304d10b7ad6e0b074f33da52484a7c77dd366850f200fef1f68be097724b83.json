{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tejit\\\\OneDrive\\\\Desktop\\\\expence tracker final\\\\expence-tracker\\\\src\\\\index.js\";\nimport React, { useEffect } from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport { getApp } from 'firebase/app';\nimport { getAuth } from 'firebase/auth';\nimport { getFirestore } from 'firebase/firestore';\n\n// Function to check Firebase initialization\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst checkFirebaseConfig = () => {\n  try {\n    // Try to get the initialized Firebase app\n    const app = getApp();\n    console.log('Firebase initialized successfully:', app.name);\n\n    // Get auth instance\n    const auth = getAuth();\n    console.log('Firebase Auth initialized:', !!auth);\n\n    // Get Firestore instance\n    const db = getFirestore();\n    console.log('Firestore initialized:', !!db);\n    return true;\n  } catch (error) {\n    console.error('Firebase initialization check failed:', error);\n    return false;\n  }\n};\n\n// Call the checker before rendering the app\ncheckFirebaseConfig();\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(/*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 36,\n  columnNumber: 3\n}, this));","map":{"version":3,"names":["React","useEffect","ReactDOM","App","getApp","getAuth","getFirestore","jsxDEV","_jsxDEV","checkFirebaseConfig","app","console","log","name","auth","db","error","root","createRoot","document","getElementById","render","StrictMode","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/tejit/OneDrive/Desktop/expence tracker final/expence-tracker/src/index.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { getApp } from 'firebase/app';\r\nimport { getAuth } from 'firebase/auth';\r\nimport { getFirestore } from 'firebase/firestore';\r\n\r\n// Function to check Firebase initialization\r\nconst checkFirebaseConfig = () => {\r\n  try {\r\n    // Try to get the initialized Firebase app\r\n    const app = getApp();\r\n    console.log('Firebase initialized successfully:', app.name);\r\n    \r\n    // Get auth instance\r\n    const auth = getAuth();\r\n    console.log('Firebase Auth initialized:', !!auth);\r\n    \r\n    // Get Firestore instance\r\n    const db = getFirestore();\r\n    console.log('Firestore initialized:', !!db);\r\n    \r\n    return true;\r\n  } catch (error) {\r\n    console.error('Firebase initialization check failed:', error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Call the checker before rendering the app\r\ncheckFirebaseConfig();\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,OAAO;AACvB,SAASC,MAAM,QAAQ,cAAc;AACrC,SAASC,OAAO,QAAQ,eAAe;AACvC,SAASC,YAAY,QAAQ,oBAAoB;;AAEjD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;EAChC,IAAI;IACF;IACA,MAAMC,GAAG,GAAGN,MAAM,CAAC,CAAC;IACpBO,OAAO,CAACC,GAAG,CAAC,oCAAoC,EAAEF,GAAG,CAACG,IAAI,CAAC;;IAE3D;IACA,MAAMC,IAAI,GAAGT,OAAO,CAAC,CAAC;IACtBM,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAE,CAAC,CAACE,IAAI,CAAC;;IAEjD;IACA,MAAMC,EAAE,GAAGT,YAAY,CAAC,CAAC;IACzBK,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAE,CAAC,CAACG,EAAE,CAAC;IAE3C,OAAO,IAAI;EACb,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdL,OAAO,CAACK,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAAC;IAC7D,OAAO,KAAK;EACd;AACF,CAAC;;AAED;AACAP,mBAAmB,CAAC,CAAC;AAErB,MAAMQ,IAAI,GAAGf,QAAQ,CAACgB,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM,cACTb,OAAA,CAACR,KAAK,CAACsB,UAAU;EAAAC,QAAA,eACff,OAAA,CAACL,GAAG;IAAAqB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACS,CACpB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}