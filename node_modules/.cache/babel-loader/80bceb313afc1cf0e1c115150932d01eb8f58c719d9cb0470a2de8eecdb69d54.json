{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tejit\\\\OneDrive\\\\Desktop\\\\expence tracker final\\\\expence-tracker\\\\src\\\\components\\\\split\\\\SplitExpenseForm.js\",\n  _s = $RefreshSig$();\n// src/components/split/SplitExpenseForm.js\nimport React, { useState, useContext, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { ExpenseContext } from '../../context/ExpenseContext';\nimport { SplitExpenseContext } from '../../context/SplitExpenseContext';\nimport { AuthContext } from '../../context/AuthContext';\nimport { createParticipant } from '../../models/SplitExpenseModel';\nimport './SplitExpense.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SplitExpenseForm = () => {\n  _s();\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  const {\n    expenseCategories\n  } = useContext(ExpenseContext);\n  const {\n    createNewSplitExpense,\n    getAllContacts,\n    createParticipant\n  } = useContext(SplitExpenseContext);\n  const navigate = useNavigate();\n\n  // Make sure we have valid categories\n  const safeCategories = Array.isArray(expenseCategories) ? expenseCategories : [];\n\n  // Basic expense form state\n  const [expenseData, setExpenseData] = useState({\n    category: '',\n    amount: '',\n    date: new Date().toISOString().slice(0, 10),\n    description: '',\n    notes: ''\n  });\n\n  // Participants state\n  const [participants, setParticipants] = useState([]);\n  const [splitMethod, setSplitMethod] = useState('equal'); // equal, percentage, amount\n  const [error, setError] = useState('');\n  const [contacts, setContacts] = useState([]);\n\n  // New participant form state\n  const [newParticipant, setNewParticipant] = useState({\n    name: '',\n    email: '',\n    sharePercentage: '',\n    shareAmount: ''\n  });\n\n  // Add current user as a participant by default\n  useEffect(() => {\n    if (currentUser && participants.length === 0) {\n      // Add the current user as the first participant\n      const currentUserParticipant = createParticipant(currentUser.name || 'Me', currentUser.email || '', null,\n      // Share percentage will be calculated later\n      null // Share amount will be calculated later\n      );\n      setParticipants([currentUserParticipant]);\n    }\n\n    // Load contacts\n    setContacts(getAllContacts());\n  }, [currentUser, getAllContacts]);\n\n  // Update shares when participants or split method changes\n  useEffect(() => {\n    if (participants.length > 0 && expenseData.amount) {\n      updateShares();\n    }\n  }, [participants.length, expenseData.amount, splitMethod]);\n\n  // Handle expense form changes\n  const handleExpenseChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setExpenseData({\n      ...expenseData,\n      [name]: value\n    });\n\n    // If amount changed, update participant shares\n    if (name === 'amount' && value && participants.length > 0) {\n      updateShares();\n    }\n  };\n\n  // Handle new participant form changes\n  const handleNewParticipantChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewParticipant({\n      ...newParticipant,\n      [name]: value\n    });\n  };\n\n  // Add a new participant\n  const handleAddParticipant = () => {\n    if (!newParticipant.name.trim()) {\n      setError('Participant name is required');\n      return;\n    }\n\n    // Create new participant\n    const participant = createParticipant(newParticipant.name.trim(), newParticipant.email.trim(), splitMethod === 'percentage' ? parseFloat(newParticipant.sharePercentage) || null : null, splitMethod === 'amount' ? parseFloat(newParticipant.shareAmount) || null : null);\n\n    // Add to participants list\n    setParticipants([...participants, participant]);\n\n    // Reset form\n    setNewParticipant({\n      name: '',\n      email: '',\n      sharePercentage: '',\n      shareAmount: ''\n    });\n\n    // Update shares\n    updateShares([...participants, participant]);\n  };\n\n  // Remove a participant\n  const handleRemoveParticipant = participantId => {\n    const updatedParticipants = participants.filter(p => p.id !== participantId);\n    setParticipants(updatedParticipants);\n    updateShares(updatedParticipants);\n  };\n\n  // Add a contact as a participant\n  const handleAddContact = contact => {\n    // Check if contact is already added\n    if (participants.some(p => p.email && p.email === contact.email)) {\n      setError('This contact is already added as a participant');\n      return;\n    }\n\n    // Create participant from contact\n    const participant = createParticipant(contact.name, contact.email);\n\n    // Add to participants list\n    setParticipants([...participants, participant]);\n\n    // Update shares\n    updateShares([...participants, participant]);\n  };\n\n  // Update participant shares based on split method\n  const updateShares = (participantsList = participants) => {\n    if (!expenseData.amount || isNaN(parseFloat(expenseData.amount))) {\n      return;\n    }\n    const amount = parseFloat(expenseData.amount);\n    let updatedParticipants = [...participantsList];\n    if (splitMethod === 'equal') {\n      // Equal split\n      const share = amount / participantsList.length;\n      updatedParticipants = participantsList.map(p => ({\n        ...p,\n        sharePercentage: 100 / participantsList.length,\n        shareAmount: share\n      }));\n    } else if (splitMethod === 'percentage') {\n      // Custom percentage split\n      // First, calculate percentage for those without explicit percentage\n      const totalAssignedPercentage = participantsList.reduce((sum, p) => sum + (p.sharePercentage || 0), 0);\n      const unassignedCount = participantsList.filter(p => !p.sharePercentage).length;\n      if (unassignedCount > 0 && totalAssignedPercentage < 100) {\n        const remainingPercentage = 100 - totalAssignedPercentage;\n        const defaultPercentage = remainingPercentage / unassignedCount;\n        updatedParticipants = participantsList.map(p => {\n          if (!p.sharePercentage) {\n            return {\n              ...p,\n              sharePercentage: defaultPercentage,\n              shareAmount: amount * defaultPercentage / 100\n            };\n          }\n          return {\n            ...p,\n            shareAmount: amount * p.sharePercentage / 100\n          };\n        });\n      } else {\n        updatedParticipants = participantsList.map(p => ({\n          ...p,\n          shareAmount: amount * (p.sharePercentage || 0) / 100\n        }));\n      }\n    } else if (splitMethod === 'amount') {\n      // Custom amount split\n      // First, calculate total assigned amount\n      const totalAssignedAmount = participantsList.reduce((sum, p) => sum + (p.shareAmount || 0), 0);\n      const unassignedCount = participantsList.filter(p => !p.shareAmount).length;\n      if (unassignedCount > 0 && totalAssignedAmount < amount) {\n        const remainingAmount = amount - totalAssignedAmount;\n        const defaultAmount = remainingAmount / unassignedCount;\n        updatedParticipants = participantsList.map(p => {\n          if (!p.shareAmount) {\n            return {\n              ...p,\n              shareAmount: defaultAmount,\n              sharePercentage: defaultAmount / amount * 100\n            };\n          }\n          return {\n            ...p,\n            sharePercentage: p.shareAmount / amount * 100\n          };\n        });\n      } else {\n        updatedParticipants = participantsList.map(p => ({\n          ...p,\n          sharePercentage: (p.shareAmount || 0) / amount * 100\n        }));\n      }\n    }\n    setParticipants(updatedParticipants);\n  };\n\n  // Handle form submission\n  const handleSubmit = e => {\n    e.preventDefault();\n    setError('');\n\n    // Validation\n    if (!expenseData.category) {\n      setError('Please select a category');\n      return;\n    }\n    if (!expenseData.amount || isNaN(parseFloat(expenseData.amount)) || parseFloat(expenseData.amount) <= 0) {\n      setError('Please enter a valid amount');\n      return;\n    }\n    if (!expenseData.date) {\n      setError('Please select a date');\n      return;\n    }\n    if (participants.length < 2) {\n      setError('Please add at least one more participant to split the expense');\n      return;\n    }\n\n    // Verify total shares add up to the expense amount\n    const totalShareAmount = participants.reduce((sum, p) => sum + (p.shareAmount || 0), 0);\n    if (Math.abs(totalShareAmount - parseFloat(expenseData.amount)) > 0.01) {\n      setError('The total of all shares does not match the expense amount');\n      return;\n    }\n\n    // Create the split expense\n    const result = createNewSplitExpense({\n      ...expenseData,\n      amount: parseFloat(expenseData.amount)\n    }, participants);\n    if (result) {\n      // Navigate to split expense details\n      navigate(`/split/details/${result.id}`);\n    } else {\n      setError('Failed to create split expense. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"split-expense-form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Split an Expense\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"split-expense-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Basic Expense Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"category\",\n            children: \"Category*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"category\",\n            name: \"category\",\n            value: expenseData.category,\n            onChange: handleExpenseChange,\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select a category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 15\n            }, this), safeCategories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: category,\n              children: category\n            }, category, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"amount\",\n            children: \"Total Amount*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: \"amount\",\n            name: \"amount\",\n            value: expenseData.amount,\n            onChange: handleExpenseChange,\n            min: \"0.01\",\n            step: \"0.01\",\n            placeholder: \"0.00\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"date\",\n            children: \"Date*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            id: \"date\",\n            name: \"date\",\n            value: expenseData.date,\n            onChange: handleExpenseChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"description\",\n            children: \"Description*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"description\",\n            name: \"description\",\n            value: expenseData.description,\n            onChange: handleExpenseChange,\n            placeholder: \"E.g., Dinner at Luigi's\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"notes\",\n            children: \"Notes (Optional)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"notes\",\n            name: \"notes\",\n            value: expenseData.notes,\n            onChange: handleExpenseChange,\n            placeholder: \"Any additional details\",\n            rows: \"3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Split Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"split-method-selector\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Split Method:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"split-method-options\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: splitMethod === 'equal' ? 'active' : '',\n              onClick: () => setSplitMethod('equal'),\n              children: \"Equal Split\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: splitMethod === 'percentage' ? 'active' : '',\n              onClick: () => setSplitMethod('percentage'),\n              children: \"By Percentage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: splitMethod === 'amount' ? 'active' : '',\n              onClick: () => setSplitMethod('amount'),\n              children: \"By Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"participants-list\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Participants\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 13\n          }, this), participants.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"no-participants\",\n            children: \"No participants added yet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"participants-table\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"participants-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 409,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 410,\n                columnNumber: 19\n              }, this), splitMethod === 'percentage' && /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Percentage\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 411,\n                columnNumber: 52\n              }, this), splitMethod === 'amount' && /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Amount\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 412,\n                columnNumber: 48\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Share Amount\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 413,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 414,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 17\n            }, this), participants.map((participant, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"participant-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: participant.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 419,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: participant.email || '-'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 420,\n                columnNumber: 21\n              }, this), splitMethod === 'percentage' && /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  min: \"0\",\n                  max: \"100\",\n                  step: \"0.1\",\n                  value: participant.sharePercentage || '',\n                  onChange: e => {\n                    const value = parseFloat(e.target.value);\n                    const updatedParticipants = [...participants];\n                    updatedParticipants[index] = {\n                      ...participant,\n                      sharePercentage: value,\n                      shareAmount: value ? parseFloat(expenseData.amount) * value / 100 : 0\n                    };\n                    setParticipants(updatedParticipants);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 424,\n                  columnNumber: 25\n                }, this), \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 423,\n                columnNumber: 23\n              }, this), splitMethod === 'amount' && /*#__PURE__*/_jsxDEV(\"span\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  min: \"0\",\n                  step: \"0.01\",\n                  value: participant.shareAmount || '',\n                  onChange: e => {\n                    const value = parseFloat(e.target.value);\n                    const updatedParticipants = [...participants];\n                    updatedParticipants[index] = {\n                      ...participant,\n                      shareAmount: value,\n                      sharePercentage: value ? value / parseFloat(expenseData.amount) * 100 : 0\n                    };\n                    setParticipants(updatedParticipants);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 447,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 446,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"$\", participant.shareAmount ? participant.shareAmount.toFixed(2) : '0.00']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 466,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: index > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"remove-participant-btn\",\n                  onClick: () => handleRemoveParticipant(participant.id),\n                  children: \"Remove\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 473,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 470,\n                columnNumber: 21\n              }, this)]\n            }, participant.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 418,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"add-participant-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Add Participant\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 489,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"participant-form-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"participantName\",\n                children: \"Name*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 492,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"participantName\",\n                name: \"name\",\n                value: newParticipant.name,\n                onChange: handleNewParticipantChange,\n                placeholder: \"Participant name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 493,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 491,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"participantEmail\",\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 504,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                id: \"participantEmail\",\n                name: \"email\",\n                value: newParticipant.email,\n                onChange: handleNewParticipantChange,\n                placeholder: \"Optional\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 505,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 503,\n              columnNumber: 15\n            }, this), splitMethod === 'percentage' && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"participantPercentage\",\n                children: \"Percentage\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 517,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                id: \"participantPercentage\",\n                name: \"sharePercentage\",\n                value: newParticipant.sharePercentage,\n                onChange: handleNewParticipantChange,\n                min: \"0\",\n                max: \"100\",\n                step: \"0.1\",\n                placeholder: \"0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 518,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 516,\n              columnNumber: 17\n            }, this), splitMethod === 'amount' && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"participantAmount\",\n                children: \"Amount\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 534,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                id: \"participantAmount\",\n                name: \"shareAmount\",\n                value: newParticipant.shareAmount,\n                onChange: handleNewParticipantChange,\n                min: \"0\",\n                step: \"0.01\",\n                placeholder: \"0.00\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 535,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 533,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"add-participant-btn\",\n              onClick: handleAddParticipant,\n              children: \"Add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 548,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 11\n        }, this), contacts.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"contacts-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Add from Contacts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 560,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"contacts-list\",\n            children: contacts.map(contact => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"contact-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"contact-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"contact-name\",\n                  children: contact.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 565,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"contact-email\",\n                  children: contact.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 566,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 564,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"add-contact-btn\",\n                onClick: () => handleAddContact(contact),\n                children: \"Add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 568,\n                columnNumber: 21\n              }, this)]\n            }, contact.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 563,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 561,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 559,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"cancel-btn\",\n          onClick: () => navigate(-1),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 583,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"submit-btn\",\n          children: \"Create Split Expense\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 590,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 582,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 292,\n    columnNumber: 5\n  }, this);\n};\n_s(SplitExpenseForm, \"NHDikOFa3Arejd8XGNtdTWmQ+iE=\", false, function () {\n  return [useNavigate];\n});\n_c = SplitExpenseForm;\nexport default SplitExpenseForm;\nvar _c;\n$RefreshReg$(_c, \"SplitExpenseForm\");","map":{"version":3,"names":["React","useState","useContext","useEffect","useNavigate","ExpenseContext","SplitExpenseContext","AuthContext","createParticipant","jsxDEV","_jsxDEV","SplitExpenseForm","_s","currentUser","expenseCategories","createNewSplitExpense","getAllContacts","navigate","safeCategories","Array","isArray","expenseData","setExpenseData","category","amount","date","Date","toISOString","slice","description","notes","participants","setParticipants","splitMethod","setSplitMethod","error","setError","contacts","setContacts","newParticipant","setNewParticipant","name","email","sharePercentage","shareAmount","length","currentUserParticipant","updateShares","handleExpenseChange","e","value","target","handleNewParticipantChange","handleAddParticipant","trim","participant","parseFloat","handleRemoveParticipant","participantId","updatedParticipants","filter","p","id","handleAddContact","contact","some","participantsList","isNaN","share","map","totalAssignedPercentage","reduce","sum","unassignedCount","remainingPercentage","defaultPercentage","totalAssignedAmount","remainingAmount","defaultAmount","handleSubmit","preventDefault","totalShareAmount","Math","abs","result","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","onChange","required","type","min","step","placeholder","rows","onClick","index","max","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/tejit/OneDrive/Desktop/expence tracker final/expence-tracker/src/components/split/SplitExpenseForm.js"],"sourcesContent":["// src/components/split/SplitExpenseForm.js\r\nimport React, { useState, useContext, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { ExpenseContext } from '../../context/ExpenseContext';\r\nimport { SplitExpenseContext } from '../../context/SplitExpenseContext';\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport { createParticipant } from '../../models/SplitExpenseModel';\r\nimport './SplitExpense.css';\r\n\r\nconst SplitExpenseForm = () => {\r\n  const { currentUser } = useContext(AuthContext);\r\n  const { expenseCategories } = useContext(ExpenseContext);\r\n  const { \r\n    createNewSplitExpense, \r\n    getAllContacts,\r\n    createParticipant\r\n  } = useContext(SplitExpenseContext);\r\n  \r\n  const navigate = useNavigate();\r\n  \r\n  // Make sure we have valid categories\r\n  const safeCategories = Array.isArray(expenseCategories) ? expenseCategories : [];\r\n  \r\n  // Basic expense form state\r\n  const [expenseData, setExpenseData] = useState({\r\n    category: '',\r\n    amount: '',\r\n    date: new Date().toISOString().slice(0, 10),\r\n    description: '',\r\n    notes: ''\r\n  });\r\n  \r\n  // Participants state\r\n  const [participants, setParticipants] = useState([]);\r\n  const [splitMethod, setSplitMethod] = useState('equal'); // equal, percentage, amount\r\n  const [error, setError] = useState('');\r\n  const [contacts, setContacts] = useState([]);\r\n  \r\n  // New participant form state\r\n  const [newParticipant, setNewParticipant] = useState({\r\n    name: '',\r\n    email: '',\r\n    sharePercentage: '',\r\n    shareAmount: ''\r\n  });\r\n  \r\n  // Add current user as a participant by default\r\n  useEffect(() => {\r\n    if (currentUser && participants.length === 0) {\r\n      // Add the current user as the first participant\r\n      const currentUserParticipant = createParticipant(\r\n        currentUser.name || 'Me',\r\n        currentUser.email || '',\r\n        null, // Share percentage will be calculated later\r\n        null  // Share amount will be calculated later\r\n      );\r\n      \r\n      setParticipants([currentUserParticipant]);\r\n    }\r\n    \r\n    // Load contacts\r\n    setContacts(getAllContacts());\r\n  }, [currentUser, getAllContacts]);\r\n  \r\n  // Update shares when participants or split method changes\r\n  useEffect(() => {\r\n    if (participants.length > 0 && expenseData.amount) {\r\n      updateShares();\r\n    }\r\n  }, [participants.length, expenseData.amount, splitMethod]);\r\n  \r\n  // Handle expense form changes\r\n  const handleExpenseChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setExpenseData({\r\n      ...expenseData,\r\n      [name]: value\r\n    });\r\n    \r\n    // If amount changed, update participant shares\r\n    if (name === 'amount' && value && participants.length > 0) {\r\n      updateShares();\r\n    }\r\n  };\r\n  \r\n  // Handle new participant form changes\r\n  const handleNewParticipantChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setNewParticipant({\r\n      ...newParticipant,\r\n      [name]: value\r\n    });\r\n  };\r\n  \r\n  // Add a new participant\r\n  const handleAddParticipant = () => {\r\n    if (!newParticipant.name.trim()) {\r\n      setError('Participant name is required');\r\n      return;\r\n    }\r\n    \r\n    // Create new participant\r\n    const participant = createParticipant(\r\n      newParticipant.name.trim(),\r\n      newParticipant.email.trim(),\r\n      splitMethod === 'percentage' ? parseFloat(newParticipant.sharePercentage) || null : null,\r\n      splitMethod === 'amount' ? parseFloat(newParticipant.shareAmount) || null : null\r\n    );\r\n    \r\n    // Add to participants list\r\n    setParticipants([...participants, participant]);\r\n    \r\n    // Reset form\r\n    setNewParticipant({\r\n      name: '',\r\n      email: '',\r\n      sharePercentage: '',\r\n      shareAmount: ''\r\n    });\r\n    \r\n    // Update shares\r\n    updateShares([...participants, participant]);\r\n  };\r\n  \r\n  // Remove a participant\r\n  const handleRemoveParticipant = (participantId) => {\r\n    const updatedParticipants = participants.filter(p => p.id !== participantId);\r\n    setParticipants(updatedParticipants);\r\n    updateShares(updatedParticipants);\r\n  };\r\n  \r\n  // Add a contact as a participant\r\n  const handleAddContact = (contact) => {\r\n    // Check if contact is already added\r\n    if (participants.some(p => p.email && p.email === contact.email)) {\r\n      setError('This contact is already added as a participant');\r\n      return;\r\n    }\r\n    \r\n    // Create participant from contact\r\n    const participant = createParticipant(\r\n      contact.name,\r\n      contact.email\r\n    );\r\n    \r\n    // Add to participants list\r\n    setParticipants([...participants, participant]);\r\n    \r\n    // Update shares\r\n    updateShares([...participants, participant]);\r\n  };\r\n  \r\n  // Update participant shares based on split method\r\n  const updateShares = (participantsList = participants) => {\r\n    if (!expenseData.amount || isNaN(parseFloat(expenseData.amount))) {\r\n      return;\r\n    }\r\n    \r\n    const amount = parseFloat(expenseData.amount);\r\n    let updatedParticipants = [...participantsList];\r\n    \r\n    if (splitMethod === 'equal') {\r\n      // Equal split\r\n      const share = amount / participantsList.length;\r\n      updatedParticipants = participantsList.map(p => ({\r\n        ...p,\r\n        sharePercentage: 100 / participantsList.length,\r\n        shareAmount: share\r\n      }));\r\n    } else if (splitMethod === 'percentage') {\r\n      // Custom percentage split\r\n      // First, calculate percentage for those without explicit percentage\r\n      const totalAssignedPercentage = participantsList.reduce(\r\n        (sum, p) => sum + (p.sharePercentage || 0), \r\n        0\r\n      );\r\n      \r\n      const unassignedCount = participantsList.filter(p => !p.sharePercentage).length;\r\n      \r\n      if (unassignedCount > 0 && totalAssignedPercentage < 100) {\r\n        const remainingPercentage = 100 - totalAssignedPercentage;\r\n        const defaultPercentage = remainingPercentage / unassignedCount;\r\n        \r\n        updatedParticipants = participantsList.map(p => {\r\n          if (!p.sharePercentage) {\r\n            return {\r\n              ...p,\r\n              sharePercentage: defaultPercentage,\r\n              shareAmount: (amount * defaultPercentage) / 100\r\n            };\r\n          }\r\n          return {\r\n            ...p,\r\n            shareAmount: (amount * p.sharePercentage) / 100\r\n          };\r\n        });\r\n      } else {\r\n        updatedParticipants = participantsList.map(p => ({\r\n          ...p,\r\n          shareAmount: (amount * (p.sharePercentage || 0)) / 100\r\n        }));\r\n      }\r\n    } else if (splitMethod === 'amount') {\r\n      // Custom amount split\r\n      // First, calculate total assigned amount\r\n      const totalAssignedAmount = participantsList.reduce(\r\n        (sum, p) => sum + (p.shareAmount || 0), \r\n        0\r\n      );\r\n      \r\n      const unassignedCount = participantsList.filter(p => !p.shareAmount).length;\r\n      \r\n      if (unassignedCount > 0 && totalAssignedAmount < amount) {\r\n        const remainingAmount = amount - totalAssignedAmount;\r\n        const defaultAmount = remainingAmount / unassignedCount;\r\n        \r\n        updatedParticipants = participantsList.map(p => {\r\n          if (!p.shareAmount) {\r\n            return {\r\n              ...p,\r\n              shareAmount: defaultAmount,\r\n              sharePercentage: (defaultAmount / amount) * 100\r\n            };\r\n          }\r\n          return {\r\n            ...p,\r\n            sharePercentage: (p.shareAmount / amount) * 100\r\n          };\r\n        });\r\n      } else {\r\n        updatedParticipants = participantsList.map(p => ({\r\n          ...p,\r\n          sharePercentage: ((p.shareAmount || 0) / amount) * 100\r\n        }));\r\n      }\r\n    }\r\n    \r\n    setParticipants(updatedParticipants);\r\n  };\r\n  \r\n  // Handle form submission\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    \r\n    // Validation\r\n    if (!expenseData.category) {\r\n      setError('Please select a category');\r\n      return;\r\n    }\r\n    \r\n    if (!expenseData.amount || isNaN(parseFloat(expenseData.amount)) || parseFloat(expenseData.amount) <= 0) {\r\n      setError('Please enter a valid amount');\r\n      return;\r\n    }\r\n    \r\n    if (!expenseData.date) {\r\n      setError('Please select a date');\r\n      return;\r\n    }\r\n    \r\n    if (participants.length < 2) {\r\n      setError('Please add at least one more participant to split the expense');\r\n      return;\r\n    }\r\n    \r\n    // Verify total shares add up to the expense amount\r\n    const totalShareAmount = participants.reduce((sum, p) => sum + (p.shareAmount || 0), 0);\r\n    if (Math.abs(totalShareAmount - parseFloat(expenseData.amount)) > 0.01) {\r\n      setError('The total of all shares does not match the expense amount');\r\n      return;\r\n    }\r\n    \r\n    // Create the split expense\r\n    const result = createNewSplitExpense(\r\n      {\r\n        ...expenseData,\r\n        amount: parseFloat(expenseData.amount)\r\n      },\r\n      participants\r\n    );\r\n    \r\n    if (result) {\r\n      // Navigate to split expense details\r\n      navigate(`/split/details/${result.id}`);\r\n    } else {\r\n      setError('Failed to create split expense. Please try again.');\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <div className=\"split-expense-form-container\">\r\n      <h1>Split an Expense</h1>\r\n      \r\n      {error && (\r\n        <div className=\"error-message\">{error}</div>\r\n      )}\r\n      \r\n      <form className=\"split-expense-form\" onSubmit={handleSubmit}>\r\n        <div className=\"form-section\">\r\n          <h2>Basic Expense Details</h2>\r\n          \r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"category\">Category*</label>\r\n            <select\r\n              id=\"category\"\r\n              name=\"category\"\r\n              value={expenseData.category}\r\n              onChange={handleExpenseChange}\r\n              required\r\n            >\r\n              <option value=\"\">Select a category</option>\r\n              {safeCategories.map((category) => (\r\n                <option key={category} value={category}>{category}</option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          \r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"amount\">Total Amount*</label>\r\n            <input\r\n              type=\"number\"\r\n              id=\"amount\"\r\n              name=\"amount\"\r\n              value={expenseData.amount}\r\n              onChange={handleExpenseChange}\r\n              min=\"0.01\"\r\n              step=\"0.01\"\r\n              placeholder=\"0.00\"\r\n              required\r\n            />\r\n          </div>\r\n          \r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"date\">Date*</label>\r\n            <input\r\n              type=\"date\"\r\n              id=\"date\"\r\n              name=\"date\"\r\n              value={expenseData.date}\r\n              onChange={handleExpenseChange}\r\n              required\r\n            />\r\n          </div>\r\n          \r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"description\">Description*</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"description\"\r\n              name=\"description\"\r\n              value={expenseData.description}\r\n              onChange={handleExpenseChange}\r\n              placeholder=\"E.g., Dinner at Luigi's\"\r\n              required\r\n            />\r\n          </div>\r\n          \r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"notes\">Notes (Optional)</label>\r\n            <textarea\r\n              id=\"notes\"\r\n              name=\"notes\"\r\n              value={expenseData.notes}\r\n              onChange={handleExpenseChange}\r\n              placeholder=\"Any additional details\"\r\n              rows=\"3\"\r\n            />\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"form-section\">\r\n          <h2>Split Details</h2>\r\n          \r\n          <div className=\"split-method-selector\">\r\n            <label>Split Method:</label>\r\n            <div className=\"split-method-options\">\r\n              <button \r\n                type=\"button\" \r\n                className={splitMethod === 'equal' ? 'active' : ''}\r\n                onClick={() => setSplitMethod('equal')}\r\n              >\r\n                Equal Split\r\n              </button>\r\n              <button \r\n                type=\"button\" \r\n                className={splitMethod === 'percentage' ? 'active' : ''}\r\n                onClick={() => setSplitMethod('percentage')}\r\n              >\r\n                By Percentage\r\n              </button>\r\n              <button \r\n                type=\"button\" \r\n                className={splitMethod === 'amount' ? 'active' : ''}\r\n                onClick={() => setSplitMethod('amount')}\r\n              >\r\n                By Amount\r\n              </button>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"participants-list\">\r\n            <h3>Participants</h3>\r\n            {participants.length === 0 ? (\r\n              <p className=\"no-participants\">No participants added yet</p>\r\n            ) : (\r\n              <div className=\"participants-table\">\r\n                <div className=\"participants-header\">\r\n                  <span>Name</span>\r\n                  <span>Email</span>\r\n                  {splitMethod === 'percentage' && <span>Percentage</span>}\r\n                  {splitMethod === 'amount' && <span>Amount</span>}\r\n                  <span>Share Amount</span>\r\n                  <span>Actions</span>\r\n                </div>\r\n                \r\n                {participants.map((participant, index) => (\r\n                  <div className=\"participant-row\" key={participant.id}>\r\n                    <span>{participant.name}</span>\r\n                    <span>{participant.email || '-'}</span>\r\n                    \r\n                    {splitMethod === 'percentage' && (\r\n                      <span>\r\n                        <input\r\n                          type=\"number\"\r\n                          min=\"0\"\r\n                          max=\"100\"\r\n                          step=\"0.1\"\r\n                          value={participant.sharePercentage || ''}\r\n                          onChange={(e) => {\r\n                            const value = parseFloat(e.target.value);\r\n                            const updatedParticipants = [...participants];\r\n                            updatedParticipants[index] = {\r\n                              ...participant,\r\n                              sharePercentage: value,\r\n                              shareAmount: value ? (parseFloat(expenseData.amount) * value) / 100 : 0\r\n                            };\r\n                            setParticipants(updatedParticipants);\r\n                          }}\r\n                        />\r\n                        %\r\n                      </span>\r\n                    )}\r\n                    \r\n                    {splitMethod === 'amount' && (\r\n                      <span>\r\n                        <input\r\n                          type=\"number\"\r\n                          min=\"0\"\r\n                          step=\"0.01\"\r\n                          value={participant.shareAmount || ''}\r\n                          onChange={(e) => {\r\n                            const value = parseFloat(e.target.value);\r\n                            const updatedParticipants = [...participants];\r\n                            updatedParticipants[index] = {\r\n                              ...participant,\r\n                              shareAmount: value,\r\n                              sharePercentage: value ? (value / parseFloat(expenseData.amount)) * 100 : 0\r\n                            };\r\n                            setParticipants(updatedParticipants);\r\n                          }}\r\n                        />\r\n                      </span>\r\n                    )}\r\n                    \r\n                    <span>\r\n                      ${participant.shareAmount ? participant.shareAmount.toFixed(2) : '0.00'}\r\n                    </span>\r\n                    \r\n                    <span>\r\n                      {/* Don't allow removing the first participant (current user) */}\r\n                      {index > 0 && (\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"remove-participant-btn\"\r\n                          onClick={() => handleRemoveParticipant(participant.id)}\r\n                        >\r\n                          Remove\r\n                        </button>\r\n                      )}\r\n                    </span>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n          \r\n          <div className=\"add-participant-form\">\r\n            <h3>Add Participant</h3>\r\n            <div className=\"participant-form-row\">\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"participantName\">Name*</label>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"participantName\"\r\n                  name=\"name\"\r\n                  value={newParticipant.name}\r\n                  onChange={handleNewParticipantChange}\r\n                  placeholder=\"Participant name\"\r\n                />\r\n              </div>\r\n              \r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"participantEmail\">Email</label>\r\n                <input\r\n                  type=\"email\"\r\n                  id=\"participantEmail\"\r\n                  name=\"email\"\r\n                  value={newParticipant.email}\r\n                  onChange={handleNewParticipantChange}\r\n                  placeholder=\"Optional\"\r\n                />\r\n              </div>\r\n              \r\n              {splitMethod === 'percentage' && (\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"participantPercentage\">Percentage</label>\r\n                  <input\r\n                    type=\"number\"\r\n                    id=\"participantPercentage\"\r\n                    name=\"sharePercentage\"\r\n                    value={newParticipant.sharePercentage}\r\n                    onChange={handleNewParticipantChange}\r\n                    min=\"0\"\r\n                    max=\"100\"\r\n                    step=\"0.1\"\r\n                    placeholder=\"0\"\r\n                  />\r\n                </div>\r\n              )}\r\n              \r\n              {splitMethod === 'amount' && (\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"participantAmount\">Amount</label>\r\n                  <input\r\n                    type=\"number\"\r\n                    id=\"participantAmount\"\r\n                    name=\"shareAmount\"\r\n                    value={newParticipant.shareAmount}\r\n                    onChange={handleNewParticipantChange}\r\n                    min=\"0\"\r\n                    step=\"0.01\"\r\n                    placeholder=\"0.00\"\r\n                  />\r\n                </div>\r\n              )}\r\n              \r\n              <button\r\n                type=\"button\"\r\n                className=\"add-participant-btn\"\r\n                onClick={handleAddParticipant}\r\n              >\r\n                Add\r\n              </button>\r\n            </div>\r\n          </div>\r\n          \r\n          {contacts.length > 0 && (\r\n            <div className=\"contacts-section\">\r\n              <h3>Add from Contacts</h3>\r\n              <div className=\"contacts-list\">\r\n                {contacts.map(contact => (\r\n                  <div key={contact.id} className=\"contact-item\">\r\n                    <div className=\"contact-info\">\r\n                      <div className=\"contact-name\">{contact.name}</div>\r\n                      <div className=\"contact-email\">{contact.email}</div>\r\n                    </div>\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"add-contact-btn\"\r\n                      onClick={() => handleAddContact(contact)}\r\n                    >\r\n                      Add\r\n                    </button>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n        \r\n        <div className=\"form-actions\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"cancel-btn\"\r\n            onClick={() => navigate(-1)}\r\n          >\r\n            Cancel\r\n          </button>\r\n          <button\r\n            type=\"submit\"\r\n            className=\"submit-btn\"\r\n          >\r\n            Create Split Expense\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SplitExpenseForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}