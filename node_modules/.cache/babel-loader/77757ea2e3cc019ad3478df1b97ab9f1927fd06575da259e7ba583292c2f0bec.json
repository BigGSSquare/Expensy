{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tejit\\\\OneDrive\\\\Desktop\\\\expence tracker final\\\\expence-tracker\\\\src\\\\components\\\\split\\\\SplitExpenseForm.js\",\n  _s = $RefreshSig$();\n// src/components/split/SplitExpenseForm.js\nimport React, { useState, useContext, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { ExpenseContext } from '../../context/ExpenseContext';\nimport { SplitExpenseContext } from '../../context/SplitExpenseContext';\nimport { AuthContext } from '../../context/AuthContext';\nimport './SplitExpense.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SplitExpenseForm = () => {\n  _s();\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  const {\n    expenseCategories\n  } = useContext(ExpenseContext);\n  const {\n    createNewSplitExpense,\n    getAllContacts,\n    createParticipant\n  } = useContext(SplitExpenseContext);\n  const navigate = useNavigate();\n\n  // Make sure we have valid categories\n  const safeCategories = Array.isArray(expenseCategories) ? expenseCategories : [];\n\n  // Basic expense form state\n  const [expenseData, setExpenseData] = useState({\n    category: '',\n    amount: '',\n    date: new Date().toISOString().slice(0, 10),\n    description: '',\n    notes: ''\n  });\n\n  // Participants state\n  const [participants, setParticipants] = useState([]);\n  const [splitMethod, setSplitMethod] = useState('equal'); // equal, percentage, amount\n  const [error, setError] = useState('');\n  const [contacts, setContacts] = useState([]);\n  const [isSubmitting, setIsSubmitting] = useState(false); // Add loading state\n\n  // New participant form state\n  const [newParticipant, setNewParticipant] = useState({\n    name: '',\n    email: '',\n    sharePercentage: '',\n    shareAmount: ''\n  });\n\n  // Add current user as a participant by default\n  useEffect(() => {\n    if (currentUser && participants.length === 0) {\n      console.log(\"Adding current user as participant:\", currentUser.name || 'Me');\n\n      // Add the current user as the first participant\n      const currentUserParticipant = createParticipant(currentUser.name || 'Me', currentUser.email || '', null,\n      // Share percentage will be calculated later\n      null // Share amount will be calculated later\n      );\n      setParticipants([currentUserParticipant]);\n    }\n\n    // Load contacts\n    const loadedContacts = getAllContacts();\n    console.log(\"Loaded contacts:\", loadedContacts.length);\n    setContacts(loadedContacts);\n  }, [currentUser, getAllContacts, createParticipant, participants.length]);\n\n  // Update shares when participants or split method changes\n  useEffect(() => {\n    if (participants.length > 0 && expenseData.amount) {\n      updateShares();\n    }\n  }, [participants.length, expenseData.amount, splitMethod]);\n\n  // Handle expense form changes\n  const handleExpenseChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setExpenseData({\n      ...expenseData,\n      [name]: value\n    });\n\n    // If amount changed, update participant shares\n    if (name === 'amount' && value && participants.length > 0) {\n      updateShares();\n    }\n  };\n\n  // Handle new participant form changes\n  const handleNewParticipantChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewParticipant({\n      ...newParticipant,\n      [name]: value\n    });\n  };\n\n  // Add a new participant\n  const handleAddParticipant = () => {\n    if (!newParticipant.name.trim()) {\n      setError('Participant name is required');\n      return;\n    }\n\n    // Check if participant with same name already exists\n    const participantExists = participants.some(p => p.name.toLowerCase() === newParticipant.name.trim().toLowerCase());\n    if (participantExists) {\n      setError('A participant with this name already exists');\n      return;\n    }\n\n    // Create new participant\n    const participant = createParticipant(newParticipant.name.trim(), newParticipant.email.trim(), splitMethod === 'percentage' ? parseFloat(newParticipant.sharePercentage) || null : null, splitMethod === 'amount' ? parseFloat(newParticipant.shareAmount) || null : null);\n\n    // Add to participants list\n    setParticipants([...participants, participant]);\n\n    // Reset form\n    setNewParticipant({\n      name: '',\n      email: '',\n      sharePercentage: '',\n      shareAmount: ''\n    });\n\n    // Clear any error messages\n    setError('');\n\n    // Update shares\n    updateShares([...participants, participant]);\n  };\n\n  // Remove a participant\n  const handleRemoveParticipant = participantId => {\n    const updatedParticipants = participants.filter(p => p.id !== participantId);\n    setParticipants(updatedParticipants);\n    updateShares(updatedParticipants);\n\n    // Clear any error messages\n    setError('');\n  };\n\n  // Add a contact as a participant\n  const handleAddContact = contact => {\n    // Check if contact is already added\n    if (participants.some(p => p.email && contact.email && p.email.toLowerCase() === contact.email.toLowerCase() || p.name.toLowerCase() === contact.name.toLowerCase())) {\n      setError('This contact is already added as a participant');\n      return;\n    }\n\n    // Create participant from contact\n    const participant = createParticipant(contact.name, contact.email);\n\n    // Add to participants list\n    setParticipants([...participants, participant]);\n\n    // Clear any error messages\n    setError('');\n\n    // Update shares\n    updateShares([...participants, participant]);\n  };\n\n  // Update participant shares based on split method\n  const updateShares = (participantsList = participants) => {\n    if (!expenseData.amount || isNaN(parseFloat(expenseData.amount))) {\n      return;\n    }\n    const amount = parseFloat(expenseData.amount);\n    let updatedParticipants = [...participantsList];\n    if (splitMethod === 'equal') {\n      // Equal split\n      const share = amount / participantsList.length;\n      updatedParticipants = participantsList.map(p => ({\n        ...p,\n        sharePercentage: 100 / participantsList.length,\n        shareAmount: share\n      }));\n    } else if (splitMethod === 'percentage') {\n      // Custom percentage split\n      // First, calculate percentage for those without explicit percentage\n      const totalAssignedPercentage = participantsList.reduce((sum, p) => sum + (p.sharePercentage || 0), 0);\n      const unassignedCount = participantsList.filter(p => !p.sharePercentage).length;\n      if (unassignedCount > 0 && totalAssignedPercentage < 100) {\n        const remainingPercentage = 100 - totalAssignedPercentage;\n        const defaultPercentage = remainingPercentage / unassignedCount;\n        updatedParticipants = participantsList.map(p => {\n          if (!p.sharePercentage) {\n            return {\n              ...p,\n              sharePercentage: defaultPercentage,\n              shareAmount: amount * defaultPercentage / 100\n            };\n          }\n          return {\n            ...p,\n            shareAmount: amount * p.sharePercentage / 100\n          };\n        });\n      } else {\n        updatedParticipants = participantsList.map(p => ({\n          ...p,\n          shareAmount: amount * (p.sharePercentage || 0) / 100\n        }));\n      }\n    } else if (splitMethod === 'amount') {\n      // Custom amount split\n      // First, calculate total assigned amount\n      const totalAssignedAmount = participantsList.reduce((sum, p) => sum + (p.shareAmount || 0), 0);\n      const unassignedCount = participantsList.filter(p => !p.shareAmount).length;\n      if (unassignedCount > 0 && totalAssignedAmount < amount) {\n        const remainingAmount = amount - totalAssignedAmount;\n        const defaultAmount = remainingAmount / unassignedCount;\n        updatedParticipants = participantsList.map(p => {\n          if (!p.shareAmount) {\n            return {\n              ...p,\n              shareAmount: defaultAmount,\n              sharePercentage: defaultAmount / amount * 100\n            };\n          }\n          return {\n            ...p,\n            sharePercentage: p.shareAmount / amount * 100\n          };\n        });\n      } else {\n        updatedParticipants = participantsList.map(p => ({\n          ...p,\n          sharePercentage: (p.shareAmount || 0) / amount * 100\n        }));\n      }\n    }\n    setParticipants(updatedParticipants);\n  };\n\n  // Handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    setIsSubmitting(true);\n    try {\n      // Validation\n      if (!expenseData.category) {\n        setError('Please select a category');\n        setIsSubmitting(false);\n        return;\n      }\n      if (!expenseData.amount || isNaN(parseFloat(expenseData.amount)) || parseFloat(expenseData.amount) <= 0) {\n        setError('Please enter a valid amount');\n        setIsSubmitting(false);\n        return;\n      }\n      if (!expenseData.date) {\n        setError('Please select a date');\n        setIsSubmitting(false);\n        return;\n      }\n      if (!expenseData.description) {\n        setError('Please enter a description');\n        setIsSubmitting(false);\n        return;\n      }\n      if (participants.length < 2) {\n        setError('Please add at least one more participant to split the expense');\n        setIsSubmitting(false);\n        return;\n      }\n\n      // Verify total shares add up to the expense amount\n      const totalShareAmount = participants.reduce((sum, p) => sum + (p.shareAmount || 0), 0);\n      const expenseAmount = parseFloat(expenseData.amount);\n\n      // Allow for small floating point differences\n      if (Math.abs(totalShareAmount - expenseAmount) > 0.01) {\n        setError(`The total of all shares (${totalShareAmount.toFixed(2)}) does not match the expense amount (${expenseAmount.toFixed(2)})`);\n        setIsSubmitting(false);\n        return;\n      }\n      console.log('Creating split expense with data:', {\n        expenseData,\n        participants\n      });\n\n      // Create the split expense\n      const result = await createNewSplitExpense({\n        ...expenseData,\n        amount: parseFloat(expenseData.amount)\n      }, participants);\n      if (result) {\n        console.log('Split expense created successfully:', result);\n        // Navigate to split expense details\n        navigate(`/split/details/${result.id}`);\n      } else {\n        setError('Failed to create split expense. Please try again.');\n        setIsSubmitting(false);\n      }\n    } catch (error) {\n      console.error('Error creating split expense:', error);\n      setError(`An error occurred: ${error.message || 'Please try again'}`);\n      setIsSubmitting(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"split-expense-form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Split an Expense\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"split-expense-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Basic Expense Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"category\",\n            children: \"Category*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"category\",\n            name: \"category\",\n            value: expenseData.category,\n            onChange: handleExpenseChange,\n            required: true,\n            disabled: isSubmitting,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select a category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 15\n            }, this), safeCategories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: category,\n              children: category\n            }, category, false, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"amount\",\n            children: \"Total Amount*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: \"amount\",\n            name: \"amount\",\n            value: expenseData.amount,\n            onChange: handleExpenseChange,\n            min: \"0.01\",\n            step: \"0.01\",\n            placeholder: \"0.00\",\n            required: true,\n            disabled: isSubmitting\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"date\",\n            children: \"Date*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            id: \"date\",\n            name: \"date\",\n            value: expenseData.date,\n            onChange: handleExpenseChange,\n            required: true,\n            disabled: isSubmitting\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"description\",\n            children: \"Description*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"description\",\n            name: \"description\",\n            value: expenseData.description,\n            onChange: handleExpenseChange,\n            placeholder: \"E.g., Dinner at Luigi's\",\n            required: true,\n            disabled: isSubmitting\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"notes\",\n            children: \"Notes (Optional)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"notes\",\n            name: \"notes\",\n            value: expenseData.notes,\n            onChange: handleExpenseChange,\n            placeholder: \"Any additional details\",\n            rows: \"3\",\n            disabled: isSubmitting\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Split Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"split-method-selector\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Split Method:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"split-method-options\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: splitMethod === 'equal' ? 'active' : '',\n              onClick: () => setSplitMethod('equal'),\n              disabled: isSubmitting,\n              children: \"Equal Split\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 437,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: splitMethod === 'percentage' ? 'active' : '',\n              onClick: () => setSplitMethod('percentage'),\n              disabled: isSubmitting,\n              children: \"By Percentage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: splitMethod === 'amount' ? 'active' : '',\n              onClick: () => setSplitMethod('amount'),\n              disabled: isSubmitting,\n              children: \"By Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 453,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"participants-list\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Participants\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 465,\n            columnNumber: 13\n          }, this), participants.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"no-participants\",\n            children: \"No participants added yet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"participants-table\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"participants-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 471,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 472,\n                columnNumber: 19\n              }, this), splitMethod === 'percentage' && /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Percentage\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 473,\n                columnNumber: 52\n              }, this), splitMethod === 'amount' && /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Amount\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 474,\n                columnNumber: 48\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Share Amount\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 475,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 476,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 470,\n              columnNumber: 17\n            }, this), participants.map((participant, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"participant-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: participant.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 481,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: participant.email || '-'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 482,\n                columnNumber: 21\n              }, this), splitMethod === 'percentage' && /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  min: \"0\",\n                  max: \"100\",\n                  step: \"0.1\",\n                  value: participant.sharePercentage || '',\n                  onChange: e => {\n                    const value = parseFloat(e.target.value);\n                    const updatedParticipants = [...participants];\n                    updatedParticipants[index] = {\n                      ...participant,\n                      sharePercentage: value,\n                      shareAmount: value ? parseFloat(expenseData.amount) * value / 100 : 0\n                    };\n                    setParticipants(updatedParticipants);\n                  },\n                  disabled: isSubmitting\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 486,\n                  columnNumber: 25\n                }, this), \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 485,\n                columnNumber: 23\n              }, this), splitMethod === 'amount' && /*#__PURE__*/_jsxDEV(\"span\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  min: \"0\",\n                  step: \"0.01\",\n                  value: participant.shareAmount || '',\n                  onChange: e => {\n                    const value = parseFloat(e.target.value);\n                    const updatedParticipants = [...participants];\n                    updatedParticipants[index] = {\n                      ...participant,\n                      shareAmount: value,\n                      sharePercentage: value && expenseData.amount ? value / parseFloat(expenseData.amount) * 100 : 0\n                    };\n                    setParticipants(updatedParticipants);\n                  },\n                  disabled: isSubmitting\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 510,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 509,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"$\", participant.shareAmount ? participant.shareAmount.toFixed(2) : '0.00']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 531,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: index > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"remove-participant-btn\",\n                  onClick: () => handleRemoveParticipant(participant.id),\n                  disabled: isSubmitting,\n                  children: \"Remove\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 538,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 535,\n                columnNumber: 21\n              }, this)]\n            }, participant.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 480,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"add-participant-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Add Participant\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 555,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"participant-form-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"participantName\",\n                children: \"Name*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 558,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"participantName\",\n                name: \"name\",\n                value: newParticipant.name,\n                onChange: handleNewParticipantChange,\n                placeholder: \"Participant name\",\n                disabled: isSubmitting\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 559,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 557,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"participantEmail\",\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 571,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                id: \"participantEmail\",\n                name: \"email\",\n                value: newParticipant.email,\n                onChange: handleNewParticipantChange,\n                placeholder: \"Optional\",\n                disabled: isSubmitting\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 572,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 570,\n              columnNumber: 15\n            }, this), splitMethod === 'percentage' && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"participantPercentage\",\n                children: \"Percentage\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 585,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                id: \"participantPercentage\",\n                name: \"sharePercentage\",\n                value: newParticipant.sharePercentage,\n                onChange: handleNewParticipantChange,\n                min: \"0\",\n                max: \"100\",\n                step: \"0.1\",\n                placeholder: \"0\",\n                disabled: isSubmitting\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 586,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 584,\n              columnNumber: 17\n            }, this), splitMethod === 'amount' && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"participantAmount\",\n                children: \"Amount\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 603,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                id: \"participantAmount\",\n                name: \"shareAmount\",\n                value: newParticipant.shareAmount,\n                onChange: handleNewParticipantChange,\n                min: \"0\",\n                step: \"0.01\",\n                placeholder: \"0.00\",\n                disabled: isSubmitting\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 604,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 602,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"add-participant-btn\",\n              onClick: handleAddParticipant,\n              disabled: isSubmitting,\n              children: \"Add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 618,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 556,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 11\n        }, this), contacts.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"contacts-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Add from Contacts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 631,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"contacts-list\",\n            children: contacts.map(contact => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"contact-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"contact-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"contact-name\",\n                  children: contact.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 636,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"contact-email\",\n                  children: contact.email || 'No email'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 637,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 635,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"add-contact-btn\",\n                onClick: () => handleAddContact(contact),\n                disabled: isSubmitting,\n                children: \"Add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 639,\n                columnNumber: 21\n              }, this)]\n            }, contact.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 634,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 632,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 630,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"cancel-btn\",\n          onClick: () => navigate('/split'),\n          disabled: isSubmitting,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 655,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"submit-btn\",\n          disabled: isSubmitting,\n          children: isSubmitting ? 'Creating...' : 'Create Split Expense'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 663,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 654,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 346,\n    columnNumber: 5\n  }, this);\n};\n_s(SplitExpenseForm, \"yEfwMi4Y16Ttb5/wx223PHv5ATY=\", false, function () {\n  return [useNavigate];\n});\n_c = SplitExpenseForm;\nexport default SplitExpenseForm;\nvar _c;\n$RefreshReg$(_c, \"SplitExpenseForm\");","map":{"version":3,"names":["React","useState","useContext","useEffect","useNavigate","ExpenseContext","SplitExpenseContext","AuthContext","jsxDEV","_jsxDEV","SplitExpenseForm","_s","currentUser","expenseCategories","createNewSplitExpense","getAllContacts","createParticipant","navigate","safeCategories","Array","isArray","expenseData","setExpenseData","category","amount","date","Date","toISOString","slice","description","notes","participants","setParticipants","splitMethod","setSplitMethod","error","setError","contacts","setContacts","isSubmitting","setIsSubmitting","newParticipant","setNewParticipant","name","email","sharePercentage","shareAmount","length","console","log","currentUserParticipant","loadedContacts","updateShares","handleExpenseChange","e","value","target","handleNewParticipantChange","handleAddParticipant","trim","participantExists","some","p","toLowerCase","participant","parseFloat","handleRemoveParticipant","participantId","updatedParticipants","filter","id","handleAddContact","contact","participantsList","isNaN","share","map","totalAssignedPercentage","reduce","sum","unassignedCount","remainingPercentage","defaultPercentage","totalAssignedAmount","remainingAmount","defaultAmount","handleSubmit","preventDefault","totalShareAmount","expenseAmount","Math","abs","toFixed","result","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","onChange","required","disabled","type","min","step","placeholder","rows","onClick","index","max","_c","$RefreshReg$"],"sources":["C:/Users/tejit/OneDrive/Desktop/expence tracker final/expence-tracker/src/components/split/SplitExpenseForm.js"],"sourcesContent":["// src/components/split/SplitExpenseForm.js\r\nimport React, { useState, useContext, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { ExpenseContext } from '../../context/ExpenseContext';\r\nimport { SplitExpenseContext } from '../../context/SplitExpenseContext';\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport './SplitExpense.css';\r\n\r\nconst SplitExpenseForm = () => {\r\n  const { currentUser } = useContext(AuthContext);\r\n  const { expenseCategories } = useContext(ExpenseContext);\r\n  const { \r\n    createNewSplitExpense, \r\n    getAllContacts,\r\n    createParticipant \r\n  } = useContext(SplitExpenseContext);\r\n  \r\n  const navigate = useNavigate();\r\n  \r\n  // Make sure we have valid categories\r\n  const safeCategories = Array.isArray(expenseCategories) ? expenseCategories : [];\r\n  \r\n  // Basic expense form state\r\n  const [expenseData, setExpenseData] = useState({\r\n    category: '',\r\n    amount: '',\r\n    date: new Date().toISOString().slice(0, 10),\r\n    description: '',\r\n    notes: ''\r\n  });\r\n  \r\n  // Participants state\r\n  const [participants, setParticipants] = useState([]);\r\n  const [splitMethod, setSplitMethod] = useState('equal'); // equal, percentage, amount\r\n  const [error, setError] = useState('');\r\n  const [contacts, setContacts] = useState([]);\r\n  const [isSubmitting, setIsSubmitting] = useState(false); // Add loading state\r\n  \r\n  // New participant form state\r\n  const [newParticipant, setNewParticipant] = useState({\r\n    name: '',\r\n    email: '',\r\n    sharePercentage: '',\r\n    shareAmount: ''\r\n  });\r\n  \r\n  // Add current user as a participant by default\r\n  useEffect(() => {\r\n    if (currentUser && participants.length === 0) {\r\n      console.log(\"Adding current user as participant:\", currentUser.name || 'Me');\r\n      \r\n      // Add the current user as the first participant\r\n      const currentUserParticipant = createParticipant(\r\n        currentUser.name || 'Me',\r\n        currentUser.email || '',\r\n        null, // Share percentage will be calculated later\r\n        null  // Share amount will be calculated later\r\n      );\r\n      \r\n      setParticipants([currentUserParticipant]);\r\n    }\r\n    \r\n    // Load contacts\r\n    const loadedContacts = getAllContacts();\r\n    console.log(\"Loaded contacts:\", loadedContacts.length);\r\n    setContacts(loadedContacts);\r\n  }, [currentUser, getAllContacts, createParticipant, participants.length]);\r\n  \r\n  // Update shares when participants or split method changes\r\n  useEffect(() => {\r\n    if (participants.length > 0 && expenseData.amount) {\r\n      updateShares();\r\n    }\r\n  }, [participants.length, expenseData.amount, splitMethod]);\r\n  \r\n  // Handle expense form changes\r\n  const handleExpenseChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setExpenseData({\r\n      ...expenseData,\r\n      [name]: value\r\n    });\r\n    \r\n    // If amount changed, update participant shares\r\n    if (name === 'amount' && value && participants.length > 0) {\r\n      updateShares();\r\n    }\r\n  };\r\n  \r\n  // Handle new participant form changes\r\n  const handleNewParticipantChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setNewParticipant({\r\n      ...newParticipant,\r\n      [name]: value\r\n    });\r\n  };\r\n  \r\n  // Add a new participant\r\n  const handleAddParticipant = () => {\r\n    if (!newParticipant.name.trim()) {\r\n      setError('Participant name is required');\r\n      return;\r\n    }\r\n    \r\n    // Check if participant with same name already exists\r\n    const participantExists = participants.some(\r\n      p => p.name.toLowerCase() === newParticipant.name.trim().toLowerCase()\r\n    );\r\n    \r\n    if (participantExists) {\r\n      setError('A participant with this name already exists');\r\n      return;\r\n    }\r\n    \r\n    // Create new participant\r\n    const participant = createParticipant(\r\n      newParticipant.name.trim(),\r\n      newParticipant.email.trim(),\r\n      splitMethod === 'percentage' ? parseFloat(newParticipant.sharePercentage) || null : null,\r\n      splitMethod === 'amount' ? parseFloat(newParticipant.shareAmount) || null : null\r\n    );\r\n    \r\n    // Add to participants list\r\n    setParticipants([...participants, participant]);\r\n    \r\n    // Reset form\r\n    setNewParticipant({\r\n      name: '',\r\n      email: '',\r\n      sharePercentage: '',\r\n      shareAmount: ''\r\n    });\r\n    \r\n    // Clear any error messages\r\n    setError('');\r\n    \r\n    // Update shares\r\n    updateShares([...participants, participant]);\r\n  };\r\n  \r\n  // Remove a participant\r\n  const handleRemoveParticipant = (participantId) => {\r\n    const updatedParticipants = participants.filter(p => p.id !== participantId);\r\n    setParticipants(updatedParticipants);\r\n    updateShares(updatedParticipants);\r\n    \r\n    // Clear any error messages\r\n    setError('');\r\n  };\r\n  \r\n  // Add a contact as a participant\r\n  const handleAddContact = (contact) => {\r\n    // Check if contact is already added\r\n    if (participants.some(p => \r\n      (p.email && contact.email && p.email.toLowerCase() === contact.email.toLowerCase()) ||\r\n      p.name.toLowerCase() === contact.name.toLowerCase()\r\n    )) {\r\n      setError('This contact is already added as a participant');\r\n      return;\r\n    }\r\n    \r\n    // Create participant from contact\r\n    const participant = createParticipant(\r\n      contact.name,\r\n      contact.email\r\n    );\r\n    \r\n    // Add to participants list\r\n    setParticipants([...participants, participant]);\r\n    \r\n    // Clear any error messages\r\n    setError('');\r\n    \r\n    // Update shares\r\n    updateShares([...participants, participant]);\r\n  };\r\n  \r\n  // Update participant shares based on split method\r\n  const updateShares = (participantsList = participants) => {\r\n    if (!expenseData.amount || isNaN(parseFloat(expenseData.amount))) {\r\n      return;\r\n    }\r\n    \r\n    const amount = parseFloat(expenseData.amount);\r\n    let updatedParticipants = [...participantsList];\r\n    \r\n    if (splitMethod === 'equal') {\r\n      // Equal split\r\n      const share = amount / participantsList.length;\r\n      updatedParticipants = participantsList.map(p => ({\r\n        ...p,\r\n        sharePercentage: 100 / participantsList.length,\r\n        shareAmount: share\r\n      }));\r\n    } else if (splitMethod === 'percentage') {\r\n      // Custom percentage split\r\n      // First, calculate percentage for those without explicit percentage\r\n      const totalAssignedPercentage = participantsList.reduce(\r\n        (sum, p) => sum + (p.sharePercentage || 0), \r\n        0\r\n      );\r\n      \r\n      const unassignedCount = participantsList.filter(p => !p.sharePercentage).length;\r\n      \r\n      if (unassignedCount > 0 && totalAssignedPercentage < 100) {\r\n        const remainingPercentage = 100 - totalAssignedPercentage;\r\n        const defaultPercentage = remainingPercentage / unassignedCount;\r\n        \r\n        updatedParticipants = participantsList.map(p => {\r\n          if (!p.sharePercentage) {\r\n            return {\r\n              ...p,\r\n              sharePercentage: defaultPercentage,\r\n              shareAmount: (amount * defaultPercentage) / 100\r\n            };\r\n          }\r\n          return {\r\n            ...p,\r\n            shareAmount: (amount * p.sharePercentage) / 100\r\n          };\r\n        });\r\n      } else {\r\n        updatedParticipants = participantsList.map(p => ({\r\n          ...p,\r\n          shareAmount: (amount * (p.sharePercentage || 0)) / 100\r\n        }));\r\n      }\r\n    } else if (splitMethod === 'amount') {\r\n      // Custom amount split\r\n      // First, calculate total assigned amount\r\n      const totalAssignedAmount = participantsList.reduce(\r\n        (sum, p) => sum + (p.shareAmount || 0), \r\n        0\r\n      );\r\n      \r\n      const unassignedCount = participantsList.filter(p => !p.shareAmount).length;\r\n      \r\n      if (unassignedCount > 0 && totalAssignedAmount < amount) {\r\n        const remainingAmount = amount - totalAssignedAmount;\r\n        const defaultAmount = remainingAmount / unassignedCount;\r\n        \r\n        updatedParticipants = participantsList.map(p => {\r\n          if (!p.shareAmount) {\r\n            return {\r\n              ...p,\r\n              shareAmount: defaultAmount,\r\n              sharePercentage: (defaultAmount / amount) * 100\r\n            };\r\n          }\r\n          return {\r\n            ...p,\r\n            sharePercentage: (p.shareAmount / amount) * 100\r\n          };\r\n        });\r\n      } else {\r\n        updatedParticipants = participantsList.map(p => ({\r\n          ...p,\r\n          sharePercentage: ((p.shareAmount || 0) / amount) * 100\r\n        }));\r\n      }\r\n    }\r\n    \r\n    setParticipants(updatedParticipants);\r\n  };\r\n  \r\n  // Handle form submission\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    setIsSubmitting(true);\r\n    \r\n    try {\r\n      // Validation\r\n      if (!expenseData.category) {\r\n        setError('Please select a category');\r\n        setIsSubmitting(false);\r\n        return;\r\n      }\r\n      \r\n      if (!expenseData.amount || isNaN(parseFloat(expenseData.amount)) || parseFloat(expenseData.amount) <= 0) {\r\n        setError('Please enter a valid amount');\r\n        setIsSubmitting(false);\r\n        return;\r\n      }\r\n      \r\n      if (!expenseData.date) {\r\n        setError('Please select a date');\r\n        setIsSubmitting(false);\r\n        return;\r\n      }\r\n      \r\n      if (!expenseData.description) {\r\n        setError('Please enter a description');\r\n        setIsSubmitting(false);\r\n        return;\r\n      }\r\n      \r\n      if (participants.length < 2) {\r\n        setError('Please add at least one more participant to split the expense');\r\n        setIsSubmitting(false);\r\n        return;\r\n      }\r\n      \r\n      // Verify total shares add up to the expense amount\r\n      const totalShareAmount = participants.reduce((sum, p) => sum + (p.shareAmount || 0), 0);\r\n      const expenseAmount = parseFloat(expenseData.amount);\r\n      \r\n      // Allow for small floating point differences\r\n      if (Math.abs(totalShareAmount - expenseAmount) > 0.01) {\r\n        setError(`The total of all shares (${totalShareAmount.toFixed(2)}) does not match the expense amount (${expenseAmount.toFixed(2)})`);\r\n        setIsSubmitting(false);\r\n        return;\r\n      }\r\n      \r\n      console.log('Creating split expense with data:', {\r\n        expenseData,\r\n        participants\r\n      });\r\n      \r\n      // Create the split expense\r\n      const result = await createNewSplitExpense(\r\n        {\r\n          ...expenseData,\r\n          amount: parseFloat(expenseData.amount)\r\n        },\r\n        participants\r\n      );\r\n      \r\n      if (result) {\r\n        console.log('Split expense created successfully:', result);\r\n        // Navigate to split expense details\r\n        navigate(`/split/details/${result.id}`);\r\n      } else {\r\n        setError('Failed to create split expense. Please try again.');\r\n        setIsSubmitting(false);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error creating split expense:', error);\r\n      setError(`An error occurred: ${error.message || 'Please try again'}`);\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <div className=\"split-expense-form-container\">\r\n      <h1>Split an Expense</h1>\r\n      \r\n      {error && (\r\n        <div className=\"error-message\">{error}</div>\r\n      )}\r\n      \r\n      <form className=\"split-expense-form\" onSubmit={handleSubmit}>\r\n        <div className=\"form-section\">\r\n          <h2>Basic Expense Details</h2>\r\n          \r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"category\">Category*</label>\r\n            <select\r\n              id=\"category\"\r\n              name=\"category\"\r\n              value={expenseData.category}\r\n              onChange={handleExpenseChange}\r\n              required\r\n              disabled={isSubmitting}\r\n            >\r\n              <option value=\"\">Select a category</option>\r\n              {safeCategories.map((category) => (\r\n                <option key={category} value={category}>{category}</option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          \r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"amount\">Total Amount*</label>\r\n            <input\r\n              type=\"number\"\r\n              id=\"amount\"\r\n              name=\"amount\"\r\n              value={expenseData.amount}\r\n              onChange={handleExpenseChange}\r\n              min=\"0.01\"\r\n              step=\"0.01\"\r\n              placeholder=\"0.00\"\r\n              required\r\n              disabled={isSubmitting}\r\n            />\r\n          </div>\r\n          \r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"date\">Date*</label>\r\n            <input\r\n              type=\"date\"\r\n              id=\"date\"\r\n              name=\"date\"\r\n              value={expenseData.date}\r\n              onChange={handleExpenseChange}\r\n              required\r\n              disabled={isSubmitting}\r\n            />\r\n          </div>\r\n          \r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"description\">Description*</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"description\"\r\n              name=\"description\"\r\n              value={expenseData.description}\r\n              onChange={handleExpenseChange}\r\n              placeholder=\"E.g., Dinner at Luigi's\"\r\n              required\r\n              disabled={isSubmitting}\r\n            />\r\n          </div>\r\n          \r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"notes\">Notes (Optional)</label>\r\n            <textarea\r\n              id=\"notes\"\r\n              name=\"notes\"\r\n              value={expenseData.notes}\r\n              onChange={handleExpenseChange}\r\n              placeholder=\"Any additional details\"\r\n              rows=\"3\"\r\n              disabled={isSubmitting}\r\n            />\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"form-section\">\r\n          <h2>Split Details</h2>\r\n          \r\n          <div className=\"split-method-selector\">\r\n            <label>Split Method:</label>\r\n            <div className=\"split-method-options\">\r\n              <button \r\n                type=\"button\" \r\n                className={splitMethod === 'equal' ? 'active' : ''}\r\n                onClick={() => setSplitMethod('equal')}\r\n                disabled={isSubmitting}\r\n              >\r\n                Equal Split\r\n              </button>\r\n              <button \r\n                type=\"button\" \r\n                className={splitMethod === 'percentage' ? 'active' : ''}\r\n                onClick={() => setSplitMethod('percentage')}\r\n                disabled={isSubmitting}\r\n              >\r\n                By Percentage\r\n              </button>\r\n              <button \r\n                type=\"button\" \r\n                className={splitMethod === 'amount' ? 'active' : ''}\r\n                onClick={() => setSplitMethod('amount')}\r\n                disabled={isSubmitting}\r\n              >\r\n                By Amount\r\n              </button>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"participants-list\">\r\n            <h3>Participants</h3>\r\n            {participants.length === 0 ? (\r\n              <p className=\"no-participants\">No participants added yet</p>\r\n            ) : (\r\n              <div className=\"participants-table\">\r\n                <div className=\"participants-header\">\r\n                  <span>Name</span>\r\n                  <span>Email</span>\r\n                  {splitMethod === 'percentage' && <span>Percentage</span>}\r\n                  {splitMethod === 'amount' && <span>Amount</span>}\r\n                  <span>Share Amount</span>\r\n                  <span>Actions</span>\r\n                </div>\r\n                \r\n                {participants.map((participant, index) => (\r\n                  <div className=\"participant-row\" key={participant.id}>\r\n                    <span>{participant.name}</span>\r\n                    <span>{participant.email || '-'}</span>\r\n                    \r\n                    {splitMethod === 'percentage' && (\r\n                      <span>\r\n                        <input\r\n                          type=\"number\"\r\n                          min=\"0\"\r\n                          max=\"100\"\r\n                          step=\"0.1\"\r\n                          value={participant.sharePercentage || ''}\r\n                          onChange={(e) => {\r\n                            const value = parseFloat(e.target.value);\r\n                            const updatedParticipants = [...participants];\r\n                            updatedParticipants[index] = {\r\n                              ...participant,\r\n                              sharePercentage: value,\r\n                              shareAmount: value ? (parseFloat(expenseData.amount) * value) / 100 : 0\r\n                            };\r\n                            setParticipants(updatedParticipants);\r\n                          }}\r\n                          disabled={isSubmitting}\r\n                        />\r\n                        %\r\n                      </span>\r\n                    )}\r\n                    \r\n                    {splitMethod === 'amount' && (\r\n                      <span>\r\n                        <input\r\n                          type=\"number\"\r\n                          min=\"0\"\r\n                          step=\"0.01\"\r\n                          value={participant.shareAmount || ''}\r\n                          onChange={(e) => {\r\n                            const value = parseFloat(e.target.value);\r\n                            const updatedParticipants = [...participants];\r\n                            updatedParticipants[index] = {\r\n                              ...participant,\r\n                              shareAmount: value,\r\n                              sharePercentage: value && expenseData.amount ? \r\n                                (value / parseFloat(expenseData.amount)) * 100 : 0\r\n                            };\r\n                            setParticipants(updatedParticipants);\r\n                          }}\r\n                          disabled={isSubmitting}\r\n                        />\r\n                      </span>\r\n                    )}\r\n                    \r\n                    <span>\r\n                      ${participant.shareAmount ? participant.shareAmount.toFixed(2) : '0.00'}\r\n                    </span>\r\n                    \r\n                    <span>\r\n                      {/* Don't allow removing the first participant (current user) */}\r\n                      {index > 0 && (\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"remove-participant-btn\"\r\n                          onClick={() => handleRemoveParticipant(participant.id)}\r\n                          disabled={isSubmitting}\r\n                        >\r\n                          Remove\r\n                        </button>\r\n                      )}\r\n                    </span>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n          \r\n          <div className=\"add-participant-form\">\r\n            <h3>Add Participant</h3>\r\n            <div className=\"participant-form-row\">\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"participantName\">Name*</label>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"participantName\"\r\n                  name=\"name\"\r\n                  value={newParticipant.name}\r\n                  onChange={handleNewParticipantChange}\r\n                  placeholder=\"Participant name\"\r\n                  disabled={isSubmitting}\r\n                />\r\n              </div>\r\n              \r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"participantEmail\">Email</label>\r\n                <input\r\n                  type=\"email\"\r\n                  id=\"participantEmail\"\r\n                  name=\"email\"\r\n                  value={newParticipant.email}\r\n                  onChange={handleNewParticipantChange}\r\n                  placeholder=\"Optional\"\r\n                  disabled={isSubmitting}\r\n                />\r\n              </div>\r\n              \r\n              {splitMethod === 'percentage' && (\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"participantPercentage\">Percentage</label>\r\n                  <input\r\n                    type=\"number\"\r\n                    id=\"participantPercentage\"\r\n                    name=\"sharePercentage\"\r\n                    value={newParticipant.sharePercentage}\r\n                    onChange={handleNewParticipantChange}\r\n                    min=\"0\"\r\n                    max=\"100\"\r\n                    step=\"0.1\"\r\n                    placeholder=\"0\"\r\n                    disabled={isSubmitting}\r\n                  />\r\n                </div>\r\n              )}\r\n              \r\n              {splitMethod === 'amount' && (\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"participantAmount\">Amount</label>\r\n                  <input\r\n                    type=\"number\"\r\n                    id=\"participantAmount\"\r\n                    name=\"shareAmount\"\r\n                    value={newParticipant.shareAmount}\r\n                    onChange={handleNewParticipantChange}\r\n                    min=\"0\"\r\n                    step=\"0.01\"\r\n                    placeholder=\"0.00\"\r\n                    disabled={isSubmitting}\r\n                  />\r\n                </div>\r\n              )}\r\n              \r\n              <button\r\n                type=\"button\"\r\n                className=\"add-participant-btn\"\r\n                onClick={handleAddParticipant}\r\n                disabled={isSubmitting}\r\n              >\r\n                Add\r\n              </button>\r\n            </div>\r\n          </div>\r\n          \r\n          {contacts.length > 0 && (\r\n            <div className=\"contacts-section\">\r\n              <h3>Add from Contacts</h3>\r\n              <div className=\"contacts-list\">\r\n                {contacts.map(contact => (\r\n                  <div key={contact.id} className=\"contact-item\">\r\n                    <div className=\"contact-info\">\r\n                      <div className=\"contact-name\">{contact.name}</div>\r\n                      <div className=\"contact-email\">{contact.email || 'No email'}</div>\r\n                    </div>\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"add-contact-btn\"\r\n                      onClick={() => handleAddContact(contact)}\r\n                      disabled={isSubmitting}\r\n                    >\r\n                      Add\r\n                    </button>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n        \r\n        <div className=\"form-actions\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"cancel-btn\"\r\n            onClick={() => navigate('/split')}\r\n            disabled={isSubmitting}\r\n          >\r\n            Cancel\r\n          </button>\r\n          <button\r\n            type=\"submit\"\r\n            className=\"submit-btn\"\r\n            disabled={isSubmitting}\r\n          >\r\n            {isSubmitting ? 'Creating...' : 'Create Split Expense'}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SplitExpenseForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}