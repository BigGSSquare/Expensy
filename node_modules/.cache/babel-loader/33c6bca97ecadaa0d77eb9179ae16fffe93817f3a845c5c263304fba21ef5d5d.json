{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tejit\\\\OneDrive\\\\Desktop\\\\expence tracker final\\\\expence-tracker\\\\src\\\\components\\\\BudgetSettings.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState, useEffect } from 'react';\nimport { ExpenseContext } from '../context/ExpenseContext';\nimport { AuthContext } from '../context/AuthContext';\nimport './BudgetSettings.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BudgetSettings = () => {\n  _s();\n  var _currentUser$preferen;\n  const {\n    budgets,\n    updateBudget,\n    deleteBudget,\n    expenses,\n    expenseCategories\n  } = useContext(ExpenseContext);\n  const {\n    currentUser,\n    updateProfile\n  } = useContext(AuthContext);\n  const [newCategory, setNewCategory] = useState('');\n  const [newAmount, setNewAmount] = useState('');\n  const [categoryUsage, setCategoryUsage] = useState({});\n  const [emailAlerts, setEmailAlerts] = useState((currentUser === null || currentUser === void 0 ? void 0 : (_currentUser$preferen = currentUser.preferences) === null || _currentUser$preferen === void 0 ? void 0 : _currentUser$preferen.emailNotifications) !== false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n\n  // Make sure we have valid data\n  const safeExpenses = Array.isArray(expenses) ? expenses : [];\n  const safeCategories = Array.isArray(expenseCategories) ? expenseCategories : [];\n  const safeBudgets = budgets && typeof budgets === 'object' ? budgets : {};\n\n  // Calculate current month's spending by category\n  useEffect(() => {\n    // Early return if dependencies are missing\n    if (!safeExpenses || !safeCategories || !safeBudgets) return;\n    try {\n      const currentDate = new Date();\n      const currentMonth = currentDate.getMonth();\n      const currentYear = currentDate.getFullYear();\n      const usage = {};\n      safeCategories.forEach(category => {\n        if (safeBudgets[category]) {\n          try {\n            const monthlyExpenses = safeExpenses.filter(expense => {\n              if (!expense || !expense.date) return false;\n              try {\n                const expenseDate = new Date(expense.date);\n                return expenseDate.getMonth() === currentMonth && expenseDate.getFullYear() === currentYear && expense.category === category;\n              } catch (e) {\n                console.error('Invalid date format:', expense.date);\n                return false;\n              }\n            });\n            const totalSpent = monthlyExpenses.reduce((sum, expense) => {\n              const amount = parseFloat(expense.amount);\n              return sum + (isNaN(amount) ? 0 : amount);\n            }, 0);\n            const budget = parseFloat(safeBudgets[category]);\n            if (!isNaN(budget)) {\n              usage[category] = {\n                spent: totalSpent,\n                budget: budget,\n                percentage: budget > 0 ? totalSpent / budget * 100 : 0,\n                remaining: budget - totalSpent\n              };\n            }\n          } catch (error) {\n            console.error(`Error calculating usage for category ${category}:`, error);\n          }\n        }\n      });\n      setCategoryUsage(usage);\n    } catch (error) {\n      console.error('Error calculating category usage:', error);\n      setCategoryUsage({});\n    }\n  }, [safeExpenses, safeBudgets, safeCategories]);\n\n  // Handle email alerts preference change\n  const handleEmailAlertsChange = e => {\n    try {\n      const isChecked = e.target.checked;\n      setEmailAlerts(isChecked);\n\n      // Update user preferences\n      if (currentUser) {\n        const preferences = {\n          ...(currentUser.preferences || {}),\n          emailNotifications: isChecked\n        };\n        updateProfile({\n          preferences\n        });\n      }\n    } catch (error) {\n      console.error('Error updating email preferences:', error);\n      setError('Failed to update email preferences. Please try again.');\n    }\n  };\n\n  // Handle form submission for adding new budget\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    setSuccess('');\n    try {\n      // Validate form inputs\n      if (!newCategory) {\n        setError('Please select a category');\n        return;\n      }\n      if (!newAmount) {\n        setError('Please enter a budget amount');\n        return;\n      }\n      const parsedAmount = parseFloat(newAmount);\n      if (isNaN(parsedAmount) || parsedAmount < 0) {\n        setError('Please enter a valid positive number');\n        return;\n      }\n      console.log(`Attempting to update budget for ${newCategory}: $${parsedAmount}`);\n\n      // Update budget with await since it's async\n      const result = await updateBudget(newCategory, parsedAmount);\n      if (result) {\n        setSuccess(`Budget for ${newCategory} set successfully!`);\n        setNewCategory('');\n        setNewAmount('');\n\n        // Clear success message after 3 seconds\n        setTimeout(() => {\n          setSuccess('');\n        }, 3000);\n      } else {\n        setError('Failed to set budget. Please try again.');\n      }\n    } catch (error) {\n      console.error('Error submitting budget:', error);\n      setError(`An error occurred: ${error.message || 'Please try again.'}`);\n    }\n  };\n\n  // Handle updating existing budget\n  const handleUpdate = (category, amount) => {\n    setError('');\n    setSuccess('');\n    try {\n      const currentAmount = parseFloat(amount).toFixed(2);\n      const newAmount = prompt(`Enter new budget for ${category}:`, currentAmount);\n      if (newAmount === null) return; // User cancelled\n\n      const parsedAmount = parseFloat(newAmount);\n      if (isNaN(parsedAmount) || parsedAmount < 0) {\n        alert('Please enter a valid positive number');\n        return;\n      }\n\n      // Update budget\n      const result = updateBudget(category, parsedAmount);\n      if (result) {\n        setSuccess(`Budget for ${category} updated successfully!`);\n\n        // Clear success message after 3 seconds\n        setTimeout(() => {\n          setSuccess('');\n        }, 3000);\n      } else {\n        setError('Failed to update budget. Please try again.');\n      }\n    } catch (error) {\n      console.error('Error updating budget:', error);\n      setError('An error occurred. Please try again.');\n    }\n  };\n\n  // Delete a budget\n  const handleDelete = category => {\n    setError('');\n    setSuccess('');\n    try {\n      if (window.confirm(`Are you sure you want to delete the budget for ${category}?`)) {\n        const result = deleteBudget(category);\n        if (result) {\n          setSuccess(`Budget for ${category} deleted successfully!`);\n\n          // Clear success message after 3 seconds\n          setTimeout(() => {\n            setSuccess('');\n          }, 3000);\n        } else {\n          setError('Failed to delete budget. Please try again.');\n        }\n      }\n    } catch (error) {\n      console.error('Error deleting budget:', error);\n      setError('An error occurred. Please try again.');\n    }\n  };\n\n  // Helper function to determine progress bar color\n  const getProgressColor = percentage => {\n    if (percentage >= 100) return '#ff4d4f'; // Red\n    if (percentage >= 80) return '#faad14'; // Yellow/Amber\n    return '#52c41a'; // Green\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"budget-settings\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Budget Settings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      style: {\n        backgroundColor: '#fff2f0',\n        border: '1px solid #ffccc7',\n        color: '#ff4d4f',\n        padding: '12px',\n        borderRadius: '4px',\n        marginBottom: '20px'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 9\n    }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"success-message\",\n      style: {\n        backgroundColor: '#f6ffed',\n        border: '1px solid #b7eb8f',\n        color: '#52c41a',\n        padding: '12px',\n        borderRadius: '4px',\n        marginBottom: '20px'\n      },\n      children: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notification-settings\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Alert Settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Configure how you want to be notified when you exceed your budget limits.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert-options\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"email-alert-option\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: emailAlerts,\n            onChange: handleEmailAlertsChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alert-option-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"alert-option-title\",\n              children: \"Email Alerts\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"alert-option-desc\",\n              children: \"Send an email notification when you exceed a budget\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"current-budgets\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Current Budgets\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this), Object.keys(safeBudgets).length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"budgets-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Monthly Budget\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Spent\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Remaining\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Progress\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: Object.entries(safeBudgets).map(([category, amount]) => {\n            const usage = categoryUsage[category] || {\n              spent: 0,\n              budget: parseFloat(amount) || 0,\n              percentage: 0,\n              remaining: parseFloat(amount) || 0\n            };\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: category\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"$\", parseFloat(amount).toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"$\", usage.spent.toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: usage.remaining < 0 ? 'negative-balance' : '',\n                children: [\"$\", Math.abs(usage.remaining).toFixed(2), usage.remaining < 0 && ' over budget']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"progress-container\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"progress-bar\",\n                    style: {\n                      width: `${Math.min(usage.percentage || 0, 100)}%`,\n                      backgroundColor: getProgressColor(usage.percentage || 0)\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 305,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"progress-text\",\n                    children: [(usage.percentage || 0).toFixed(0), \"%\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 312,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 304,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    display: 'flex',\n                    gap: '8px'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"edit-btn\",\n                    onClick: () => handleUpdate(category, amount),\n                    children: \"Edit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 317,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"delete-btn\",\n                    style: {\n                      backgroundColor: '#ff4d4f',\n                      color: 'white'\n                    },\n                    onClick: () => handleDelete(category),\n                    children: \"Delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 323,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 316,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 21\n              }, this)]\n            }, category, true, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No budgets set yet. Add your first budget below.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-budget\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add New Budget\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"category\",\n              children: \"Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"category\",\n              value: newCategory,\n              onChange: e => setNewCategory(e.target.value),\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select a category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 17\n              }, this), safeCategories.filter(category => !safeBudgets[category]).map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: category,\n                children: category\n              }, category, false, {\n                fileName: _jsxFileName,\n                lineNumber: 358,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"amount\",\n              children: \"Monthly Budget\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              id: \"amount\",\n              value: newAmount,\n              onChange: e => setNewAmount(e.target.value),\n              min: \"1\",\n              step: \"0.01\",\n              placeholder: \"0.00\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"add-btn\",\n            children: \"Add Budget\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 220,\n    columnNumber: 5\n  }, this);\n};\n_s(BudgetSettings, \"HrvST/lXXo+dHLQutHKSukPYXsM=\");\n_c = BudgetSettings;\nexport default BudgetSettings;\nvar _c;\n$RefreshReg$(_c, \"BudgetSettings\");","map":{"version":3,"names":["React","useContext","useState","useEffect","ExpenseContext","AuthContext","jsxDEV","_jsxDEV","BudgetSettings","_s","_currentUser$preferen","budgets","updateBudget","deleteBudget","expenses","expenseCategories","currentUser","updateProfile","newCategory","setNewCategory","newAmount","setNewAmount","categoryUsage","setCategoryUsage","emailAlerts","setEmailAlerts","preferences","emailNotifications","error","setError","success","setSuccess","safeExpenses","Array","isArray","safeCategories","safeBudgets","currentDate","Date","currentMonth","getMonth","currentYear","getFullYear","usage","forEach","category","monthlyExpenses","filter","expense","date","expenseDate","e","console","totalSpent","reduce","sum","amount","parseFloat","isNaN","budget","spent","percentage","remaining","handleEmailAlertsChange","isChecked","target","checked","handleSubmit","preventDefault","parsedAmount","log","result","setTimeout","message","handleUpdate","currentAmount","toFixed","prompt","alert","handleDelete","window","confirm","getProgressColor","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","backgroundColor","border","color","padding","borderRadius","marginBottom","type","onChange","Object","keys","length","entries","map","Math","abs","width","min","display","gap","onClick","onSubmit","htmlFor","id","value","required","step","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/tejit/OneDrive/Desktop/expence tracker final/expence-tracker/src/components/BudgetSettings.js"],"sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\r\nimport { ExpenseContext } from '../context/ExpenseContext';\r\nimport { AuthContext } from '../context/AuthContext';\r\nimport './BudgetSettings.css';\r\n\r\nconst BudgetSettings = () => {\r\n  const { budgets, updateBudget, deleteBudget, expenses, expenseCategories } = useContext(ExpenseContext);\r\n  const { currentUser, updateProfile } = useContext(AuthContext);\r\n  const [newCategory, setNewCategory] = useState('');\r\n  const [newAmount, setNewAmount] = useState('');\r\n  const [categoryUsage, setCategoryUsage] = useState({});\r\n  const [emailAlerts, setEmailAlerts] = useState(\r\n    currentUser?.preferences?.emailNotifications !== false\r\n  );\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState('');\r\n  \r\n  // Make sure we have valid data\r\n  const safeExpenses = Array.isArray(expenses) ? expenses : [];\r\n  const safeCategories = Array.isArray(expenseCategories) ? expenseCategories : [];\r\n  const safeBudgets = budgets && typeof budgets === 'object' ? budgets : {};\r\n  \r\n  // Calculate current month's spending by category\r\n  useEffect(() => {\r\n    // Early return if dependencies are missing\r\n    if (!safeExpenses || !safeCategories || !safeBudgets) return;\r\n    \r\n    try {\r\n      const currentDate = new Date();\r\n      const currentMonth = currentDate.getMonth();\r\n      const currentYear = currentDate.getFullYear();\r\n      \r\n      const usage = {};\r\n      \r\n      safeCategories.forEach(category => {\r\n        if (safeBudgets[category]) {\r\n          try {\r\n            const monthlyExpenses = safeExpenses.filter(expense => {\r\n              if (!expense || !expense.date) return false;\r\n              \r\n              try {\r\n                const expenseDate = new Date(expense.date);\r\n                return expenseDate.getMonth() === currentMonth && \r\n                      expenseDate.getFullYear() === currentYear &&\r\n                      expense.category === category;\r\n              } catch (e) {\r\n                console.error('Invalid date format:', expense.date);\r\n                return false;\r\n              }\r\n            });\r\n            \r\n            const totalSpent = monthlyExpenses.reduce((sum, expense) => {\r\n              const amount = parseFloat(expense.amount);\r\n              return sum + (isNaN(amount) ? 0 : amount);\r\n            }, 0);\r\n            \r\n            const budget = parseFloat(safeBudgets[category]);\r\n            \r\n            if (!isNaN(budget)) {\r\n              usage[category] = {\r\n                spent: totalSpent,\r\n                budget: budget,\r\n                percentage: budget > 0 ? (totalSpent / budget) * 100 : 0,\r\n                remaining: budget - totalSpent\r\n              };\r\n            }\r\n          } catch (error) {\r\n            console.error(`Error calculating usage for category ${category}:`, error);\r\n          }\r\n        }\r\n      });\r\n      \r\n      setCategoryUsage(usage);\r\n    } catch (error) {\r\n      console.error('Error calculating category usage:', error);\r\n      setCategoryUsage({});\r\n    }\r\n  }, [safeExpenses, safeBudgets, safeCategories]);\r\n  \r\n  // Handle email alerts preference change\r\n  const handleEmailAlertsChange = (e) => {\r\n    try {\r\n      const isChecked = e.target.checked;\r\n      setEmailAlerts(isChecked);\r\n      \r\n      // Update user preferences\r\n      if (currentUser) {\r\n        const preferences = {\r\n          ...(currentUser.preferences || {}),\r\n          emailNotifications: isChecked\r\n        };\r\n        \r\n        updateProfile({ preferences });\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating email preferences:', error);\r\n      setError('Failed to update email preferences. Please try again.');\r\n    }\r\n  };\r\n  \r\n  // Handle form submission for adding new budget\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    setSuccess('');\r\n    \r\n    try {\r\n      // Validate form inputs\r\n      if (!newCategory) {\r\n        setError('Please select a category');\r\n        return;\r\n      }\r\n      \r\n      if (!newAmount) {\r\n        setError('Please enter a budget amount');\r\n        return;\r\n      }\r\n      \r\n      const parsedAmount = parseFloat(newAmount);\r\n      \r\n      if (isNaN(parsedAmount) || parsedAmount < 0) {\r\n        setError('Please enter a valid positive number');\r\n        return;\r\n      }\r\n      \r\n      console.log(`Attempting to update budget for ${newCategory}: $${parsedAmount}`);\r\n      \r\n      // Update budget with await since it's async\r\n      const result = await updateBudget(newCategory, parsedAmount);\r\n      \r\n      if (result) {\r\n        setSuccess(`Budget for ${newCategory} set successfully!`);\r\n        setNewCategory('');\r\n        setNewAmount('');\r\n        \r\n        // Clear success message after 3 seconds\r\n        setTimeout(() => {\r\n          setSuccess('');\r\n        }, 3000);\r\n      } else {\r\n        setError('Failed to set budget. Please try again.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error submitting budget:', error);\r\n      setError(`An error occurred: ${error.message || 'Please try again.'}`);\r\n    }\r\n  };\r\n  \r\n  // Handle updating existing budget\r\n  const handleUpdate = (category, amount) => {\r\n    setError('');\r\n    setSuccess('');\r\n    \r\n    try {\r\n      const currentAmount = parseFloat(amount).toFixed(2);\r\n      const newAmount = prompt(`Enter new budget for ${category}:`, currentAmount);\r\n      \r\n      if (newAmount === null) return; // User cancelled\r\n      \r\n      const parsedAmount = parseFloat(newAmount);\r\n      \r\n      if (isNaN(parsedAmount) || parsedAmount < 0) {\r\n        alert('Please enter a valid positive number');\r\n        return;\r\n      }\r\n      \r\n      // Update budget\r\n      const result = updateBudget(category, parsedAmount);\r\n      \r\n      if (result) {\r\n        setSuccess(`Budget for ${category} updated successfully!`);\r\n        \r\n        // Clear success message after 3 seconds\r\n        setTimeout(() => {\r\n          setSuccess('');\r\n        }, 3000);\r\n      } else {\r\n        setError('Failed to update budget. Please try again.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating budget:', error);\r\n      setError('An error occurred. Please try again.');\r\n    }\r\n  };\r\n  \r\n  // Delete a budget\r\n  const handleDelete = (category) => {\r\n    setError('');\r\n    setSuccess('');\r\n    \r\n    try {\r\n      if (window.confirm(`Are you sure you want to delete the budget for ${category}?`)) {\r\n        const result = deleteBudget(category);\r\n        \r\n        if (result) {\r\n          setSuccess(`Budget for ${category} deleted successfully!`);\r\n          \r\n          // Clear success message after 3 seconds\r\n          setTimeout(() => {\r\n            setSuccess('');\r\n          }, 3000);\r\n        } else {\r\n          setError('Failed to delete budget. Please try again.');\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Error deleting budget:', error);\r\n      setError('An error occurred. Please try again.');\r\n    }\r\n  };\r\n  \r\n  // Helper function to determine progress bar color\r\n  const getProgressColor = (percentage) => {\r\n    if (percentage >= 100) return '#ff4d4f'; // Red\r\n    if (percentage >= 80) return '#faad14'; // Yellow/Amber\r\n    return '#52c41a'; // Green\r\n  };\r\n  \r\n  return (\r\n    <div className=\"budget-settings\">\r\n      <h1>Budget Settings</h1>\r\n      \r\n      {/* Error and success messages */}\r\n      {error && (\r\n        <div className=\"error-message\" style={{\r\n          backgroundColor: '#fff2f0',\r\n          border: '1px solid #ffccc7',\r\n          color: '#ff4d4f',\r\n          padding: '12px',\r\n          borderRadius: '4px',\r\n          marginBottom: '20px'\r\n        }}>\r\n          {error}\r\n        </div>\r\n      )}\r\n      \r\n      {success && (\r\n        <div className=\"success-message\" style={{\r\n          backgroundColor: '#f6ffed',\r\n          border: '1px solid #b7eb8f',\r\n          color: '#52c41a',\r\n          padding: '12px',\r\n          borderRadius: '4px',\r\n          marginBottom: '20px'\r\n        }}>\r\n          {success}\r\n        </div>\r\n      )}\r\n      \r\n      <div className=\"notification-settings\">\r\n        <h2>Alert Settings</h2>\r\n        <p>Configure how you want to be notified when you exceed your budget limits.</p>\r\n        \r\n        <div className=\"alert-options\">\r\n          <label className=\"email-alert-option\">\r\n            <input \r\n              type=\"checkbox\" \r\n              checked={emailAlerts} \r\n              onChange={handleEmailAlertsChange} \r\n            />\r\n            <div className=\"alert-option-info\">\r\n              <span className=\"alert-option-title\">Email Alerts</span>\r\n              <span className=\"alert-option-desc\">Send an email notification when you exceed a budget</span>\r\n            </div>\r\n          </label>\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"current-budgets\">\r\n        <h2>Current Budgets</h2>\r\n        {Object.keys(safeBudgets).length > 0 ? (\r\n          <table className=\"budgets-table\">\r\n            <thead>\r\n              <tr>\r\n                <th>Category</th>\r\n                <th>Monthly Budget</th>\r\n                <th>Spent</th>\r\n                <th>Remaining</th>\r\n                <th>Progress</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {Object.entries(safeBudgets).map(([category, amount]) => {\r\n                const usage = categoryUsage[category] || { \r\n                  spent: 0, \r\n                  budget: parseFloat(amount) || 0, \r\n                  percentage: 0,\r\n                  remaining: parseFloat(amount) || 0\r\n                };\r\n                \r\n                return (\r\n                  <tr key={category}>\r\n                    <td>{category}</td>\r\n                    <td>${parseFloat(amount).toFixed(2)}</td>\r\n                    <td>${usage.spent.toFixed(2)}</td>\r\n                    <td \r\n                      className={usage.remaining < 0 ? 'negative-balance' : ''}\r\n                    >\r\n                      ${Math.abs(usage.remaining).toFixed(2)}\r\n                      {usage.remaining < 0 && ' over budget'}\r\n                    </td>\r\n                    <td>\r\n                      <div className=\"progress-container\">\r\n                        <div \r\n                          className=\"progress-bar\"\r\n                          style={{ \r\n                            width: `${Math.min(usage.percentage || 0, 100)}%`, \r\n                            backgroundColor: getProgressColor(usage.percentage || 0) \r\n                          }}\r\n                        ></div>\r\n                        <span className=\"progress-text\">{(usage.percentage || 0).toFixed(0)}%</span>\r\n                      </div>\r\n                    </td>\r\n                    <td>\r\n                      <div style={{ display: 'flex', gap: '8px' }}>\r\n                        <button \r\n                          className=\"edit-btn\"\r\n                          onClick={() => handleUpdate(category, amount)}\r\n                        >\r\n                          Edit\r\n                        </button>\r\n                        <button \r\n                          className=\"delete-btn\"\r\n                          style={{ backgroundColor: '#ff4d4f', color: 'white' }}\r\n                          onClick={() => handleDelete(category)}\r\n                        >\r\n                          Delete\r\n                        </button>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        ) : (\r\n          <p>No budgets set yet. Add your first budget below.</p>\r\n        )}\r\n      </div>\r\n      \r\n      <div className=\"add-budget\">\r\n        <h2>Add New Budget</h2>\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"form-row\">\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"category\">Category</label>\r\n              <select\r\n                id=\"category\"\r\n                value={newCategory}\r\n                onChange={(e) => setNewCategory(e.target.value)}\r\n                required\r\n              >\r\n                <option value=\"\">Select a category</option>\r\n                {safeCategories\r\n                  .filter(category => !safeBudgets[category])\r\n                  .map((category) => (\r\n                    <option key={category} value={category}>{category}</option>\r\n                  ))}\r\n              </select>\r\n            </div>\r\n            \r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"amount\">Monthly Budget</label>\r\n              <input\r\n                type=\"number\"\r\n                id=\"amount\"\r\n                value={newAmount}\r\n                onChange={(e) => setNewAmount(e.target.value)}\r\n                min=\"1\"\r\n                step=\"0.01\"\r\n                placeholder=\"0.00\"\r\n                required\r\n              />\r\n            </div>\r\n            \r\n            <button type=\"submit\" className=\"add-btn\">Add Budget</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BudgetSettings;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}