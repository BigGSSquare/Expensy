{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tejit\\\\OneDrive\\\\Desktop\\\\expence tracker final\\\\expence-tracker\\\\src\\\\components\\\\EnhancedCategoryChart.js\",\n  _s = $RefreshSig$();\n// src/components/EnhancedCategoryChart.js\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { PieChart, Pie, Cell, ResponsiveContainer, Tooltip, Legend, BarChart, Bar, XAxis, YAxis, CartesianGrid } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EnhancedCategoryChart = ({\n  data,\n  title = \"Spending by Category\"\n}) => {\n  _s();\n  // Visualization options\n  const [displayType, setDisplayType] = useState('pie'); // 'pie', 'donut', 'bar'\n  const [selectedSection, setSelectedSection] = useState(null);\n\n  // Sample data format if you don't provide your own data\n  const sampleData = [{\n    name: 'Food',\n    value: 2000,\n    percentage: 38\n  }, {\n    name: 'Healthcare',\n    value: 1625,\n    percentage: 31\n  }, {\n    name: 'Education',\n    value: 1100,\n    percentage: 21\n  }, {\n    name: 'Housing',\n    value: 157,\n    percentage: 3\n  }, {\n    name: 'Transportation',\n    value: 105,\n    percentage: 2\n  }, {\n    name: 'Entertainment',\n    value: 94,\n    percentage: 1.8\n  }, {\n    name: 'Shopping',\n    value: 78,\n    percentage: 1.5\n  }, {\n    name: 'Utilities',\n    value: 68,\n    percentage: 1.3\n  }, {\n    name: 'Personal Care',\n    value: 42,\n    percentage: 0.8\n  }, {\n    name: 'Other',\n    value: 34,\n    percentage: 0.6\n  }];\n\n  // Use provided data or sample data\n  const expenseData = data || sampleData;\n\n  // Number of top categories to show individually (adjust based on screen size)\n  const TOP_CATEGORIES_COUNT = 6;\n\n  // Process data to combine smaller categories into \"Other\"\n  const [processedData, setProcessedData] = useState([]);\n  const [drilldownData, setDrilldownData] = useState(null);\n  const processDataForDisplay = useCallback(() => {\n    // Reset drilldown if we're reprocessing data\n    setDrilldownData(null);\n    setSelectedSection(null);\n\n    // Sort data by value (descending)\n    const sortedData = [...expenseData].sort((a, b) => b.value - a.value);\n\n    // Take top categories\n    const topCategories = sortedData.slice(0, TOP_CATEGORIES_COUNT);\n\n    // Combine the rest into \"Other\"\n    if (sortedData.length > TOP_CATEGORIES_COUNT) {\n      const otherCategories = sortedData.slice(TOP_CATEGORIES_COUNT);\n      const otherValue = otherCategories.reduce((sum, item) => sum + item.value, 0);\n      const otherPercentage = otherCategories.reduce((sum, item) => sum + (item.percentage || 0), 0);\n\n      // Only add \"Other\" if there's a significant value\n      if (otherValue > 0) {\n        topCategories.push({\n          name: 'Other',\n          value: otherValue,\n          percentage: otherPercentage,\n          subCategories: otherCategories // Keep the details for potential drill-down\n        });\n      }\n    }\n    setProcessedData(topCategories);\n  }, [expenseData]);\n  useEffect(() => {\n    processDataForDisplay();\n  }, [expenseData, processDataForDisplay]);\n\n  // Chart colors with a broader palette\n  const COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#A28AD3', '#FF6B6B', '#4ECDC4', '#C7F464', '#FF6188', '#A9DC76', '#78DCE8', '#AB9DF2'];\n\n  // Custom tooltip\n  const CustomTooltip = ({\n    active,\n    payload\n  }) => {\n    if (active && payload && payload.length) {\n      const data = payload[0].payload;\n      const total = processedData.reduce((sum, item) => sum + item.value, 0);\n      const percentage = (data.value / total * 100).toFixed(1);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"custom-tooltip\",\n        style: {\n          backgroundColor: '#fff',\n          padding: '10px',\n          border: '1px solid #ccc',\n          borderRadius: '4px',\n          boxShadow: '0 2px 4px rgba(0,0,0,0.1)'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            margin: '0 0 5px 0',\n            fontWeight: 'bold',\n            color: payload[0].color\n          },\n          children: data.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            margin: '0',\n            color: '#666'\n          },\n          children: [\"Amount: $\", data.value.toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            margin: '0',\n            color: '#666'\n          },\n          children: [percentage, \"% of total\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), data.subCategories && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '8px',\n            borderTop: '1px solid #eee',\n            paddingTop: '8px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              margin: '0 0 5px 0',\n              fontWeight: 'bold'\n            },\n            children: \"Includes:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this), data.subCategories.slice(0, 3).map((subCat, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              margin: '0',\n              fontSize: '12px',\n              color: '#666'\n            },\n            children: [subCat.name, \": $\", subCat.value.toLocaleString(), subCat.percentage ? ` (${subCat.percentage.toFixed(1)}%)` : '']\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 17\n          }, this)), data.subCategories.length > 3 && /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              margin: '2px 0 0 0',\n              fontSize: '12px',\n              color: '#999',\n              fontStyle: 'italic'\n            },\n            children: [\"And \", data.subCategories.length - 3, \" more categories...\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this);\n    }\n    return null;\n  };\n\n  // Custom legend that includes percentages\n  const renderCustomizedLegend = props => {\n    const {\n      payload\n    } = props;\n    const total = processedData.reduce((sum, item) => sum + item.value, 0);\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      style: {\n        listStyle: 'none',\n        padding: 0,\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'center',\n        gap: '12px',\n        marginTop: '20px'\n      },\n      children: payload.map((entry, index) => {\n        const category = processedData.find(item => item.name === entry.value);\n        const percentage = category ? (category.value / total * 100).toFixed(1) : '0.0';\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            display: 'flex',\n            alignItems: 'center',\n            margin: '0',\n            cursor: 'pointer'\n          },\n          onClick: () => handleSectionClick(category),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: '12px',\n              height: '12px',\n              backgroundColor: entry.color,\n              marginRight: '8px',\n              borderRadius: '2px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontSize: '14px'\n            },\n            children: [entry.value, \": \", percentage, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }, this)]\n        }, `item-${index}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Handle pie/donut section click (for drill-down)\n  const handleSectionClick = data => {\n    if (data && data.name === 'Other' && data.subCategories) {\n      setSelectedSection('Other');\n      setDrilldownData(data.subCategories);\n    } else if (selectedSection) {\n      // Go back to main view if we're in drilldown\n      setSelectedSection(null);\n      setDrilldownData(null);\n    }\n  };\n\n  // Reset to main view (from drilldown)\n  const handleBackToMain = () => {\n    setSelectedSection(null);\n    setDrilldownData(null);\n  };\n\n  // Render the pie/donut chart\n  const renderPieChart = (isDonut = false) => {\n    const dataToUse = drilldownData || processedData;\n    if (!dataToUse || dataToUse.length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No data available for the selected categories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 14\n      }, this);\n    }\n\n    // Calculate total for percentage labels\n    const total = dataToUse.reduce((sum, item) => sum + item.value, 0);\n\n    // Only show label if percentage is above 5% to avoid clutter\n    const renderLabel = ({\n      name,\n      value,\n      cx,\n      cy,\n      midAngle,\n      innerRadius,\n      outerRadius,\n      percent\n    }) => {\n      if (percent < 0.05) return null; // Skip small slices\n\n      const RADIAN = Math.PI / 180;\n      const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n      const x = cx + radius * Math.cos(-midAngle * RADIAN);\n      const y = cy + radius * Math.sin(-midAngle * RADIAN);\n      return /*#__PURE__*/_jsxDEV(\"text\", {\n        x: x,\n        y: y,\n        fill: \"white\",\n        textAnchor: x > cx ? 'start' : 'end',\n        dominantBaseline: \"central\",\n        fontSize: \"12\",\n        fontWeight: \"bold\",\n        children: `${(percent * 100).toFixed(0)}%`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this);\n    };\n    return /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: 350,\n      children: /*#__PURE__*/_jsxDEV(PieChart, {\n        onClick: drilldownData ? handleBackToMain : undefined,\n        style: {\n          cursor: drilldownData ? 'pointer' : 'default'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Pie, {\n          data: dataToUse,\n          cx: \"50%\",\n          cy: \"50%\",\n          labelLine: false,\n          label: renderLabel,\n          outerRadius: 120,\n          innerRadius: isDonut ? 60 : 0,\n          fill: \"#8884d8\",\n          dataKey: \"value\",\n          paddingAngle: 2,\n          onClick: handleSectionClick,\n          children: dataToUse.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n            fill: COLORS[index % COLORS.length],\n            style: {\n              cursor: 'pointer'\n            }\n          }, `cell-${index}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          content: /*#__PURE__*/_jsxDEV(CustomTooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {\n          content: renderCustomizedLegend,\n          verticalAlign: \"bottom\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Render the horizontal bar chart (good for many categories)\n  const renderBarChart = () => {\n    const dataToUse = drilldownData || processedData;\n    if (!dataToUse || dataToUse.length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No data available for the selected categories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 14\n      }, this);\n    }\n\n    // Sort data by value (descending) for the bar chart\n    const sortedData = [...dataToUse].sort((a, b) => b.value - a.value);\n    return /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: Math.max(350, sortedData.length * 40),\n      children: /*#__PURE__*/_jsxDEV(BarChart, {\n        data: sortedData,\n        layout: \"vertical\",\n        margin: {\n          top: 5,\n          right: 30,\n          left: 90,\n          bottom: 5\n        },\n        onClick: drilldownData ? handleBackToMain : undefined,\n        style: {\n          cursor: drilldownData ? 'pointer' : 'default'\n        },\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          type: \"number\",\n          tickFormatter: value => `$${value}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          type: \"category\",\n          dataKey: \"name\",\n          width: 80,\n          tick: {\n            fontSize: 12\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          formatter: value => [`$${value.toLocaleString()}`, 'Amount']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          dataKey: \"value\",\n          onClick: handleSectionClick,\n          children: sortedData.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n            fill: COLORS[index % COLORS.length]\n          }, `cell-${index}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        marginBottom: '16px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          textAlign: 'center',\n          color: '#333',\n          margin: 0\n        },\n        children: selectedSection ? `${selectedSection} Breakdown` : title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          gap: '8px'\n        },\n        children: [selectedSection && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleBackToMain,\n          style: {\n            background: '#f0f0f0',\n            border: 'none',\n            padding: '4px 8px',\n            borderRadius: '4px',\n            cursor: 'pointer',\n            fontSize: '14px'\n          },\n          children: \"\\u2190 Back to Main View\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: displayType,\n          onChange: e => setDisplayType(e.target.value),\n          style: {\n            padding: '4px 8px',\n            borderRadius: '4px',\n            border: '1px solid #ddd',\n            backgroundColor: 'white'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"pie\",\n            children: \"Pie Chart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"donut\",\n            children: \"Donut Chart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"bar\",\n            children: \"Bar Chart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 7\n    }, this), displayType === 'pie' && renderPieChart(false), displayType === 'donut' && renderPieChart(true), displayType === 'bar' && renderBarChart(), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        fontSize: '12px',\n        color: '#666',\n        textAlign: 'center',\n        fontStyle: 'italic',\n        marginTop: '8px'\n      },\n      children: drilldownData ? 'Click anywhere on the chart to return to the main view' : 'Click on a section or legend item to see more details'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 303,\n    columnNumber: 5\n  }, this);\n};\n_s(EnhancedCategoryChart, \"oyztVYhtc0dsEHmUVKeL5RBfjmk=\");\n_c = EnhancedCategoryChart;\nexport default EnhancedCategoryChart;\nvar _c;\n$RefreshReg$(_c, \"EnhancedCategoryChart\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","PieChart","Pie","Cell","ResponsiveContainer","Tooltip","Legend","BarChart","Bar","XAxis","YAxis","CartesianGrid","jsxDEV","_jsxDEV","EnhancedCategoryChart","data","title","_s","displayType","setDisplayType","selectedSection","setSelectedSection","sampleData","name","value","percentage","expenseData","TOP_CATEGORIES_COUNT","processedData","setProcessedData","drilldownData","setDrilldownData","processDataForDisplay","sortedData","sort","a","b","topCategories","slice","length","otherCategories","otherValue","reduce","sum","item","otherPercentage","push","subCategories","COLORS","CustomTooltip","active","payload","total","toFixed","className","style","backgroundColor","padding","border","borderRadius","boxShadow","children","margin","fontWeight","color","fileName","_jsxFileName","lineNumber","columnNumber","toLocaleString","marginTop","borderTop","paddingTop","map","subCat","index","fontSize","fontStyle","renderCustomizedLegend","props","listStyle","display","flexWrap","justifyContent","gap","entry","category","find","alignItems","cursor","onClick","handleSectionClick","width","height","marginRight","handleBackToMain","renderPieChart","isDonut","dataToUse","renderLabel","cx","cy","midAngle","innerRadius","outerRadius","percent","RADIAN","Math","PI","radius","x","cos","y","sin","fill","textAnchor","dominantBaseline","undefined","labelLine","label","dataKey","paddingAngle","content","verticalAlign","renderBarChart","max","layout","top","right","left","bottom","strokeDasharray","type","tickFormatter","tick","formatter","marginBottom","textAlign","background","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/Users/tejit/OneDrive/Desktop/expence tracker final/expence-tracker/src/components/EnhancedCategoryChart.js"],"sourcesContent":["// src/components/EnhancedCategoryChart.js\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport { \r\n  PieChart, Pie, Cell, ResponsiveContainer, Tooltip, Legend, \r\n  BarChart, Bar, XAxis, YAxis, CartesianGrid \r\n} from 'recharts';\r\n\r\nconst EnhancedCategoryChart = ({ data, title = \"Spending by Category\" }) => {\r\n  // Visualization options\r\n  const [displayType, setDisplayType] = useState('pie'); // 'pie', 'donut', 'bar'\r\n  const [selectedSection, setSelectedSection] = useState(null);\r\n  \r\n  // Sample data format if you don't provide your own data\r\n  const sampleData = [\r\n    { name: 'Food', value: 2000, percentage: 38 },\r\n    { name: 'Healthcare', value: 1625, percentage: 31 },\r\n    { name: 'Education', value: 1100, percentage: 21 },\r\n    { name: 'Housing', value: 157, percentage: 3 },\r\n    { name: 'Transportation', value: 105, percentage: 2 },\r\n    { name: 'Entertainment', value: 94, percentage: 1.8 },\r\n    { name: 'Shopping', value: 78, percentage: 1.5 },\r\n    { name: 'Utilities', value: 68, percentage: 1.3 },\r\n    { name: 'Personal Care', value: 42, percentage: 0.8 },\r\n    { name: 'Other', value: 34, percentage: 0.6 }\r\n  ];\r\n\r\n  // Use provided data or sample data\r\n  const expenseData = data || sampleData;\r\n  \r\n  // Number of top categories to show individually (adjust based on screen size)\r\n  const TOP_CATEGORIES_COUNT = 6;\r\n  \r\n  // Process data to combine smaller categories into \"Other\"\r\n  const [processedData, setProcessedData] = useState([]);\r\n  const [drilldownData, setDrilldownData] = useState(null);\r\n  \r\n  const processDataForDisplay = useCallback(() => {\r\n    // Reset drilldown if we're reprocessing data\r\n    setDrilldownData(null);\r\n    setSelectedSection(null);\r\n    \r\n    // Sort data by value (descending)\r\n    const sortedData = [...expenseData].sort((a, b) => b.value - a.value);\r\n    \r\n    // Take top categories\r\n    const topCategories = sortedData.slice(0, TOP_CATEGORIES_COUNT);\r\n    \r\n    // Combine the rest into \"Other\"\r\n    if (sortedData.length > TOP_CATEGORIES_COUNT) {\r\n      const otherCategories = sortedData.slice(TOP_CATEGORIES_COUNT);\r\n      const otherValue = otherCategories.reduce((sum, item) => sum + item.value, 0);\r\n      const otherPercentage = otherCategories.reduce((sum, item) => sum + (item.percentage || 0), 0);\r\n      \r\n      // Only add \"Other\" if there's a significant value\r\n      if (otherValue > 0) {\r\n        topCategories.push({\r\n          name: 'Other',\r\n          value: otherValue,\r\n          percentage: otherPercentage,\r\n          subCategories: otherCategories // Keep the details for potential drill-down\r\n        });\r\n      }\r\n    }\r\n    \r\n    setProcessedData(topCategories);\r\n  }, [expenseData]);\r\n  \r\n  useEffect(() => {\r\n    processDataForDisplay();\r\n  }, [expenseData, processDataForDisplay]);\r\n  \r\n  // Chart colors with a broader palette\r\n  const COLORS = [\r\n    '#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#A28AD3', '#FF6B6B', \r\n    '#4ECDC4', '#C7F464', '#FF6188', '#A9DC76', '#78DCE8', '#AB9DF2'\r\n  ];\r\n  \r\n  // Custom tooltip\r\n  const CustomTooltip = ({ active, payload }) => {\r\n    if (active && payload && payload.length) {\r\n      const data = payload[0].payload;\r\n      const total = processedData.reduce((sum, item) => sum + item.value, 0);\r\n      const percentage = ((data.value / total) * 100).toFixed(1);\r\n      \r\n      return (\r\n        <div className=\"custom-tooltip\" style={{ \r\n          backgroundColor: '#fff', \r\n          padding: '10px', \r\n          border: '1px solid #ccc',\r\n          borderRadius: '4px',\r\n          boxShadow: '0 2px 4px rgba(0,0,0,0.1)'\r\n        }}>\r\n          <p style={{ \r\n            margin: '0 0 5px 0',\r\n            fontWeight: 'bold',\r\n            color: payload[0].color\r\n          }}>{data.name}</p>\r\n          <p style={{ margin: '0', color: '#666' }}>\r\n            Amount: ${data.value.toLocaleString()}\r\n          </p>\r\n          <p style={{ margin: '0', color: '#666' }}>\r\n            {percentage}% of total\r\n          </p>\r\n          \r\n          {/* Show subcategories if this is the \"Other\" category */}\r\n          {data.subCategories && (\r\n            <div style={{ marginTop: '8px', borderTop: '1px solid #eee', paddingTop: '8px' }}>\r\n              <p style={{ margin: '0 0 5px 0', fontWeight: 'bold' }}>Includes:</p>\r\n              {data.subCategories.slice(0, 3).map((subCat, index) => (\r\n                <p key={index} style={{ margin: '0', fontSize: '12px', color: '#666' }}>\r\n                  {subCat.name}: ${subCat.value.toLocaleString()} \r\n                  {subCat.percentage ? ` (${subCat.percentage.toFixed(1)}%)` : ''}\r\n                </p>\r\n              ))}\r\n              {data.subCategories.length > 3 && (\r\n                <p style={{ margin: '2px 0 0 0', fontSize: '12px', color: '#999', fontStyle: 'italic' }}>\r\n                  And {data.subCategories.length - 3} more categories...\r\n                </p>\r\n              )}\r\n            </div>\r\n          )}\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n  \r\n  // Custom legend that includes percentages\r\n  const renderCustomizedLegend = (props) => {\r\n    const { payload } = props;\r\n    const total = processedData.reduce((sum, item) => sum + item.value, 0);\r\n    \r\n    return (\r\n      <ul style={{ \r\n        listStyle: 'none', \r\n        padding: 0, \r\n        display: 'flex', \r\n        flexWrap: 'wrap',\r\n        justifyContent: 'center',\r\n        gap: '12px',\r\n        marginTop: '20px'\r\n      }}>\r\n        {payload.map((entry, index) => {\r\n          const category = processedData.find(item => item.name === entry.value);\r\n          const percentage = category ? ((category.value / total) * 100).toFixed(1) : '0.0';\r\n          \r\n          return (\r\n            <li key={`item-${index}`} style={{ \r\n              display: 'flex', \r\n              alignItems: 'center',\r\n              margin: '0',\r\n              cursor: 'pointer'\r\n            }}\r\n            onClick={() => handleSectionClick(category)}>\r\n              <div style={{ \r\n                width: '12px', \r\n                height: '12px', \r\n                backgroundColor: entry.color,\r\n                marginRight: '8px',\r\n                borderRadius: '2px'\r\n              }} />\r\n              <span style={{ fontSize: '14px' }}>\r\n                {entry.value}: {percentage}%\r\n              </span>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    );\r\n  };\r\n  \r\n  // Handle pie/donut section click (for drill-down)\r\n  const handleSectionClick = (data) => {\r\n    if (data && data.name === 'Other' && data.subCategories) {\r\n      setSelectedSection('Other');\r\n      setDrilldownData(data.subCategories);\r\n    } else if (selectedSection) {\r\n      // Go back to main view if we're in drilldown\r\n      setSelectedSection(null);\r\n      setDrilldownData(null);\r\n    }\r\n  };\r\n  \r\n  // Reset to main view (from drilldown)\r\n  const handleBackToMain = () => {\r\n    setSelectedSection(null);\r\n    setDrilldownData(null);\r\n  };\r\n  \r\n  // Render the pie/donut chart\r\n  const renderPieChart = (isDonut = false) => {\r\n    const dataToUse = drilldownData || processedData;\r\n    if (!dataToUse || dataToUse.length === 0) {\r\n      return <p>No data available for the selected categories</p>;\r\n    }\r\n    \r\n    // Calculate total for percentage labels\r\n    const total = dataToUse.reduce((sum, item) => sum + item.value, 0);\r\n    \r\n    // Only show label if percentage is above 5% to avoid clutter\r\n    const renderLabel = ({ name, value, cx, cy, midAngle, innerRadius, outerRadius, percent }) => {\r\n      if (percent < 0.05) return null; // Skip small slices\r\n      \r\n      const RADIAN = Math.PI / 180;\r\n      const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\r\n      const x = cx + radius * Math.cos(-midAngle * RADIAN);\r\n      const y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n      \r\n      return (\r\n        <text \r\n          x={x} \r\n          y={y} \r\n          fill=\"white\" \r\n          textAnchor={x > cx ? 'start' : 'end'} \r\n          dominantBaseline=\"central\"\r\n          fontSize=\"12\"\r\n          fontWeight=\"bold\"\r\n        >\r\n          {`${(percent * 100).toFixed(0)}%`}\r\n        </text>\r\n      );\r\n    };\r\n    \r\n    return (\r\n      <ResponsiveContainer width=\"100%\" height={350}>\r\n        <PieChart onClick={drilldownData ? handleBackToMain : undefined}\r\n                 style={{ cursor: drilldownData ? 'pointer' : 'default' }}>\r\n          <Pie\r\n            data={dataToUse}\r\n            cx=\"50%\"\r\n            cy=\"50%\"\r\n            labelLine={false}\r\n            label={renderLabel}\r\n            outerRadius={120}\r\n            innerRadius={isDonut ? 60 : 0}\r\n            fill=\"#8884d8\"\r\n            dataKey=\"value\"\r\n            paddingAngle={2}\r\n            onClick={handleSectionClick}\r\n          >\r\n            {dataToUse.map((entry, index) => (\r\n              <Cell \r\n                key={`cell-${index}`} \r\n                fill={COLORS[index % COLORS.length]} \r\n                style={{ cursor: 'pointer' }}\r\n              />\r\n            ))}\r\n          </Pie>\r\n          <Tooltip content={<CustomTooltip />} />\r\n          <Legend \r\n            content={renderCustomizedLegend}\r\n            verticalAlign=\"bottom\"\r\n          />\r\n        </PieChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  };\r\n  \r\n  // Render the horizontal bar chart (good for many categories)\r\n  const renderBarChart = () => {\r\n    const dataToUse = drilldownData || processedData;\r\n    if (!dataToUse || dataToUse.length === 0) {\r\n      return <p>No data available for the selected categories</p>;\r\n    }\r\n    \r\n    // Sort data by value (descending) for the bar chart\r\n    const sortedData = [...dataToUse].sort((a, b) => b.value - a.value);\r\n    \r\n    return (\r\n      <ResponsiveContainer width=\"100%\" height={Math.max(350, sortedData.length * 40)}>\r\n        <BarChart \r\n          data={sortedData}\r\n          layout=\"vertical\"\r\n          margin={{ top: 5, right: 30, left: 90, bottom: 5 }}\r\n          onClick={drilldownData ? handleBackToMain : undefined}\r\n          style={{ cursor: drilldownData ? 'pointer' : 'default' }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis type=\"number\" tickFormatter={(value) => `$${value}`} />\r\n          <YAxis \r\n            type=\"category\" \r\n            dataKey=\"name\" \r\n            width={80}\r\n            tick={{ fontSize: 12 }}\r\n          />\r\n          <Tooltip \r\n            formatter={(value) => [`$${value.toLocaleString()}`, 'Amount']}\r\n          />\r\n          <Bar dataKey=\"value\" onClick={handleSectionClick}>\r\n            {sortedData.map((entry, index) => (\r\n              <Cell \r\n                key={`cell-${index}`} \r\n                fill={COLORS[index % COLORS.length]} \r\n              />\r\n            ))}\r\n          </Bar>\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  };\r\n  \r\n  return (\r\n    <div style={{ width: '100%' }}>\r\n      <div style={{ \r\n        display: 'flex', \r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        marginBottom: '16px'\r\n      }}>\r\n        <h3 style={{ \r\n          textAlign: 'center', \r\n          color: '#333',\r\n          margin: 0\r\n        }}>\r\n          {selectedSection ? `${selectedSection} Breakdown` : title}\r\n        </h3>\r\n        \r\n        <div style={{ display: 'flex', gap: '8px' }}>\r\n          {selectedSection && (\r\n            <button\r\n              onClick={handleBackToMain}\r\n              style={{\r\n                background: '#f0f0f0',\r\n                border: 'none',\r\n                padding: '4px 8px',\r\n                borderRadius: '4px',\r\n                cursor: 'pointer',\r\n                fontSize: '14px'\r\n              }}\r\n            >\r\n              ← Back to Main View\r\n            </button>\r\n          )}\r\n          \r\n          <select \r\n            value={displayType}\r\n            onChange={(e) => setDisplayType(e.target.value)}\r\n            style={{\r\n              padding: '4px 8px',\r\n              borderRadius: '4px',\r\n              border: '1px solid #ddd',\r\n              backgroundColor: 'white'\r\n            }}\r\n          >\r\n            <option value=\"pie\">Pie Chart</option>\r\n            <option value=\"donut\">Donut Chart</option>\r\n            <option value=\"bar\">Bar Chart</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Render the appropriate chart type */}\r\n      {displayType === 'pie' && renderPieChart(false)}\r\n      {displayType === 'donut' && renderPieChart(true)}\r\n      {displayType === 'bar' && renderBarChart()}\r\n      \r\n      {/* Help text for interaction */}\r\n      <p style={{ \r\n        fontSize: '12px', \r\n        color: '#666', \r\n        textAlign: 'center',\r\n        fontStyle: 'italic',\r\n        marginTop: '8px'\r\n      }}>\r\n        {drilldownData \r\n          ? 'Click anywhere on the chart to return to the main view' \r\n          : 'Click on a section or legend item to see more details'}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EnhancedCategoryChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}